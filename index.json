{
  "api/CG.Green.Areas.Identity.html": {
    "href": "api/CG.Green.Areas.Identity.html",
    "title": "Namespace CG.Green.Areas.Identity",
    "keywords": "Namespace CG.Green.Areas.Identity Classes RevalidatingIdentityAuthenticationStateProvider<TUser> This class receive an authentication state from the host environment, and revalidates that state at regular intervals."
  },
  "api/CG.Green.Areas.Identity.Pages.Account.AccessDeniedModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.AccessDeniedModel.html",
    "title": "Class AccessDeniedModel",
    "keywords": "Class AccessDeniedModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Inheritance System.Object AccessDeniedModel Namespace : CG.Green.Areas.Identity.Pages.Account Assembly : CG.Green.Identity.dll Syntax public class AccessDeniedModel : PageModel Methods OnGet() This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public void OnGet()"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.ConfirmEmailChangeModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.ConfirmEmailChangeModel.html",
    "title": "Class ConfirmEmailChangeModel",
    "keywords": "Class ConfirmEmailChangeModel Inheritance System.Object ConfirmEmailChangeModel Namespace : CG.Green.Areas.Identity.Pages.Account Assembly : CG.Green.Identity.dll Syntax public class ConfirmEmailChangeModel : PageModel Constructors ConfirmEmailChangeModel(UserManager<GreenUser>, SignInManager<GreenUser>) Declaration public ConfirmEmailChangeModel(UserManager<GreenUser> userManager, SignInManager<GreenUser> signInManager) Parameters Type Name Description UserManager < GreenUser > userManager SignInManager < GreenUser > signInManager Fields _signInManager Declaration readonly SignInManager<GreenUser> _signInManager Field Value Type Description SignInManager < GreenUser > _userManager Declaration readonly UserManager<GreenUser> _userManager Field Value Type Description UserManager < GreenUser > Properties StatusMessage This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string StatusMessage { get; set; } Property Value Type Description System.String Methods OnGetAsync(String, String, String) Declaration public async Task<IActionResult> OnGetAsync(string userId, string email, string code) Parameters Type Name Description System.String userId System.String email System.String code Returns Type Description Task < IActionResult >"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.ConfirmEmailModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.ConfirmEmailModel.html",
    "title": "Class ConfirmEmailModel",
    "keywords": "Class ConfirmEmailModel Inheritance System.Object ConfirmEmailModel Namespace : CG.Green.Areas.Identity.Pages.Account Assembly : CG.Green.Identity.dll Syntax public class ConfirmEmailModel : PageModel Constructors ConfirmEmailModel(UserManager<GreenUser>) Declaration public ConfirmEmailModel(UserManager<GreenUser> userManager) Parameters Type Name Description UserManager < GreenUser > userManager Fields _userManager Declaration readonly UserManager<GreenUser> _userManager Field Value Type Description UserManager < GreenUser > Properties StatusMessage This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string StatusMessage { get; set; } Property Value Type Description System.String Methods OnGetAsync(String, String) Declaration public async Task<IActionResult> OnGetAsync(string userId, string code) Parameters Type Name Description System.String userId System.String code Returns Type Description Task < IActionResult >"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.ExternalLoginModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.ExternalLoginModel.html",
    "title": "Class ExternalLoginModel",
    "keywords": "Class ExternalLoginModel Inheritance System.Object ExternalLoginModel Namespace : CG.Green.Areas.Identity.Pages.Account Assembly : CG.Green.Identity.dll Syntax public class ExternalLoginModel : PageModel Constructors ExternalLoginModel(SignInManager<GreenUser>, UserManager<GreenUser>, IUserStore<GreenUser>, ILogger<ExternalLoginModel>, IEmailSender, TemplateProcessor) Declaration public ExternalLoginModel(SignInManager<GreenUser> signInManager, UserManager<GreenUser> userManager, IUserStore<GreenUser> userStore, ILogger<ExternalLoginModel> logger, IEmailSender emailSender, TemplateProcessor templateProcessor) Parameters Type Name Description SignInManager < GreenUser > signInManager UserManager < GreenUser > userManager IUserStore < GreenUser > userStore ILogger < ExternalLoginModel > logger IEmailSender emailSender TemplateProcessor templateProcessor Fields _emailSender Declaration readonly IEmailSender _emailSender Field Value Type Description IEmailSender _emailStore Declaration readonly IUserEmailStore<GreenUser> _emailStore Field Value Type Description IUserEmailStore < GreenUser > _logger Declaration readonly ILogger<ExternalLoginModel> _logger Field Value Type Description ILogger < ExternalLoginModel > _signInManager Declaration readonly SignInManager<GreenUser> _signInManager Field Value Type Description SignInManager < GreenUser > _templateProcessor Declaration readonly TemplateProcessor _templateProcessor Field Value Type Description TemplateProcessor _userManager Declaration readonly UserManager<GreenUser> _userManager Field Value Type Description UserManager < GreenUser > _userStore Declaration readonly IUserStore<GreenUser> _userStore Field Value Type Description IUserStore < GreenUser > Properties ErrorMessage This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string ErrorMessage { get; set; } Property Value Type Description System.String Input This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public ExternalLoginModel.InputModel Input { get; set; } Property Value Type Description ExternalLoginModel.InputModel ProviderDisplayName This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string ProviderDisplayName { get; set; } Property Value Type Description System.String ReturnUrl This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string ReturnUrl { get; set; } Property Value Type Description System.String Methods CreateUser() Declaration GreenUser CreateUser() Returns Type Description GreenUser GetEmailStore() Declaration IUserEmailStore<GreenUser> GetEmailStore() Returns Type Description IUserEmailStore < GreenUser > OnGet() Declaration public IActionResult OnGet() Returns Type Description IActionResult OnGetCallbackAsync(String, String) Declaration public async Task<IActionResult> OnGetCallbackAsync(string returnUrl = null, string remoteError = null) Parameters Type Name Description System.String returnUrl System.String remoteError Returns Type Description Task < IActionResult > OnPost(String, String) Declaration public IActionResult OnPost(string provider, string returnUrl = null) Parameters Type Name Description System.String provider System.String returnUrl Returns Type Description IActionResult OnPostConfirmationAsync(String) Declaration public async Task<IActionResult> OnPostConfirmationAsync(string returnUrl = null) Parameters Type Name Description System.String returnUrl Returns Type Description Task < IActionResult >"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.ExternalLoginModel.InputModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.ExternalLoginModel.InputModel.html",
    "title": "Class ExternalLoginModel.InputModel",
    "keywords": "Class ExternalLoginModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Inheritance System.Object ExternalLoginModel.InputModel Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Areas.Identity.Pages.Account Assembly : CG.Green.Identity.dll Syntax public class InputModel Properties Email This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string Email { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.ForgotPasswordConfirmation.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.ForgotPasswordConfirmation.html",
    "title": "Class ForgotPasswordConfirmation",
    "keywords": "Class ForgotPasswordConfirmation This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Inheritance System.Object Microsoft.AspNetCore.Mvc.RazorPages.PageModel ForgotPasswordConfirmation Implements Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter Microsoft.AspNetCore.Mvc.Filters.IPageFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata Inherited Members Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.NotFound() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.NotFound(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Page() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Redirect(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Unauthorized() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Partial(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Partial(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerSelected(Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecuting(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecuted(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerSelectionAsync(Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext, Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutionDelegate) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PageContext Microsoft.AspNetCore.Mvc.RazorPages.PageModel.HttpContext Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Request Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Response Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RouteData Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ModelState Microsoft.AspNetCore.Mvc.RazorPages.PageModel.User Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TempData Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Url Microsoft.AspNetCore.Mvc.RazorPages.PageModel.MetadataProvider Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewData System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Areas.Identity.Pages.Account Assembly : CG.Green.Identity.dll Syntax [AllowAnonymous] public class ForgotPasswordConfirmation : PageModel, IAsyncPageFilter, IPageFilter, IFilterMetadata Methods OnGet() This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public void OnGet() Implements Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter Microsoft.AspNetCore.Mvc.Filters.IPageFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.ForgotPasswordModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.ForgotPasswordModel.html",
    "title": "Class ForgotPasswordModel",
    "keywords": "Class ForgotPasswordModel Inheritance System.Object ForgotPasswordModel Namespace : CG.Green.Areas.Identity.Pages.Account Assembly : CG.Green.Identity.dll Syntax public class ForgotPasswordModel : PageModel Constructors ForgotPasswordModel(UserManager<GreenUser>, IEmailSender, TemplateProcessor) Declaration public ForgotPasswordModel(UserManager<GreenUser> userManager, IEmailSender emailSender, TemplateProcessor templateProcessor) Parameters Type Name Description UserManager < GreenUser > userManager IEmailSender emailSender TemplateProcessor templateProcessor Fields _emailSender Declaration readonly IEmailSender _emailSender Field Value Type Description IEmailSender _templateProcessor Declaration readonly TemplateProcessor _templateProcessor Field Value Type Description TemplateProcessor _userManager Declaration readonly UserManager<GreenUser> _userManager Field Value Type Description UserManager < GreenUser > Properties Input This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public ForgotPasswordModel.InputModel Input { get; set; } Property Value Type Description ForgotPasswordModel.InputModel Methods OnPostAsync() Declaration public async Task<IActionResult> OnPostAsync() Returns Type Description Task < IActionResult >"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.ForgotPasswordModel.InputModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.ForgotPasswordModel.InputModel.html",
    "title": "Class ForgotPasswordModel.InputModel",
    "keywords": "Class ForgotPasswordModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Inheritance System.Object ForgotPasswordModel.InputModel Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Areas.Identity.Pages.Account Assembly : CG.Green.Identity.dll Syntax public class InputModel Properties Email This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string Email { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.html",
    "title": "Namespace CG.Green.Areas.Identity.Pages.Account",
    "keywords": "Namespace CG.Green.Areas.Identity.Pages.Account Classes AccessDeniedModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. ConfirmEmailChangeModel ConfirmEmailModel ExternalLoginModel ExternalLoginModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. ForgotPasswordConfirmation This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. ForgotPasswordModel ForgotPasswordModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. LockoutModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. LoginModel LoginModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. LoginWith2faModel LoginWith2faModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. LoginWithRecoveryCodeModel LoginWithRecoveryCodeModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. RegisterConfirmationModel RegisterModel RegisterModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. ResendEmailConfirmationModel ResendEmailConfirmationModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. ResetPasswordConfirmationModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. ResetPasswordModel ResetPasswordModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases."
  },
  "api/CG.Green.Areas.Identity.Pages.Account.LockoutModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.LockoutModel.html",
    "title": "Class LockoutModel",
    "keywords": "Class LockoutModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Inheritance System.Object Microsoft.AspNetCore.Mvc.RazorPages.PageModel LockoutModel Implements Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter Microsoft.AspNetCore.Mvc.Filters.IPageFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata Inherited Members Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.NotFound() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.NotFound(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Page() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Redirect(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Unauthorized() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Partial(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Partial(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerSelected(Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecuting(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecuted(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerSelectionAsync(Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext, Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutionDelegate) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PageContext Microsoft.AspNetCore.Mvc.RazorPages.PageModel.HttpContext Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Request Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Response Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RouteData Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ModelState Microsoft.AspNetCore.Mvc.RazorPages.PageModel.User Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TempData Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Url Microsoft.AspNetCore.Mvc.RazorPages.PageModel.MetadataProvider Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewData System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Areas.Identity.Pages.Account Assembly : CG.Green.Identity.dll Syntax [AllowAnonymous] public class LockoutModel : PageModel, IAsyncPageFilter, IPageFilter, IFilterMetadata Methods OnGet() This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public void OnGet() Implements Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter Microsoft.AspNetCore.Mvc.Filters.IPageFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.LoginModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.LoginModel.html",
    "title": "Class LoginModel",
    "keywords": "Class LoginModel Inheritance System.Object LoginModel Namespace : CG.Green.Areas.Identity.Pages.Account Assembly : CG.Green.Identity.dll Syntax public class LoginModel : PageModel Constructors LoginModel(SignInManager<GreenUser>, ILogger<LoginModel>) Declaration public LoginModel(SignInManager<GreenUser> signInManager, ILogger<LoginModel> logger) Parameters Type Name Description SignInManager < GreenUser > signInManager ILogger < LoginModel > logger Fields _logger Declaration readonly ILogger<LoginModel> _logger Field Value Type Description ILogger < LoginModel > _signInManager Declaration readonly SignInManager<GreenUser> _signInManager Field Value Type Description SignInManager < GreenUser > Properties ErrorMessage This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string ErrorMessage { get; set; } Property Value Type Description System.String ExternalLogins This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public IList<AuthenticationScheme> ExternalLogins { get; set; } Property Value Type Description IList < AuthenticationScheme > Input This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public LoginModel.InputModel Input { get; set; } Property Value Type Description LoginModel.InputModel ReturnUrl This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string ReturnUrl { get; set; } Property Value Type Description System.String Methods OnGetAsync(String) Declaration public async Task OnGetAsync(string returnUrl = null) Parameters Type Name Description System.String returnUrl Returns Type Description Task OnPostAsync(String) Declaration public async Task<IActionResult> OnPostAsync(string returnUrl = null) Parameters Type Name Description System.String returnUrl Returns Type Description Task < IActionResult >"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.LoginModel.InputModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.LoginModel.InputModel.html",
    "title": "Class LoginModel.InputModel",
    "keywords": "Class LoginModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Inheritance System.Object LoginModel.InputModel Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Areas.Identity.Pages.Account Assembly : CG.Green.Identity.dll Syntax public class InputModel Properties Password This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string Password { get; set; } Property Value Type Description System.String RememberMe This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public bool RememberMe { get; set; } Property Value Type Description System.Boolean UserName This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string UserName { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.LoginWith2faModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.LoginWith2faModel.html",
    "title": "Class LoginWith2faModel",
    "keywords": "Class LoginWith2faModel Inheritance System.Object LoginWith2faModel Namespace : CG.Green.Areas.Identity.Pages.Account Assembly : CG.Green.Identity.dll Syntax public class LoginWith2faModel : PageModel Constructors LoginWith2faModel(SignInManager<GreenUser>, UserManager<GreenUser>, ILogger<LoginWith2faModel>) Declaration public LoginWith2faModel(SignInManager<GreenUser> signInManager, UserManager<GreenUser> userManager, ILogger<LoginWith2faModel> logger) Parameters Type Name Description SignInManager < GreenUser > signInManager UserManager < GreenUser > userManager ILogger < LoginWith2faModel > logger Fields _logger Declaration readonly ILogger<LoginWith2faModel> _logger Field Value Type Description ILogger < LoginWith2faModel > _signInManager Declaration readonly SignInManager<GreenUser> _signInManager Field Value Type Description SignInManager < GreenUser > _userManager Declaration readonly UserManager<GreenUser> _userManager Field Value Type Description UserManager < GreenUser > Properties Input This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public LoginWith2faModel.InputModel Input { get; set; } Property Value Type Description LoginWith2faModel.InputModel RememberMe This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public bool RememberMe { get; set; } Property Value Type Description System.Boolean ReturnUrl This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string ReturnUrl { get; set; } Property Value Type Description System.String Methods OnGetAsync(Boolean, String) Declaration public async Task<IActionResult> OnGetAsync(bool rememberMe, string returnUrl = null) Parameters Type Name Description System.Boolean rememberMe System.String returnUrl Returns Type Description Task < IActionResult > OnPostAsync(Boolean, String) Declaration public async Task<IActionResult> OnPostAsync(bool rememberMe, string returnUrl = null) Parameters Type Name Description System.Boolean rememberMe System.String returnUrl Returns Type Description Task < IActionResult >"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.LoginWith2faModel.InputModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.LoginWith2faModel.InputModel.html",
    "title": "Class LoginWith2faModel.InputModel",
    "keywords": "Class LoginWith2faModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Inheritance System.Object LoginWith2faModel.InputModel Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Areas.Identity.Pages.Account Assembly : CG.Green.Identity.dll Syntax public class InputModel Properties RememberMachine This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public bool RememberMachine { get; set; } Property Value Type Description System.Boolean TwoFactorCode This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string TwoFactorCode { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.LoginWithRecoveryCodeModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.LoginWithRecoveryCodeModel.html",
    "title": "Class LoginWithRecoveryCodeModel",
    "keywords": "Class LoginWithRecoveryCodeModel Inheritance System.Object LoginWithRecoveryCodeModel Namespace : CG.Green.Areas.Identity.Pages.Account Assembly : CG.Green.Identity.dll Syntax public class LoginWithRecoveryCodeModel : PageModel Constructors LoginWithRecoveryCodeModel(SignInManager<GreenUser>, UserManager<GreenUser>, ILogger<LoginWithRecoveryCodeModel>) Declaration public LoginWithRecoveryCodeModel(SignInManager<GreenUser> signInManager, UserManager<GreenUser> userManager, ILogger<LoginWithRecoveryCodeModel> logger) Parameters Type Name Description SignInManager < GreenUser > signInManager UserManager < GreenUser > userManager ILogger < LoginWithRecoveryCodeModel > logger Fields _logger Declaration readonly ILogger<LoginWithRecoveryCodeModel> _logger Field Value Type Description ILogger < LoginWithRecoveryCodeModel > _signInManager Declaration readonly SignInManager<GreenUser> _signInManager Field Value Type Description SignInManager < GreenUser > _userManager Declaration readonly UserManager<GreenUser> _userManager Field Value Type Description UserManager < GreenUser > Properties Input This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public LoginWithRecoveryCodeModel.InputModel Input { get; set; } Property Value Type Description LoginWithRecoveryCodeModel.InputModel ReturnUrl This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string ReturnUrl { get; set; } Property Value Type Description System.String Methods OnGetAsync(String) Declaration public async Task<IActionResult> OnGetAsync(string returnUrl = null) Parameters Type Name Description System.String returnUrl Returns Type Description Task < IActionResult > OnPostAsync(String) Declaration public async Task<IActionResult> OnPostAsync(string returnUrl = null) Parameters Type Name Description System.String returnUrl Returns Type Description Task < IActionResult >"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.LoginWithRecoveryCodeModel.InputModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.LoginWithRecoveryCodeModel.InputModel.html",
    "title": "Class LoginWithRecoveryCodeModel.InputModel",
    "keywords": "Class LoginWithRecoveryCodeModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Inheritance System.Object LoginWithRecoveryCodeModel.InputModel Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Areas.Identity.Pages.Account Assembly : CG.Green.Identity.dll Syntax public class InputModel Properties RecoveryCode This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string RecoveryCode { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.Manage.ChangePasswordModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.Manage.ChangePasswordModel.html",
    "title": "Class ChangePasswordModel",
    "keywords": "Class ChangePasswordModel Inheritance System.Object ChangePasswordModel Namespace : CG.Green.Areas.Identity.Pages.Account.Manage Assembly : CG.Green.Identity.dll Syntax public class ChangePasswordModel : PageModel Constructors ChangePasswordModel(UserManager<GreenUser>, SignInManager<GreenUser>, ILogger<ChangePasswordModel>) Declaration public ChangePasswordModel(UserManager<GreenUser> userManager, SignInManager<GreenUser> signInManager, ILogger<ChangePasswordModel> logger) Parameters Type Name Description UserManager < GreenUser > userManager SignInManager < GreenUser > signInManager ILogger < ChangePasswordModel > logger Fields _logger Declaration readonly ILogger<ChangePasswordModel> _logger Field Value Type Description ILogger < ChangePasswordModel > _signInManager Declaration readonly SignInManager<GreenUser> _signInManager Field Value Type Description SignInManager < GreenUser > _userManager Declaration readonly UserManager<GreenUser> _userManager Field Value Type Description UserManager < GreenUser > Properties Input This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public ChangePasswordModel.InputModel Input { get; set; } Property Value Type Description ChangePasswordModel.InputModel StatusMessage This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string StatusMessage { get; set; } Property Value Type Description System.String Methods OnGetAsync() Declaration public async Task<IActionResult> OnGetAsync() Returns Type Description Task < IActionResult > OnPostAsync() Declaration public async Task<IActionResult> OnPostAsync() Returns Type Description Task < IActionResult >"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.Manage.ChangePasswordModel.InputModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.Manage.ChangePasswordModel.InputModel.html",
    "title": "Class ChangePasswordModel.InputModel",
    "keywords": "Class ChangePasswordModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Inheritance System.Object ChangePasswordModel.InputModel Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Areas.Identity.Pages.Account.Manage Assembly : CG.Green.Identity.dll Syntax public class InputModel Properties ConfirmPassword This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string ConfirmPassword { get; set; } Property Value Type Description System.String NewPassword This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string NewPassword { get; set; } Property Value Type Description System.String OldPassword This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string OldPassword { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.Manage.DeletePersonalDataModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.Manage.DeletePersonalDataModel.html",
    "title": "Class DeletePersonalDataModel",
    "keywords": "Class DeletePersonalDataModel Inheritance System.Object DeletePersonalDataModel Namespace : CG.Green.Areas.Identity.Pages.Account.Manage Assembly : CG.Green.Identity.dll Syntax public class DeletePersonalDataModel : PageModel Constructors DeletePersonalDataModel(UserManager<GreenUser>, SignInManager<GreenUser>, ILogger<DeletePersonalDataModel>) Declaration public DeletePersonalDataModel(UserManager<GreenUser> userManager, SignInManager<GreenUser> signInManager, ILogger<DeletePersonalDataModel> logger) Parameters Type Name Description UserManager < GreenUser > userManager SignInManager < GreenUser > signInManager ILogger < DeletePersonalDataModel > logger Fields _logger Declaration readonly ILogger<DeletePersonalDataModel> _logger Field Value Type Description ILogger < DeletePersonalDataModel > _signInManager Declaration readonly SignInManager<GreenUser> _signInManager Field Value Type Description SignInManager < GreenUser > _userManager Declaration readonly UserManager<GreenUser> _userManager Field Value Type Description UserManager < GreenUser > Properties Input This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public DeletePersonalDataModel.InputModel Input { get; set; } Property Value Type Description DeletePersonalDataModel.InputModel RequirePassword This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public bool RequirePassword { get; set; } Property Value Type Description System.Boolean Methods OnGet() Declaration public async Task<IActionResult> OnGet() Returns Type Description Task < IActionResult > OnPostAsync() Declaration public async Task<IActionResult> OnPostAsync() Returns Type Description Task < IActionResult >"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.Manage.DeletePersonalDataModel.InputModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.Manage.DeletePersonalDataModel.InputModel.html",
    "title": "Class DeletePersonalDataModel.InputModel",
    "keywords": "Class DeletePersonalDataModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Inheritance System.Object DeletePersonalDataModel.InputModel Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Areas.Identity.Pages.Account.Manage Assembly : CG.Green.Identity.dll Syntax public class InputModel Properties Password This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string Password { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.Manage.Disable2faModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.Manage.Disable2faModel.html",
    "title": "Class Disable2faModel",
    "keywords": "Class Disable2faModel Inheritance System.Object Disable2faModel Namespace : CG.Green.Areas.Identity.Pages.Account.Manage Assembly : CG.Green.Identity.dll Syntax public class Disable2faModel : PageModel Constructors Disable2faModel(UserManager<GreenUser>, ILogger<Disable2faModel>) Declaration public Disable2faModel(UserManager<GreenUser> userManager, ILogger<Disable2faModel> logger) Parameters Type Name Description UserManager < GreenUser > userManager ILogger < Disable2faModel > logger Fields _logger Declaration readonly ILogger<Disable2faModel> _logger Field Value Type Description ILogger < Disable2faModel > _userManager Declaration readonly UserManager<GreenUser> _userManager Field Value Type Description UserManager < GreenUser > Properties StatusMessage This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string StatusMessage { get; set; } Property Value Type Description System.String Methods OnGet() Declaration public async Task<IActionResult> OnGet() Returns Type Description Task < IActionResult > OnPostAsync() Declaration public async Task<IActionResult> OnPostAsync() Returns Type Description Task < IActionResult >"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.Manage.DownloadPersonalDataModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.Manage.DownloadPersonalDataModel.html",
    "title": "Class DownloadPersonalDataModel",
    "keywords": "Class DownloadPersonalDataModel Inheritance System.Object DownloadPersonalDataModel Namespace : CG.Green.Areas.Identity.Pages.Account.Manage Assembly : CG.Green.Identity.dll Syntax public class DownloadPersonalDataModel : PageModel Constructors DownloadPersonalDataModel(UserManager<GreenUser>, ILogger<DownloadPersonalDataModel>) Declaration public DownloadPersonalDataModel(UserManager<GreenUser> userManager, ILogger<DownloadPersonalDataModel> logger) Parameters Type Name Description UserManager < GreenUser > userManager ILogger < DownloadPersonalDataModel > logger Fields _logger Declaration readonly ILogger<DownloadPersonalDataModel> _logger Field Value Type Description ILogger < DownloadPersonalDataModel > _userManager Declaration readonly UserManager<GreenUser> _userManager Field Value Type Description UserManager < GreenUser > Methods OnGet() Declaration public IActionResult OnGet() Returns Type Description IActionResult OnPostAsync() Declaration public async Task<IActionResult> OnPostAsync() Returns Type Description Task < IActionResult >"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.Manage.EmailModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.Manage.EmailModel.html",
    "title": "Class EmailModel",
    "keywords": "Class EmailModel Inheritance System.Object EmailModel Namespace : CG.Green.Areas.Identity.Pages.Account.Manage Assembly : CG.Green.Identity.dll Syntax public class EmailModel : PageModel Constructors EmailModel(UserManager<GreenUser>, SignInManager<GreenUser>, IEmailSender, TemplateProcessor) Declaration public EmailModel(UserManager<GreenUser> userManager, SignInManager<GreenUser> signInManager, IEmailSender emailSender, TemplateProcessor templateProcessor) Parameters Type Name Description UserManager < GreenUser > userManager SignInManager < GreenUser > signInManager IEmailSender emailSender TemplateProcessor templateProcessor Fields _emailSender Declaration readonly IEmailSender _emailSender Field Value Type Description IEmailSender _signInManager Declaration readonly SignInManager<GreenUser> _signInManager Field Value Type Description SignInManager < GreenUser > _templateProcessor Declaration readonly TemplateProcessor _templateProcessor Field Value Type Description TemplateProcessor _userManager Declaration readonly UserManager<GreenUser> _userManager Field Value Type Description UserManager < GreenUser > Properties Email This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string Email { get; set; } Property Value Type Description System.String Input This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public EmailModel.InputModel Input { get; set; } Property Value Type Description EmailModel.InputModel IsEmailConfirmed This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public bool IsEmailConfirmed { get; set; } Property Value Type Description System.Boolean StatusMessage This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string StatusMessage { get; set; } Property Value Type Description System.String Methods LoadAsync(GreenUser) Declaration async Task LoadAsync(GreenUser user) Parameters Type Name Description GreenUser user Returns Type Description Task OnGetAsync() Declaration public async Task<IActionResult> OnGetAsync() Returns Type Description Task < IActionResult > OnPostChangeEmailAsync() Declaration public async Task<IActionResult> OnPostChangeEmailAsync() Returns Type Description Task < IActionResult > OnPostSendVerificationEmailAsync() Declaration public async Task<IActionResult> OnPostSendVerificationEmailAsync() Returns Type Description Task < IActionResult >"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.Manage.EmailModel.InputModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.Manage.EmailModel.InputModel.html",
    "title": "Class EmailModel.InputModel",
    "keywords": "Class EmailModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Inheritance System.Object EmailModel.InputModel Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Areas.Identity.Pages.Account.Manage Assembly : CG.Green.Identity.dll Syntax public class InputModel Properties NewEmail This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string NewEmail { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.Manage.EnableAuthenticatorModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.Manage.EnableAuthenticatorModel.html",
    "title": "Class EnableAuthenticatorModel",
    "keywords": "Class EnableAuthenticatorModel Inheritance System.Object EnableAuthenticatorModel Namespace : CG.Green.Areas.Identity.Pages.Account.Manage Assembly : CG.Green.Identity.dll Syntax public class EnableAuthenticatorModel : PageModel Constructors EnableAuthenticatorModel(UserManager<GreenUser>, ILogger<EnableAuthenticatorModel>, UrlEncoder) Declaration public EnableAuthenticatorModel(UserManager<GreenUser> userManager, ILogger<EnableAuthenticatorModel> logger, UrlEncoder urlEncoder) Parameters Type Name Description UserManager < GreenUser > userManager ILogger < EnableAuthenticatorModel > logger UrlEncoder urlEncoder Fields _logger Declaration readonly ILogger<EnableAuthenticatorModel> _logger Field Value Type Description ILogger < EnableAuthenticatorModel > _urlEncoder Declaration readonly UrlEncoder _urlEncoder Field Value Type Description UrlEncoder _userManager Declaration readonly UserManager<GreenUser> _userManager Field Value Type Description UserManager < GreenUser > AuthenticatorUriFormat Declaration const string AuthenticatorUriFormat = \"otpauth://totp/{0}:{1}?secret={2}&issuer={0}&digits=6\" Field Value Type Description System.String Properties AuthenticatorUri This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string AuthenticatorUri { get; set; } Property Value Type Description System.String Input This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public EnableAuthenticatorModel.InputModel Input { get; set; } Property Value Type Description EnableAuthenticatorModel.InputModel RecoveryCodes This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string[] RecoveryCodes { get; set; } Property Value Type Description System.String [] SharedKey This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string SharedKey { get; set; } Property Value Type Description System.String StatusMessage This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string StatusMessage { get; set; } Property Value Type Description System.String Methods FormatKey(String) Declaration string FormatKey(string unformattedKey) Parameters Type Name Description System.String unformattedKey Returns Type Description System.String GenerateQrCodeUri(String, String) Declaration string GenerateQrCodeUri(string email, string unformattedKey) Parameters Type Name Description System.String email System.String unformattedKey Returns Type Description System.String LoadSharedKeyAndQrCodeUriAsync(GreenUser) Declaration async Task LoadSharedKeyAndQrCodeUriAsync(GreenUser user) Parameters Type Name Description GreenUser user Returns Type Description Task OnGetAsync() Declaration public async Task<IActionResult> OnGetAsync() Returns Type Description Task < IActionResult > OnPostAsync() Declaration public async Task<IActionResult> OnPostAsync() Returns Type Description Task < IActionResult >"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.Manage.EnableAuthenticatorModel.InputModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.Manage.EnableAuthenticatorModel.InputModel.html",
    "title": "Class EnableAuthenticatorModel.InputModel",
    "keywords": "Class EnableAuthenticatorModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Inheritance System.Object EnableAuthenticatorModel.InputModel Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Areas.Identity.Pages.Account.Manage Assembly : CG.Green.Identity.dll Syntax public class InputModel Properties Code This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string Code { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.Manage.ExternalLoginsModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.Manage.ExternalLoginsModel.html",
    "title": "Class ExternalLoginsModel",
    "keywords": "Class ExternalLoginsModel Inheritance System.Object ExternalLoginsModel Namespace : CG.Green.Areas.Identity.Pages.Account.Manage Assembly : CG.Green.Identity.dll Syntax public class ExternalLoginsModel : PageModel Constructors ExternalLoginsModel(UserManager<GreenUser>, SignInManager<GreenUser>, IUserStore<GreenUser>) Declaration public ExternalLoginsModel(UserManager<GreenUser> userManager, SignInManager<GreenUser> signInManager, IUserStore<GreenUser> userStore) Parameters Type Name Description UserManager < GreenUser > userManager SignInManager < GreenUser > signInManager IUserStore < GreenUser > userStore Fields _signInManager Declaration readonly SignInManager<GreenUser> _signInManager Field Value Type Description SignInManager < GreenUser > _userManager Declaration readonly UserManager<GreenUser> _userManager Field Value Type Description UserManager < GreenUser > _userStore Declaration readonly IUserStore<GreenUser> _userStore Field Value Type Description IUserStore < GreenUser > Properties CurrentLogins This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public IList<UserLoginInfo> CurrentLogins { get; set; } Property Value Type Description IList < UserLoginInfo > OtherLogins This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public IList<AuthenticationScheme> OtherLogins { get; set; } Property Value Type Description IList < AuthenticationScheme > ShowRemoveButton This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public bool ShowRemoveButton { get; set; } Property Value Type Description System.Boolean StatusMessage This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string StatusMessage { get; set; } Property Value Type Description System.String Methods OnGetAsync() Declaration public async Task<IActionResult> OnGetAsync() Returns Type Description Task < IActionResult > OnGetLinkLoginCallbackAsync() Declaration public async Task<IActionResult> OnGetLinkLoginCallbackAsync() Returns Type Description Task < IActionResult > OnPostLinkLoginAsync(String) Declaration public async Task<IActionResult> OnPostLinkLoginAsync(string provider) Parameters Type Name Description System.String provider Returns Type Description Task < IActionResult > OnPostRemoveLoginAsync(String, String) Declaration public async Task<IActionResult> OnPostRemoveLoginAsync(string loginProvider, string providerKey) Parameters Type Name Description System.String loginProvider System.String providerKey Returns Type Description Task < IActionResult >"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.Manage.GenerateRecoveryCodesModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.Manage.GenerateRecoveryCodesModel.html",
    "title": "Class GenerateRecoveryCodesModel",
    "keywords": "Class GenerateRecoveryCodesModel Inheritance System.Object GenerateRecoveryCodesModel Namespace : CG.Green.Areas.Identity.Pages.Account.Manage Assembly : CG.Green.Identity.dll Syntax public class GenerateRecoveryCodesModel : PageModel Constructors GenerateRecoveryCodesModel(UserManager<GreenUser>, ILogger<GenerateRecoveryCodesModel>) Declaration public GenerateRecoveryCodesModel(UserManager<GreenUser> userManager, ILogger<GenerateRecoveryCodesModel> logger) Parameters Type Name Description UserManager < GreenUser > userManager ILogger < GenerateRecoveryCodesModel > logger Fields _logger Declaration readonly ILogger<GenerateRecoveryCodesModel> _logger Field Value Type Description ILogger < GenerateRecoveryCodesModel > _userManager Declaration readonly UserManager<GreenUser> _userManager Field Value Type Description UserManager < GreenUser > Properties RecoveryCodes This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string[] RecoveryCodes { get; set; } Property Value Type Description System.String [] StatusMessage This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string StatusMessage { get; set; } Property Value Type Description System.String Methods OnGetAsync() Declaration public async Task<IActionResult> OnGetAsync() Returns Type Description Task < IActionResult > OnPostAsync() Declaration public async Task<IActionResult> OnPostAsync() Returns Type Description Task < IActionResult >"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.Manage.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.Manage.html",
    "title": "Namespace CG.Green.Areas.Identity.Pages.Account.Manage",
    "keywords": "Namespace CG.Green.Areas.Identity.Pages.Account.Manage Classes ChangePasswordModel ChangePasswordModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. DeletePersonalDataModel DeletePersonalDataModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Disable2faModel DownloadPersonalDataModel EmailModel EmailModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. EnableAuthenticatorModel EnableAuthenticatorModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. ExternalLoginsModel GenerateRecoveryCodesModel IndexModel IndexModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. ManageNavPages This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. PersonalDataModel ResetAuthenticatorModel SetPasswordModel SetPasswordModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. ShowRecoveryCodesModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. TwoFactorAuthenticationModel"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.Manage.IndexModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.Manage.IndexModel.html",
    "title": "Class IndexModel",
    "keywords": "Class IndexModel Inheritance System.Object IndexModel Namespace : CG.Green.Areas.Identity.Pages.Account.Manage Assembly : CG.Green.Identity.dll Syntax public class IndexModel : PageModel Constructors IndexModel(UserManager<GreenUser>, SignInManager<GreenUser>) Declaration public IndexModel(UserManager<GreenUser> userManager, SignInManager<GreenUser> signInManager) Parameters Type Name Description UserManager < GreenUser > userManager SignInManager < GreenUser > signInManager Fields _signInManager Declaration readonly SignInManager<GreenUser> _signInManager Field Value Type Description SignInManager < GreenUser > _userManager Declaration readonly UserManager<GreenUser> _userManager Field Value Type Description UserManager < GreenUser > Properties Input This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public IndexModel.InputModel Input { get; set; } Property Value Type Description IndexModel.InputModel StatusMessage This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string StatusMessage { get; set; } Property Value Type Description System.String Username This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string Username { get; set; } Property Value Type Description System.String Methods LoadAsync(GreenUser) Declaration async Task LoadAsync(GreenUser user) Parameters Type Name Description GreenUser user Returns Type Description Task OnGetAsync() Declaration public async Task<IActionResult> OnGetAsync() Returns Type Description Task < IActionResult > OnPostAsync() Declaration public async Task<IActionResult> OnPostAsync() Returns Type Description Task < IActionResult >"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.Manage.IndexModel.InputModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.Manage.IndexModel.InputModel.html",
    "title": "Class IndexModel.InputModel",
    "keywords": "Class IndexModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Inheritance System.Object IndexModel.InputModel Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Areas.Identity.Pages.Account.Manage Assembly : CG.Green.Identity.dll Syntax public class InputModel Properties PhoneNumber This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string PhoneNumber { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.Manage.ManageNavPages.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.Manage.ManageNavPages.html",
    "title": "Class ManageNavPages",
    "keywords": "Class ManageNavPages This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Inheritance System.Object ManageNavPages Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Areas.Identity.Pages.Account.Manage Assembly : CG.Green.Identity.dll Syntax public static class ManageNavPages Properties ChangePassword This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public static string ChangePassword { get; } Property Value Type Description System.String DeletePersonalData This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public static string DeletePersonalData { get; } Property Value Type Description System.String DownloadPersonalData This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public static string DownloadPersonalData { get; } Property Value Type Description System.String Email This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public static string Email { get; } Property Value Type Description System.String ExternalLogins This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public static string ExternalLogins { get; } Property Value Type Description System.String Index This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public static string Index { get; } Property Value Type Description System.String PersonalData This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public static string PersonalData { get; } Property Value Type Description System.String TwoFactorAuthentication This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public static string TwoFactorAuthentication { get; } Property Value Type Description System.String Methods ChangePasswordNavClass(ViewContext) This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public static string ChangePasswordNavClass(ViewContext viewContext) Parameters Type Name Description Microsoft.AspNetCore.Mvc.Rendering.ViewContext viewContext Returns Type Description System.String DeletePersonalDataNavClass(ViewContext) This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public static string DeletePersonalDataNavClass(ViewContext viewContext) Parameters Type Name Description Microsoft.AspNetCore.Mvc.Rendering.ViewContext viewContext Returns Type Description System.String DownloadPersonalDataNavClass(ViewContext) This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public static string DownloadPersonalDataNavClass(ViewContext viewContext) Parameters Type Name Description Microsoft.AspNetCore.Mvc.Rendering.ViewContext viewContext Returns Type Description System.String EmailNavClass(ViewContext) This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public static string EmailNavClass(ViewContext viewContext) Parameters Type Name Description Microsoft.AspNetCore.Mvc.Rendering.ViewContext viewContext Returns Type Description System.String ExternalLoginsNavClass(ViewContext) This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public static string ExternalLoginsNavClass(ViewContext viewContext) Parameters Type Name Description Microsoft.AspNetCore.Mvc.Rendering.ViewContext viewContext Returns Type Description System.String IndexNavClass(ViewContext) This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public static string IndexNavClass(ViewContext viewContext) Parameters Type Name Description Microsoft.AspNetCore.Mvc.Rendering.ViewContext viewContext Returns Type Description System.String PageNavClass(ViewContext, String) This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public static string PageNavClass(ViewContext viewContext, string page) Parameters Type Name Description Microsoft.AspNetCore.Mvc.Rendering.ViewContext viewContext System.String page Returns Type Description System.String PersonalDataNavClass(ViewContext) This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public static string PersonalDataNavClass(ViewContext viewContext) Parameters Type Name Description Microsoft.AspNetCore.Mvc.Rendering.ViewContext viewContext Returns Type Description System.String TwoFactorAuthenticationNavClass(ViewContext) This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public static string TwoFactorAuthenticationNavClass(ViewContext viewContext) Parameters Type Name Description Microsoft.AspNetCore.Mvc.Rendering.ViewContext viewContext Returns Type Description System.String"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.Manage.PersonalDataModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.Manage.PersonalDataModel.html",
    "title": "Class PersonalDataModel",
    "keywords": "Class PersonalDataModel Inheritance System.Object PersonalDataModel Namespace : CG.Green.Areas.Identity.Pages.Account.Manage Assembly : CG.Green.Identity.dll Syntax public class PersonalDataModel : PageModel Constructors PersonalDataModel(UserManager<GreenUser>, ILogger<PersonalDataModel>) Declaration public PersonalDataModel(UserManager<GreenUser> userManager, ILogger<PersonalDataModel> logger) Parameters Type Name Description UserManager < GreenUser > userManager ILogger < PersonalDataModel > logger Fields _logger Declaration readonly ILogger<PersonalDataModel> _logger Field Value Type Description ILogger < PersonalDataModel > _userManager Declaration readonly UserManager<GreenUser> _userManager Field Value Type Description UserManager < GreenUser > Methods OnGet() Declaration public async Task<IActionResult> OnGet() Returns Type Description Task < IActionResult >"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.Manage.ResetAuthenticatorModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.Manage.ResetAuthenticatorModel.html",
    "title": "Class ResetAuthenticatorModel",
    "keywords": "Class ResetAuthenticatorModel Inheritance System.Object ResetAuthenticatorModel Namespace : CG.Green.Areas.Identity.Pages.Account.Manage Assembly : CG.Green.Identity.dll Syntax public class ResetAuthenticatorModel : PageModel Constructors ResetAuthenticatorModel(UserManager<GreenUser>, SignInManager<GreenUser>, ILogger<ResetAuthenticatorModel>) Declaration public ResetAuthenticatorModel(UserManager<GreenUser> userManager, SignInManager<GreenUser> signInManager, ILogger<ResetAuthenticatorModel> logger) Parameters Type Name Description UserManager < GreenUser > userManager SignInManager < GreenUser > signInManager ILogger < ResetAuthenticatorModel > logger Fields _logger Declaration readonly ILogger<ResetAuthenticatorModel> _logger Field Value Type Description ILogger < ResetAuthenticatorModel > _signInManager Declaration readonly SignInManager<GreenUser> _signInManager Field Value Type Description SignInManager < GreenUser > _userManager Declaration readonly UserManager<GreenUser> _userManager Field Value Type Description UserManager < GreenUser > Properties StatusMessage This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string StatusMessage { get; set; } Property Value Type Description System.String Methods OnGet() Declaration public async Task<IActionResult> OnGet() Returns Type Description Task < IActionResult > OnPostAsync() Declaration public async Task<IActionResult> OnPostAsync() Returns Type Description Task < IActionResult >"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.Manage.SetPasswordModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.Manage.SetPasswordModel.html",
    "title": "Class SetPasswordModel",
    "keywords": "Class SetPasswordModel Inheritance System.Object SetPasswordModel Namespace : CG.Green.Areas.Identity.Pages.Account.Manage Assembly : CG.Green.Identity.dll Syntax public class SetPasswordModel : PageModel Constructors SetPasswordModel(UserManager<GreenUser>, SignInManager<GreenUser>) Declaration public SetPasswordModel(UserManager<GreenUser> userManager, SignInManager<GreenUser> signInManager) Parameters Type Name Description UserManager < GreenUser > userManager SignInManager < GreenUser > signInManager Fields _signInManager Declaration readonly SignInManager<GreenUser> _signInManager Field Value Type Description SignInManager < GreenUser > _userManager Declaration readonly UserManager<GreenUser> _userManager Field Value Type Description UserManager < GreenUser > Properties Input This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public SetPasswordModel.InputModel Input { get; set; } Property Value Type Description SetPasswordModel.InputModel StatusMessage This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string StatusMessage { get; set; } Property Value Type Description System.String Methods OnGetAsync() Declaration public async Task<IActionResult> OnGetAsync() Returns Type Description Task < IActionResult > OnPostAsync() Declaration public async Task<IActionResult> OnPostAsync() Returns Type Description Task < IActionResult >"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.Manage.SetPasswordModel.InputModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.Manage.SetPasswordModel.InputModel.html",
    "title": "Class SetPasswordModel.InputModel",
    "keywords": "Class SetPasswordModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Inheritance System.Object SetPasswordModel.InputModel Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Areas.Identity.Pages.Account.Manage Assembly : CG.Green.Identity.dll Syntax public class InputModel Properties ConfirmPassword This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string ConfirmPassword { get; set; } Property Value Type Description System.String NewPassword This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string NewPassword { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.Manage.ShowRecoveryCodesModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.Manage.ShowRecoveryCodesModel.html",
    "title": "Class ShowRecoveryCodesModel",
    "keywords": "Class ShowRecoveryCodesModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Inheritance System.Object ShowRecoveryCodesModel Namespace : CG.Green.Areas.Identity.Pages.Account.Manage Assembly : CG.Green.Identity.dll Syntax public class ShowRecoveryCodesModel : PageModel Properties RecoveryCodes This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string[] RecoveryCodes { get; set; } Property Value Type Description System.String [] StatusMessage This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string StatusMessage { get; set; } Property Value Type Description System.String Methods OnGet() This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public IActionResult OnGet() Returns Type Description IActionResult"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.Manage.TwoFactorAuthenticationModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.Manage.TwoFactorAuthenticationModel.html",
    "title": "Class TwoFactorAuthenticationModel",
    "keywords": "Class TwoFactorAuthenticationModel Inheritance System.Object TwoFactorAuthenticationModel Namespace : CG.Green.Areas.Identity.Pages.Account.Manage Assembly : CG.Green.Identity.dll Syntax public class TwoFactorAuthenticationModel : PageModel Constructors TwoFactorAuthenticationModel(UserManager<GreenUser>, SignInManager<GreenUser>, ILogger<TwoFactorAuthenticationModel>) Declaration public TwoFactorAuthenticationModel(UserManager<GreenUser> userManager, SignInManager<GreenUser> signInManager, ILogger<TwoFactorAuthenticationModel> logger) Parameters Type Name Description UserManager < GreenUser > userManager SignInManager < GreenUser > signInManager ILogger < TwoFactorAuthenticationModel > logger Fields _logger Declaration readonly ILogger<TwoFactorAuthenticationModel> _logger Field Value Type Description ILogger < TwoFactorAuthenticationModel > _signInManager Declaration readonly SignInManager<GreenUser> _signInManager Field Value Type Description SignInManager < GreenUser > _userManager Declaration readonly UserManager<GreenUser> _userManager Field Value Type Description UserManager < GreenUser > Properties HasAuthenticator This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public bool HasAuthenticator { get; set; } Property Value Type Description System.Boolean Is2faEnabled This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public bool Is2faEnabled { get; set; } Property Value Type Description System.Boolean IsMachineRemembered This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public bool IsMachineRemembered { get; set; } Property Value Type Description System.Boolean RecoveryCodesLeft This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public int RecoveryCodesLeft { get; set; } Property Value Type Description System.Int32 StatusMessage This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string StatusMessage { get; set; } Property Value Type Description System.String Methods OnGetAsync() Declaration public async Task<IActionResult> OnGetAsync() Returns Type Description Task < IActionResult > OnPostAsync() Declaration public async Task<IActionResult> OnPostAsync() Returns Type Description Task < IActionResult >"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.RegisterConfirmationModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.RegisterConfirmationModel.html",
    "title": "Class RegisterConfirmationModel",
    "keywords": "Class RegisterConfirmationModel Inheritance System.Object RegisterConfirmationModel Namespace : CG.Green.Areas.Identity.Pages.Account Assembly : CG.Green.Identity.dll Syntax public class RegisterConfirmationModel : PageModel Constructors RegisterConfirmationModel(UserManager<GreenUser>, IEmailSender) Declaration public RegisterConfirmationModel(UserManager<GreenUser> userManager, IEmailSender sender) Parameters Type Name Description UserManager < GreenUser > userManager IEmailSender sender Fields _sender Declaration readonly IEmailSender _sender Field Value Type Description IEmailSender _userManager Declaration readonly UserManager<GreenUser> _userManager Field Value Type Description UserManager < GreenUser > Properties DisplayConfirmAccountLink This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public bool DisplayConfirmAccountLink { get; set; } Property Value Type Description System.Boolean Email This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string Email { get; set; } Property Value Type Description System.String EmailConfirmationUrl This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string EmailConfirmationUrl { get; set; } Property Value Type Description System.String Methods OnGetAsync(String, String) Declaration public async Task<IActionResult> OnGetAsync(string email, string returnUrl = null) Parameters Type Name Description System.String email System.String returnUrl Returns Type Description Task < IActionResult >"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.RegisterModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.RegisterModel.html",
    "title": "Class RegisterModel",
    "keywords": "Class RegisterModel Inheritance System.Object RegisterModel Namespace : CG.Green.Areas.Identity.Pages.Account Assembly : CG.Green.Identity.dll Syntax public class RegisterModel : PageModel Constructors RegisterModel(UserManager<GreenUser>, IUserStore<GreenUser>, SignInManager<GreenUser>, ILogger<RegisterModel>, IEmailSender, TemplateProcessor) Declaration public RegisterModel(UserManager<GreenUser> userManager, IUserStore<GreenUser> userStore, SignInManager<GreenUser> signInManager, ILogger<RegisterModel> logger, IEmailSender emailSender, TemplateProcessor templateProcessor) Parameters Type Name Description UserManager < GreenUser > userManager IUserStore < GreenUser > userStore SignInManager < GreenUser > signInManager ILogger < RegisterModel > logger IEmailSender emailSender TemplateProcessor templateProcessor Fields _emailSender Declaration readonly IEmailSender _emailSender Field Value Type Description IEmailSender _emailStore Declaration readonly IUserEmailStore<GreenUser> _emailStore Field Value Type Description IUserEmailStore < GreenUser > _logger Declaration readonly ILogger<RegisterModel> _logger Field Value Type Description ILogger < RegisterModel > _signInManager Declaration readonly SignInManager<GreenUser> _signInManager Field Value Type Description SignInManager < GreenUser > _templateProcessor Declaration readonly TemplateProcessor _templateProcessor Field Value Type Description TemplateProcessor _userManager Declaration readonly UserManager<GreenUser> _userManager Field Value Type Description UserManager < GreenUser > _userStore Declaration readonly IUserStore<GreenUser> _userStore Field Value Type Description IUserStore < GreenUser > Properties ExternalLogins This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public IList<AuthenticationScheme> ExternalLogins { get; set; } Property Value Type Description IList < AuthenticationScheme > Input This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public RegisterModel.InputModel Input { get; set; } Property Value Type Description RegisterModel.InputModel ReturnUrl This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string ReturnUrl { get; set; } Property Value Type Description System.String Methods CreateUser() Declaration GreenUser CreateUser() Returns Type Description GreenUser GetEmailStore() Declaration IUserEmailStore<GreenUser> GetEmailStore() Returns Type Description IUserEmailStore < GreenUser > OnGetAsync(String) Declaration public async Task OnGetAsync(string returnUrl = null) Parameters Type Name Description System.String returnUrl Returns Type Description Task OnPostAsync(String) Declaration public async Task<IActionResult> OnPostAsync(string returnUrl = null) Parameters Type Name Description System.String returnUrl Returns Type Description Task < IActionResult >"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.RegisterModel.InputModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.RegisterModel.InputModel.html",
    "title": "Class RegisterModel.InputModel",
    "keywords": "Class RegisterModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Inheritance System.Object RegisterModel.InputModel Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Areas.Identity.Pages.Account Assembly : CG.Green.Identity.dll Syntax public class InputModel Properties ConfirmPassword This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string ConfirmPassword { get; set; } Property Value Type Description System.String Email This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string Email { get; set; } Property Value Type Description System.String Password This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string Password { get; set; } Property Value Type Description System.String UserName This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string UserName { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.ResendEmailConfirmationModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.ResendEmailConfirmationModel.html",
    "title": "Class ResendEmailConfirmationModel",
    "keywords": "Class ResendEmailConfirmationModel Inheritance System.Object ResendEmailConfirmationModel Namespace : CG.Green.Areas.Identity.Pages.Account Assembly : CG.Green.Identity.dll Syntax public class ResendEmailConfirmationModel : PageModel Constructors ResendEmailConfirmationModel(UserManager<GreenUser>, IEmailSender, TemplateProcessor) Declaration public ResendEmailConfirmationModel(UserManager<GreenUser> userManager, IEmailSender emailSender, TemplateProcessor templateProcessor) Parameters Type Name Description UserManager < GreenUser > userManager IEmailSender emailSender TemplateProcessor templateProcessor Fields _emailSender Declaration readonly IEmailSender _emailSender Field Value Type Description IEmailSender _templateProcessor Declaration readonly TemplateProcessor _templateProcessor Field Value Type Description TemplateProcessor _userManager Declaration readonly UserManager<GreenUser> _userManager Field Value Type Description UserManager < GreenUser > Properties Input This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public ResendEmailConfirmationModel.InputModel Input { get; set; } Property Value Type Description ResendEmailConfirmationModel.InputModel Methods OnGet() Declaration public void OnGet() OnPostAsync() Declaration public async Task<IActionResult> OnPostAsync() Returns Type Description Task < IActionResult >"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.ResendEmailConfirmationModel.InputModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.ResendEmailConfirmationModel.InputModel.html",
    "title": "Class ResendEmailConfirmationModel.InputModel",
    "keywords": "Class ResendEmailConfirmationModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Inheritance System.Object ResendEmailConfirmationModel.InputModel Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Areas.Identity.Pages.Account Assembly : CG.Green.Identity.dll Syntax public class InputModel Properties Email This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string Email { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.ResetPasswordConfirmationModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.ResetPasswordConfirmationModel.html",
    "title": "Class ResetPasswordConfirmationModel",
    "keywords": "Class ResetPasswordConfirmationModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Inheritance System.Object Microsoft.AspNetCore.Mvc.RazorPages.PageModel ResetPasswordConfirmationModel Implements Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter Microsoft.AspNetCore.Mvc.Filters.IPageFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata Inherited Members Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.NotFound() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.NotFound(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Page() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Redirect(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Unauthorized() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Partial(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Partial(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerSelected(Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecuting(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecuted(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerSelectionAsync(Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext, Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutionDelegate) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PageContext Microsoft.AspNetCore.Mvc.RazorPages.PageModel.HttpContext Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Request Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Response Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RouteData Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ModelState Microsoft.AspNetCore.Mvc.RazorPages.PageModel.User Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TempData Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Url Microsoft.AspNetCore.Mvc.RazorPages.PageModel.MetadataProvider Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewData System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Areas.Identity.Pages.Account Assembly : CG.Green.Identity.dll Syntax [AllowAnonymous] public class ResetPasswordConfirmationModel : PageModel, IAsyncPageFilter, IPageFilter, IFilterMetadata Methods OnGet() This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public void OnGet() Implements Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter Microsoft.AspNetCore.Mvc.Filters.IPageFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.ResetPasswordModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.ResetPasswordModel.html",
    "title": "Class ResetPasswordModel",
    "keywords": "Class ResetPasswordModel Inheritance System.Object ResetPasswordModel Namespace : CG.Green.Areas.Identity.Pages.Account Assembly : CG.Green.Identity.dll Syntax public class ResetPasswordModel : PageModel Constructors ResetPasswordModel(UserManager<GreenUser>) Declaration public ResetPasswordModel(UserManager<GreenUser> userManager) Parameters Type Name Description UserManager < GreenUser > userManager Fields _userManager Declaration readonly UserManager<GreenUser> _userManager Field Value Type Description UserManager < GreenUser > Properties Input This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public ResetPasswordModel.InputModel Input { get; set; } Property Value Type Description ResetPasswordModel.InputModel Methods OnGet(String) Declaration public IActionResult OnGet(string code = null) Parameters Type Name Description System.String code Returns Type Description IActionResult OnPostAsync() Declaration public async Task<IActionResult> OnPostAsync() Returns Type Description Task < IActionResult >"
  },
  "api/CG.Green.Areas.Identity.Pages.Account.ResetPasswordModel.InputModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.Account.ResetPasswordModel.InputModel.html",
    "title": "Class ResetPasswordModel.InputModel",
    "keywords": "Class ResetPasswordModel.InputModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Inheritance System.Object ResetPasswordModel.InputModel Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Areas.Identity.Pages.Account Assembly : CG.Green.Identity.dll Syntax public class InputModel Properties Code This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string Code { get; set; } Property Value Type Description System.String ConfirmPassword This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string ConfirmPassword { get; set; } Property Value Type Description System.String Email This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string Email { get; set; } Property Value Type Description System.String Password This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string Password { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Green.Areas.Identity.Pages.ErrorModel.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.ErrorModel.html",
    "title": "Class ErrorModel",
    "keywords": "Class ErrorModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Inheritance System.Object ErrorModel Namespace : CG.Green.Areas.Identity.Pages Assembly : CG.Green.Identity.dll Syntax public class ErrorModel : PageModel Properties RequestId This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public string RequestId { get; set; } Property Value Type Description System.String ShowRequestId This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public bool ShowRequestId { get; } Property Value Type Description System.Boolean Methods OnGet() This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases. Declaration public void OnGet()"
  },
  "api/CG.Green.Areas.Identity.Pages.html": {
    "href": "api/CG.Green.Areas.Identity.Pages.html",
    "title": "Namespace CG.Green.Areas.Identity.Pages",
    "keywords": "Namespace CG.Green.Areas.Identity.Pages Classes ErrorModel This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases."
  },
  "api/CG.Green.Areas.Identity.RevalidatingIdentityAuthenticationStateProvider-1.html": {
    "href": "api/CG.Green.Areas.Identity.RevalidatingIdentityAuthenticationStateProvider-1.html",
    "title": "Class RevalidatingIdentityAuthenticationStateProvider<TUser>",
    "keywords": "Class RevalidatingIdentityAuthenticationStateProvider<TUser> This class receive an authentication state from the host environment, and revalidates that state at regular intervals. Inheritance System.Object RevalidatingIdentityAuthenticationStateProvider<TUser> Namespace : CG.Green.Areas.Identity Assembly : CG.Green.Identity.dll Syntax public class RevalidatingIdentityAuthenticationStateProvider<TUser> : RevalidatingServerAuthenticationStateProvider where TUser : class Type Parameters Name Description TUser The type of associated user class. Constructors RevalidatingIdentityAuthenticationStateProvider(ILoggerFactory, IServiceScopeFactory, IOptions<IdentityOptions>) This constructor creates a new instance of the RevalidatingIdentityAuthenticationStateProvider<TUser> class. Declaration public RevalidatingIdentityAuthenticationStateProvider(ILoggerFactory loggerFactory, IServiceScopeFactory scopeFactory, IOptions<IdentityOptions> optionsAccessor) Parameters Type Name Description ILoggerFactory loggerFactory The logger factory to use with this provider. IServiceScopeFactory scopeFactory The scope factory to use with this provider. IOptions < IdentityOptions > optionsAccessor The options to use with this provider. Fields _options This field contains the options for the provider. Declaration protected readonly IdentityOptions _options Field Value Type Description IdentityOptions _scopeFactory This field contains the scope factory for the provider. Declaration protected readonly IServiceScopeFactory _scopeFactory Field Value Type Description IServiceScopeFactory Properties RevalidationInterval This property contains the interval for revalidation. Declaration protected override TimeSpan RevalidationInterval { get; } Property Value Type Description TimeSpan Methods ValidateAuthenticationStateAsync(AuthenticationState, CancellationToken) This method performs the validation. Declaration protected override async Task<bool> ValidateAuthenticationStateAsync(AuthenticationState authenticationState, CancellationToken cancellationToken) Parameters Type Name Description AuthenticationState authenticationState The authentication state to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored throughout the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if the user is authenticated, or false otherwise. ValidateSecurityStampAsync(UserManager<TUser>, ClaimsPrincipal) This method validates whether or not the security stamp for the current user has changed. Declaration async Task<bool> ValidateSecurityStampAsync(UserManager<TUser> userManager, ClaimsPrincipal principal) Parameters Type Name Description UserManager <TUser> userManager The user manager to use for the operation. ClaimsPrincipal principal The claims principal to use for the operation. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if the user's security stamp has changed, or false otherwise."
  },
  "api/CG.Green.Data.GreenDbContext.html": {
    "href": "api/CG.Green.Data.GreenDbContext.html",
    "title": "Class GreenDbContext",
    "keywords": "Class GreenDbContext This class is a data-context for the CG.Green microservice. Inheritance System.Object GreenDbContext Namespace : CG.Green.Data Assembly : CG.Green.Data.dll Syntax public class GreenDbContext : IdentityDbContext<GreenUser, GreenRole, string, GreenUserClaim, GreenUserRole, GreenUserLogin, GreenRoleClaim, GreenUserToken> Constructors GreenDbContext(DbContextOptions<GreenDbContext>) This constructor creates a new instance of the GreenDbContext class. Declaration public GreenDbContext(DbContextOptions<GreenDbContext> options) Parameters Type Name Description DbContextOptions < GreenDbContext > options The options to use with this data-context. Methods OnModelCreating(ModelBuilder) This method is called to create the data model. Declaration protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder The builder to use for the operation."
  },
  "api/CG.Green.Data.html": {
    "href": "api/CG.Green.Data.html",
    "title": "Namespace CG.Green.Data",
    "keywords": "Namespace CG.Green.Data Classes GreenDbContext This class is a data-context for the CG.Green microservice."
  },
  "api/CG.Green.Data.InMemory.Factories.GreenDbContextDesignTimeFactory.html": {
    "href": "api/CG.Green.Data.InMemory.Factories.GreenDbContextDesignTimeFactory.html",
    "title": "Class GreenDbContextDesignTimeFactory",
    "keywords": "Class GreenDbContextDesignTimeFactory This class is an in-memory design time factory for the GreenDbContext data-context type. Inheritance System.Object GreenDbContextDesignTimeFactory Namespace : CG.Green.Data.InMemory.Factories Assembly : CG.Green.Data.InMemory.dll Syntax class GreenDbContextDesignTimeFactory : DesignTimeDbContextFactory<GreenDbContext> Methods OnConfigureDataContextOptions(DbContextOptionsBuilder<GreenDbContext>, IConfiguration) This method is overridden in order to configure the options for an in-memory data-context instance. Declaration protected override void OnConfigureDataContextOptions(DbContextOptionsBuilder<GreenDbContext> optionsBuilder, IConfiguration configuration) Parameters Type Name Description DbContextOptionsBuilder < GreenDbContext > optionsBuilder The data-context options builder to use for the operation. IConfiguration configuration The configuration to use for the operation."
  },
  "api/CG.Green.Data.InMemory.Factories.html": {
    "href": "api/CG.Green.Data.InMemory.Factories.html",
    "title": "Namespace CG.Green.Data.InMemory.Factories",
    "keywords": "Namespace CG.Green.Data.InMemory.Factories Classes GreenDbContextDesignTimeFactory This class is an in-memory design time factory for the GreenDbContext data-context type."
  },
  "api/CG.Green.Data.Repositories.ApiScopeRepository.html": {
    "href": "api/CG.Green.Data.Repositories.ApiScopeRepository.html",
    "title": "Class ApiScopeRepository",
    "keywords": "Class ApiScopeRepository This class is a default implementation of the interface. Inheritance System.Object ApiScopeRepository Namespace : CG.Green.Data.Repositories Assembly : CG.Green.Data.dll Syntax class ApiScopeRepository : IApiScopeRepository Constructors ApiScopeRepository(ConfigurationDbContext, ILogger<IApiScopeRepository>) This constructor creates a new instance of the ApiScopeRepository class. Declaration public ApiScopeRepository(ConfigurationDbContext configurationDbContext, ILogger<IApiScopeRepository> logger) Parameters Type Name Description ConfigurationDbContext configurationDbContext The Duende configuration data-context to use with this repository. ILogger < IApiScopeRepository > logger The logger to use with this repository. Fields _configurationDbContext This field contains the configuration data-context for this repository. Declaration protected readonly ConfigurationDbContext _configurationDbContext Field Value Type Description ConfigurationDbContext _logger This field contains the logger for this repository. Declaration protected readonly ILogger<IApiScopeRepository> _logger Field Value Type Description ILogger < IApiScopeRepository > Methods AnyAsync(CancellationToken) Declaration public virtual async Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean > CountAsync(CancellationToken) Declaration public virtual async Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int64 > CreateAsync(ApiScope, CancellationToken) Declaration public virtual async Task<ApiScope> CreateAsync(ApiScope apiScope, CancellationToken cancellationToken = null) Parameters Type Name Description ApiScope apiScope CancellationToken cancellationToken Returns Type Description Task < ApiScope > DeleteAsync(ApiScope, CancellationToken) Declaration public virtual async Task DeleteAsync(ApiScope apiScope, CancellationToken cancellationToken = null) Parameters Type Name Description ApiScope apiScope CancellationToken cancellationToken Returns Type Description Task FindAllAsync(CancellationToken) Declaration public virtual async Task<IEnumerable<ApiScope>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IEnumerable < ApiScope >> UpdateAsync(ApiScope, CancellationToken) Declaration public virtual async Task<ApiScope> UpdateAsync(ApiScope apiScope, CancellationToken cancellationToken = null) Parameters Type Name Description ApiScope apiScope CancellationToken cancellationToken Returns Type Description Task < ApiScope >"
  },
  "api/CG.Green.Data.Repositories.ClientRepository.html": {
    "href": "api/CG.Green.Data.Repositories.ClientRepository.html",
    "title": "Class ClientRepository",
    "keywords": "Class ClientRepository This class is a default implementation of the interface. Inheritance System.Object ClientRepository Namespace : CG.Green.Data.Repositories Assembly : CG.Green.Data.dll Syntax class ClientRepository : IClientRepository Constructors ClientRepository(ConfigurationDbContext, ILogger<IClientRepository>) This constructor creates a new instance of the ClientRepository class. Declaration public ClientRepository(ConfigurationDbContext configurationDbContext, ILogger<IClientRepository> logger) Parameters Type Name Description ConfigurationDbContext configurationDbContext The Duende configuration data-context to use with this repository. ILogger < IClientRepository > logger The logger to use with this repository. Fields _configurationDbContext This field contains the configuration data-context for this repository. Declaration protected readonly ConfigurationDbContext _configurationDbContext Field Value Type Description ConfigurationDbContext _logger This field contains the logger for this repository. Declaration protected readonly ILogger<IClientRepository> _logger Field Value Type Description ILogger < IClientRepository > Methods AnyAsync(CancellationToken) Declaration public virtual async Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean > CountAsync(CancellationToken) Declaration public virtual async Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int64 > CreateAsync(Client, CancellationToken) Declaration public virtual async Task<Client> CreateAsync(Client client, CancellationToken cancellationToken = null) Parameters Type Name Description Client client CancellationToken cancellationToken Returns Type Description Task < Client > DeleteAsync(Client, CancellationToken) Declaration public virtual async Task DeleteAsync(Client client, CancellationToken cancellationToken = null) Parameters Type Name Description Client client CancellationToken cancellationToken Returns Type Description Task FindAllAsync(CancellationToken) Declaration public virtual async Task<IEnumerable<Client>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IEnumerable < Client >> FindByIdAsync(String, CancellationToken) Declaration public virtual async Task<Client?> FindByIdAsync(string clientId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String clientId CancellationToken cancellationToken Returns Type Description Task < System.Nullable < Client >> UpdateAsync(Client, CancellationToken) Declaration public virtual async Task<Client> UpdateAsync(Client client, CancellationToken cancellationToken = null) Parameters Type Name Description Client client CancellationToken cancellationToken Returns Type Description Task < Client >"
  },
  "api/CG.Green.Data.Repositories.GreenUserClaimRepository.html": {
    "href": "api/CG.Green.Data.Repositories.GreenUserClaimRepository.html",
    "title": "Class GreenUserClaimRepository",
    "keywords": "Class GreenUserClaimRepository This class is a default implementation of the interface. Inheritance System.Object GreenUserClaimRepository Namespace : CG.Green.Data.Repositories Assembly : CG.Green.Data.dll Syntax class GreenUserClaimRepository : IGreenUserClaimRepository Constructors GreenUserClaimRepository(GreenDbContext, ILogger<IGreenUserClaimRepository>) This constructor creates a new instance of the GreenUserClaimRepository class. Declaration public GreenUserClaimRepository(GreenDbContext greenDbContext, ILogger<IGreenUserClaimRepository> logger) Parameters Type Name Description GreenDbContext greenDbContext The Duende configuration data-context to use with this repository. ILogger < IGreenUserClaimRepository > logger The logger to use with this repository. Fields _greenDbContext This field contains the green data-context for this repository. Declaration protected readonly GreenDbContext _greenDbContext Field Value Type Description GreenDbContext _logger This field contains the logger for this repository. Declaration protected readonly ILogger<IGreenUserClaimRepository> _logger Field Value Type Description ILogger < IGreenUserClaimRepository > Methods AnyAsync(CancellationToken) Declaration public virtual async Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean > CountAsync(CancellationToken) Declaration public virtual async Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int64 > CreateAsync(GreenUserClaim, CancellationToken) Declaration public virtual async Task<GreenUserClaim> CreateAsync(GreenUserClaim userClaim, CancellationToken cancellationToken = null) Parameters Type Name Description GreenUserClaim userClaim CancellationToken cancellationToken Returns Type Description Task < GreenUserClaim >"
  },
  "api/CG.Green.Data.Repositories.GreenUserRoleRepository.html": {
    "href": "api/CG.Green.Data.Repositories.GreenUserRoleRepository.html",
    "title": "Class GreenUserRoleRepository",
    "keywords": "Class GreenUserRoleRepository This class is a default implementation of the interface. Inheritance System.Object GreenUserRoleRepository Namespace : CG.Green.Data.Repositories Assembly : CG.Green.Data.dll Syntax class GreenUserRoleRepository : IGreenUserRoleRepository Constructors GreenUserRoleRepository(GreenDbContext, ILogger<IGreenUserRoleRepository>) This constructor creates a new instance of the GreenUserRoleRepository class. Declaration public GreenUserRoleRepository(GreenDbContext greenDbContext, ILogger<IGreenUserRoleRepository> logger) Parameters Type Name Description GreenDbContext greenDbContext The Duende configuration data-context to use with this repository. ILogger < IGreenUserRoleRepository > logger The logger to use with this repository. Fields _greenDbContext This field contains the green data-context for this repository. Declaration protected readonly GreenDbContext _greenDbContext Field Value Type Description GreenDbContext _logger This field contains the logger for this repository. Declaration protected readonly ILogger<IGreenUserRoleRepository> _logger Field Value Type Description ILogger < IGreenUserRoleRepository > Methods AnyAsync(CancellationToken) Declaration public virtual async Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean > CountAsync(CancellationToken) Declaration public virtual async Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int64 >"
  },
  "api/CG.Green.Data.Repositories.html": {
    "href": "api/CG.Green.Data.Repositories.html",
    "title": "Namespace CG.Green.Data.Repositories",
    "keywords": "Namespace CG.Green.Data.Repositories Classes ApiScopeRepository This class is a default implementation of the interface. ClientRepository This class is a default implementation of the interface. GreenUserClaimRepository This class is a default implementation of the interface. GreenUserRoleRepository This class is a default implementation of the interface. IdentityResourceRepository This class is a default implementation of the interface."
  },
  "api/CG.Green.Data.Repositories.IdentityResourceRepository.html": {
    "href": "api/CG.Green.Data.Repositories.IdentityResourceRepository.html",
    "title": "Class IdentityResourceRepository",
    "keywords": "Class IdentityResourceRepository This class is a default implementation of the interface. Inheritance System.Object IdentityResourceRepository Namespace : CG.Green.Data.Repositories Assembly : CG.Green.Data.dll Syntax class IdentityResourceRepository : IIdentityResourceRepository Constructors IdentityResourceRepository(ConfigurationDbContext, ILogger<IIdentityResourceRepository>) This constructor creates a new instance of the IdentityResourceRepository class. Declaration public IdentityResourceRepository(ConfigurationDbContext configurationDbContext, ILogger<IIdentityResourceRepository> logger) Parameters Type Name Description ConfigurationDbContext configurationDbContext The Duende configuration data-context to use with this repository. ILogger < IIdentityResourceRepository > logger The logger to use with this repository. Fields _configurationDbContext This field contains the configuration data-context for this repository. Declaration protected readonly ConfigurationDbContext _configurationDbContext Field Value Type Description ConfigurationDbContext _logger This field contains the logger for this repository. Declaration protected readonly ILogger<IIdentityResourceRepository> _logger Field Value Type Description ILogger < IIdentityResourceRepository > Methods AnyAsync(CancellationToken) Declaration public virtual async Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean > CountAsync(CancellationToken) Declaration public virtual async Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int64 > CreateAsync(IdentityResource, CancellationToken) Declaration public virtual async Task<IdentityResource> CreateAsync(IdentityResource identityResource, CancellationToken cancellationToken = null) Parameters Type Name Description IdentityResource identityResource CancellationToken cancellationToken Returns Type Description Task < IdentityResource > DeleteAsync(IdentityResource, CancellationToken) Declaration public virtual async Task DeleteAsync(IdentityResource identityResource, CancellationToken cancellationToken = null) Parameters Type Name Description IdentityResource identityResource CancellationToken cancellationToken Returns Type Description Task FindAllAsync(CancellationToken) Declaration public virtual async Task<IEnumerable<IdentityResource>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IEnumerable < IdentityResource >> UpdateAsync(IdentityResource, CancellationToken) Declaration public virtual async Task<IdentityResource> UpdateAsync(IdentityResource identityResource, CancellationToken cancellationToken = null) Parameters Type Name Description IdentityResource identityResource CancellationToken cancellationToken Returns Type Description Task < IdentityResource >"
  },
  "api/CG.Green.Data.Sqlite.GreenDbContextDesignTimeFactory.html": {
    "href": "api/CG.Green.Data.Sqlite.GreenDbContextDesignTimeFactory.html",
    "title": "Class GreenDbContextDesignTimeFactory",
    "keywords": "Class GreenDbContextDesignTimeFactory This class is a SQLite design time factory for the GreenDbContext data-context type. Inheritance System.Object GreenDbContextDesignTimeFactory Namespace : CG.Green.Data.Sqlite Assembly : CG.Green.Data.Sqlite.dll Syntax class GreenDbContextDesignTimeFactory : DesignTimeDbContextFactory<GreenDbContext> Methods OnConfigureDataContextOptions(DbContextOptionsBuilder<GreenDbContext>, IConfiguration) This method is overridden in order to configure the options for a Sqlite data-context instance. Declaration protected override void OnConfigureDataContextOptions(DbContextOptionsBuilder<GreenDbContext> optionsBuilder, IConfiguration configuration) Parameters Type Name Description DbContextOptionsBuilder < GreenDbContext > optionsBuilder The data-context options builder to use for the operation. IConfiguration configuration The configuration to use for the operation."
  },
  "api/CG.Green.Data.Sqlite.html": {
    "href": "api/CG.Green.Data.Sqlite.html",
    "title": "Namespace CG.Green.Data.Sqlite",
    "keywords": "Namespace CG.Green.Data.Sqlite Classes GreenDbContextDesignTimeFactory This class is a SQLite design time factory for the GreenDbContext data-context type."
  },
  "api/CG.Green.Data.Sqlite.Migrations.Configuration.ConfigurationDbContextModelSnapshot.html": {
    "href": "api/CG.Green.Data.Sqlite.Migrations.Configuration.ConfigurationDbContextModelSnapshot.html",
    "title": "Class ConfigurationDbContextModelSnapshot",
    "keywords": "Class ConfigurationDbContextModelSnapshot Inheritance System.Object Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot ConfigurationDbContextModelSnapshot Inherited Members Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot.Model System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Data.Sqlite.Migrations.Configuration Assembly : CG.Green.Data.Sqlite.dll Syntax [DbContext(typeof(ConfigurationDbContext))] class ConfigurationDbContextModelSnapshot : ModelSnapshot Methods BuildModel(ModelBuilder) Declaration protected override void BuildModel(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot.BuildModel(Microsoft.EntityFrameworkCore.ModelBuilder)"
  },
  "api/CG.Green.Data.Sqlite.Migrations.Configuration.html": {
    "href": "api/CG.Green.Data.Sqlite.Migrations.Configuration.html",
    "title": "Namespace CG.Green.Data.Sqlite.Migrations.Configuration",
    "keywords": "Namespace CG.Green.Data.Sqlite.Migrations.Configuration Classes ConfigurationDbContextModelSnapshot InitialCreate"
  },
  "api/CG.Green.Data.Sqlite.Migrations.Configuration.InitialCreate.html": {
    "href": "api/CG.Green.Data.Sqlite.Migrations.Configuration.InitialCreate.html",
    "title": "Class InitialCreate",
    "keywords": "Class InitialCreate Inheritance System.Object Microsoft.EntityFrameworkCore.Migrations.Migration InitialCreate Inherited Members Microsoft.EntityFrameworkCore.Migrations.Migration.InitialDatabase Microsoft.EntityFrameworkCore.Migrations.Migration.TargetModel Microsoft.EntityFrameworkCore.Migrations.Migration.UpOperations Microsoft.EntityFrameworkCore.Migrations.Migration.DownOperations Microsoft.EntityFrameworkCore.Migrations.Migration.ActiveProvider System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Data.Sqlite.Migrations.Configuration Assembly : CG.Green.Data.Sqlite.dll Syntax [DbContext(typeof(ConfigurationDbContext))] [Migration(\"20230121143606_InitialCreate\")] public class InitialCreate : Migration Methods BuildTargetModel(ModelBuilder) Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder) Down(MigrationBuilder) Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder) Up(MigrationBuilder) Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)"
  },
  "api/CG.Green.Data.Sqlite.Migrations.Grants.html": {
    "href": "api/CG.Green.Data.Sqlite.Migrations.Grants.html",
    "title": "Namespace CG.Green.Data.Sqlite.Migrations.Grants",
    "keywords": "Namespace CG.Green.Data.Sqlite.Migrations.Grants Classes InitialCreate PersistedGrantDbContextModelSnapshot"
  },
  "api/CG.Green.Data.Sqlite.Migrations.Grants.InitialCreate.html": {
    "href": "api/CG.Green.Data.Sqlite.Migrations.Grants.InitialCreate.html",
    "title": "Class InitialCreate",
    "keywords": "Class InitialCreate Inheritance System.Object Microsoft.EntityFrameworkCore.Migrations.Migration InitialCreate Inherited Members Microsoft.EntityFrameworkCore.Migrations.Migration.InitialDatabase Microsoft.EntityFrameworkCore.Migrations.Migration.TargetModel Microsoft.EntityFrameworkCore.Migrations.Migration.UpOperations Microsoft.EntityFrameworkCore.Migrations.Migration.DownOperations Microsoft.EntityFrameworkCore.Migrations.Migration.ActiveProvider System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Data.Sqlite.Migrations.Grants Assembly : CG.Green.Data.Sqlite.dll Syntax [DbContext(typeof(PersistedGrantDbContext))] [Migration(\"20230121143635_InitialCreate\")] public class InitialCreate : Migration Methods BuildTargetModel(ModelBuilder) Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder) Down(MigrationBuilder) Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder) Up(MigrationBuilder) Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)"
  },
  "api/CG.Green.Data.Sqlite.Migrations.Grants.PersistedGrantDbContextModelSnapshot.html": {
    "href": "api/CG.Green.Data.Sqlite.Migrations.Grants.PersistedGrantDbContextModelSnapshot.html",
    "title": "Class PersistedGrantDbContextModelSnapshot",
    "keywords": "Class PersistedGrantDbContextModelSnapshot Inheritance System.Object Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot PersistedGrantDbContextModelSnapshot Inherited Members Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot.Model System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Data.Sqlite.Migrations.Grants Assembly : CG.Green.Data.Sqlite.dll Syntax [DbContext(typeof(PersistedGrantDbContext))] class PersistedGrantDbContextModelSnapshot : ModelSnapshot Methods BuildModel(ModelBuilder) Declaration protected override void BuildModel(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot.BuildModel(Microsoft.EntityFrameworkCore.ModelBuilder)"
  },
  "api/CG.Green.Data.Sqlite.Migrations.Green.GreenDbContextModelSnapshot.html": {
    "href": "api/CG.Green.Data.Sqlite.Migrations.Green.GreenDbContextModelSnapshot.html",
    "title": "Class GreenDbContextModelSnapshot",
    "keywords": "Class GreenDbContextModelSnapshot Inheritance System.Object Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot GreenDbContextModelSnapshot Inherited Members Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot.Model System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Data.Sqlite.Migrations.Green Assembly : CG.Green.Data.Sqlite.dll Syntax [DbContext(typeof(GreenDbContext))] class GreenDbContextModelSnapshot : ModelSnapshot Methods BuildModel(ModelBuilder) Declaration protected override void BuildModel(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot.BuildModel(Microsoft.EntityFrameworkCore.ModelBuilder)"
  },
  "api/CG.Green.Data.Sqlite.Migrations.Green.html": {
    "href": "api/CG.Green.Data.Sqlite.Migrations.Green.html",
    "title": "Namespace CG.Green.Data.Sqlite.Migrations.Green",
    "keywords": "Namespace CG.Green.Data.Sqlite.Migrations.Green Classes GreenDbContextModelSnapshot InitialCreate"
  },
  "api/CG.Green.Data.Sqlite.Migrations.Green.InitialCreate.html": {
    "href": "api/CG.Green.Data.Sqlite.Migrations.Green.InitialCreate.html",
    "title": "Class InitialCreate",
    "keywords": "Class InitialCreate Inheritance System.Object Microsoft.EntityFrameworkCore.Migrations.Migration InitialCreate Inherited Members Microsoft.EntityFrameworkCore.Migrations.Migration.InitialDatabase Microsoft.EntityFrameworkCore.Migrations.Migration.TargetModel Microsoft.EntityFrameworkCore.Migrations.Migration.UpOperations Microsoft.EntityFrameworkCore.Migrations.Migration.DownOperations Microsoft.EntityFrameworkCore.Migrations.Migration.ActiveProvider System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Data.Sqlite.Migrations.Green Assembly : CG.Green.Data.Sqlite.dll Syntax [DbContext(typeof(GreenDbContext))] [Migration(\"20230121160136_InitialCreate\")] public class InitialCreate : Migration Methods BuildTargetModel(ModelBuilder) Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder) Down(MigrationBuilder) Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder) Up(MigrationBuilder) Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)"
  },
  "api/CG.Green.Data.SqlServer.GreenDbContextDesignTimeFactory.html": {
    "href": "api/CG.Green.Data.SqlServer.GreenDbContextDesignTimeFactory.html",
    "title": "Class GreenDbContextDesignTimeFactory",
    "keywords": "Class GreenDbContextDesignTimeFactory This class is a SQLServer design time factory for the GreenDbContext data-context type. Inheritance System.Object GreenDbContextDesignTimeFactory Namespace : CG.Green.Data.SqlServer Assembly : CG.Green.Data.SqlServer.dll Syntax class GreenDbContextDesignTimeFactory : DesignTimeDbContextFactory<GreenDbContext> Methods OnConfigureDataContextOptions(DbContextOptionsBuilder<GreenDbContext>, IConfiguration) This method is overridden in order to configure the options for a SqlServer data-context instance. Declaration protected override void OnConfigureDataContextOptions(DbContextOptionsBuilder<GreenDbContext> optionsBuilder, IConfiguration configuration) Parameters Type Name Description DbContextOptionsBuilder < GreenDbContext > optionsBuilder The data-context options builder to use for the operation. IConfiguration configuration The configuration to use for the operation."
  },
  "api/CG.Green.Data.SqlServer.html": {
    "href": "api/CG.Green.Data.SqlServer.html",
    "title": "Namespace CG.Green.Data.SqlServer",
    "keywords": "Namespace CG.Green.Data.SqlServer Classes GreenDbContextDesignTimeFactory This class is a SQLServer design time factory for the GreenDbContext data-context type."
  },
  "api/CG.Green.Data.SqlServer.Migrations.Configuration.ConfigurationDbContextModelSnapshot.html": {
    "href": "api/CG.Green.Data.SqlServer.Migrations.Configuration.ConfigurationDbContextModelSnapshot.html",
    "title": "Class ConfigurationDbContextModelSnapshot",
    "keywords": "Class ConfigurationDbContextModelSnapshot Inheritance System.Object Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot ConfigurationDbContextModelSnapshot Inherited Members Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot.Model System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Data.SqlServer.Migrations.Configuration Assembly : CG.Green.Data.SqlServer.dll Syntax [DbContext(typeof(ConfigurationDbContext))] class ConfigurationDbContextModelSnapshot : ModelSnapshot Methods BuildModel(ModelBuilder) Declaration protected override void BuildModel(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot.BuildModel(Microsoft.EntityFrameworkCore.ModelBuilder)"
  },
  "api/CG.Green.Data.SqlServer.Migrations.Configuration.html": {
    "href": "api/CG.Green.Data.SqlServer.Migrations.Configuration.html",
    "title": "Namespace CG.Green.Data.SqlServer.Migrations.Configuration",
    "keywords": "Namespace CG.Green.Data.SqlServer.Migrations.Configuration Classes ConfigurationDbContextModelSnapshot InitialCreate"
  },
  "api/CG.Green.Data.SqlServer.Migrations.Configuration.InitialCreate.html": {
    "href": "api/CG.Green.Data.SqlServer.Migrations.Configuration.InitialCreate.html",
    "title": "Class InitialCreate",
    "keywords": "Class InitialCreate Inheritance System.Object Microsoft.EntityFrameworkCore.Migrations.Migration InitialCreate Inherited Members Microsoft.EntityFrameworkCore.Migrations.Migration.InitialDatabase Microsoft.EntityFrameworkCore.Migrations.Migration.TargetModel Microsoft.EntityFrameworkCore.Migrations.Migration.UpOperations Microsoft.EntityFrameworkCore.Migrations.Migration.DownOperations Microsoft.EntityFrameworkCore.Migrations.Migration.ActiveProvider System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Data.SqlServer.Migrations.Configuration Assembly : CG.Green.Data.SqlServer.dll Syntax [DbContext(typeof(ConfigurationDbContext))] [Migration(\"20230121143730_InitialCreate\")] public class InitialCreate : Migration Methods BuildTargetModel(ModelBuilder) Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder) Down(MigrationBuilder) Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder) Up(MigrationBuilder) Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)"
  },
  "api/CG.Green.Data.SqlServer.Migrations.Grants.html": {
    "href": "api/CG.Green.Data.SqlServer.Migrations.Grants.html",
    "title": "Namespace CG.Green.Data.SqlServer.Migrations.Grants",
    "keywords": "Namespace CG.Green.Data.SqlServer.Migrations.Grants Classes InitialCreate PersistedGrantDbContextModelSnapshot"
  },
  "api/CG.Green.Data.SqlServer.Migrations.Grants.InitialCreate.html": {
    "href": "api/CG.Green.Data.SqlServer.Migrations.Grants.InitialCreate.html",
    "title": "Class InitialCreate",
    "keywords": "Class InitialCreate Inheritance System.Object Microsoft.EntityFrameworkCore.Migrations.Migration InitialCreate Inherited Members Microsoft.EntityFrameworkCore.Migrations.Migration.InitialDatabase Microsoft.EntityFrameworkCore.Migrations.Migration.TargetModel Microsoft.EntityFrameworkCore.Migrations.Migration.UpOperations Microsoft.EntityFrameworkCore.Migrations.Migration.DownOperations Microsoft.EntityFrameworkCore.Migrations.Migration.ActiveProvider System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Data.SqlServer.Migrations.Grants Assembly : CG.Green.Data.SqlServer.dll Syntax [DbContext(typeof(PersistedGrantDbContext))] [Migration(\"20230121143747_InitialCreate\")] public class InitialCreate : Migration Methods BuildTargetModel(ModelBuilder) Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder) Down(MigrationBuilder) Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder) Up(MigrationBuilder) Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)"
  },
  "api/CG.Green.Data.SqlServer.Migrations.Grants.PersistedGrantDbContextModelSnapshot.html": {
    "href": "api/CG.Green.Data.SqlServer.Migrations.Grants.PersistedGrantDbContextModelSnapshot.html",
    "title": "Class PersistedGrantDbContextModelSnapshot",
    "keywords": "Class PersistedGrantDbContextModelSnapshot Inheritance System.Object Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot PersistedGrantDbContextModelSnapshot Inherited Members Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot.Model System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Data.SqlServer.Migrations.Grants Assembly : CG.Green.Data.SqlServer.dll Syntax [DbContext(typeof(PersistedGrantDbContext))] class PersistedGrantDbContextModelSnapshot : ModelSnapshot Methods BuildModel(ModelBuilder) Declaration protected override void BuildModel(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot.BuildModel(Microsoft.EntityFrameworkCore.ModelBuilder)"
  },
  "api/CG.Green.Data.SqlServer.Migrations.Green.GreenDbContextModelSnapshot.html": {
    "href": "api/CG.Green.Data.SqlServer.Migrations.Green.GreenDbContextModelSnapshot.html",
    "title": "Class GreenDbContextModelSnapshot",
    "keywords": "Class GreenDbContextModelSnapshot Inheritance System.Object Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot GreenDbContextModelSnapshot Inherited Members Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot.Model System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Data.SqlServer.Migrations.Green Assembly : CG.Green.Data.SqlServer.dll Syntax [DbContext(typeof(GreenDbContext))] class GreenDbContextModelSnapshot : ModelSnapshot Methods BuildModel(ModelBuilder) Declaration protected override void BuildModel(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot.BuildModel(Microsoft.EntityFrameworkCore.ModelBuilder)"
  },
  "api/CG.Green.Data.SqlServer.Migrations.Green.html": {
    "href": "api/CG.Green.Data.SqlServer.Migrations.Green.html",
    "title": "Namespace CG.Green.Data.SqlServer.Migrations.Green",
    "keywords": "Namespace CG.Green.Data.SqlServer.Migrations.Green Classes GreenDbContextModelSnapshot InitialCreate"
  },
  "api/CG.Green.Data.SqlServer.Migrations.Green.InitialCreate.html": {
    "href": "api/CG.Green.Data.SqlServer.Migrations.Green.InitialCreate.html",
    "title": "Class InitialCreate",
    "keywords": "Class InitialCreate Inheritance System.Object Microsoft.EntityFrameworkCore.Migrations.Migration InitialCreate Inherited Members Microsoft.EntityFrameworkCore.Migrations.Migration.InitialDatabase Microsoft.EntityFrameworkCore.Migrations.Migration.TargetModel Microsoft.EntityFrameworkCore.Migrations.Migration.UpOperations Microsoft.EntityFrameworkCore.Migrations.Migration.DownOperations Microsoft.EntityFrameworkCore.Migrations.Migration.ActiveProvider System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Data.SqlServer.Migrations.Green Assembly : CG.Green.Data.SqlServer.dll Syntax [DbContext(typeof(GreenDbContext))] [Migration(\"20230121160218_InitialCreate\")] public class InitialCreate : Migration Methods BuildTargetModel(ModelBuilder) Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder) Down(MigrationBuilder) Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder) Up(MigrationBuilder) Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)"
  },
  "api/CG.Green.Directors.DirectorException.html": {
    "href": "api/CG.Green.Directors.DirectorException.html",
    "title": "Class DirectorException",
    "keywords": "Class DirectorException This class represents a director related exception. Inheritance System.Object DirectorException Namespace : CG.Green.Directors Assembly : CG.Green.Primitives.dll Syntax public class DirectorException : Exception Constructors DirectorException() This constructor creates a new instance of the DirectorException class. Declaration public DirectorException() DirectorException(SerializationInfo, StreamingContext) This constructor creates a new instance of the DirectorException class. Declaration public DirectorException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization info to use for the exception. StreamingContext context The streaming context to use for the exception. DirectorException(String) This constructor creates a new instance of the DirectorException class. Declaration public DirectorException(string message) Parameters Type Name Description System.String message The message to use for the exception. DirectorException(String, Exception) This constructor creates a new instance of the DirectorException class. Declaration public DirectorException(string message, Exception innerException) Parameters Type Name Description System.String message The message to use for the exception. Exception innerException An optional inner exception reference."
  },
  "api/CG.Green.Directors.html": {
    "href": "api/CG.Green.Directors.html",
    "title": "Namespace CG.Green.Directors",
    "keywords": "Namespace CG.Green.Directors Classes DirectorException This class represents a director related exception. SeedDirector This class is a default implementation of the ISeedDirector interface. Interfaces ISeedDirector This interface represents an object that performs data seeding operations."
  },
  "api/CG.Green.Directors.ISeedDirector.html": {
    "href": "api/CG.Green.Directors.ISeedDirector.html",
    "title": "Interface ISeedDirector",
    "keywords": "Interface ISeedDirector This interface represents an object that performs data seeding operations. Namespace : CG.Green.Directors Assembly : CG.Green.Abstractions.dll Syntax public interface ISeedDirector Methods SeedApiScopesAsync(List<ApiScope>, String, Boolean, CancellationToken) This method performs a seeding operation for objects. Declaration Task SeedApiScopesAsync(List<ApiScope> apiScopes, string userName, bool force = false, CancellationToken cancellationToken = null) Parameters Type Name Description List < ApiScope > apiScopes The data to use for the operation. System.String userName The name of the user performing the operation. System.Boolean force true to force the seeding operation when there are existing entities in the underlying data-store; false otherwise. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition DirectorException This exception is thrown whenever the director fails to complete the operation. SeedClientsAsync(List<Client>, String, Boolean, CancellationToken) This method performs a seeding operation for objects. Declaration Task SeedClientsAsync(List<Client> clients, string userName, bool force = false, CancellationToken cancellationToken = null) Parameters Type Name Description List < Client > clients The data to use for the operation. System.String userName The name of the user performing the operation. System.Boolean force true to force the seeding operation when there are existing entities in the underlying data-store; false otherwise. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition DirectorException This exception is thrown whenever the director fails to complete the operation. SeedIdentityResourcesAsync(List<IdentityResource>, String, Boolean, CancellationToken) This method performs a seeding operation for objects. Declaration Task SeedIdentityResourcesAsync(List<IdentityResource> users, string userName, bool force = false, CancellationToken cancellationToken = null) Parameters Type Name Description List < IdentityResource > users The data to use for the operation. System.String userName The name of the user performing the operation. System.Boolean force true to force the seeding operation when there are existing entities in the underlying data-store; false otherwise. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition DirectorException This exception is thrown whenever the director fails to complete the operation. SeedRolesAsync(List<GreenRole>, String, Boolean, CancellationToken) This method performs a seeding operation for objects. Declaration Task SeedRolesAsync(List<GreenRole> roles, string userName, bool force = false, CancellationToken cancellationToken = null) Parameters Type Name Description List < GreenRole > roles The data to use for the operation. System.String userName The name of the user performing the operation. System.Boolean force true to force the seeding operation when there are existing entities in the underlying data-store; false otherwise. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition DirectorException This exception is thrown whenever the director fails to complete the operation. SeedUserClaimsAsync(List<UserClaimAssignmentOptions>, String, Boolean, CancellationToken) This method performs a seeding operation for objects. Declaration Task SeedUserClaimsAsync(List<UserClaimAssignmentOptions> userClaims, string userName, bool force = false, CancellationToken cancellationToken = null) Parameters Type Name Description List < UserClaimAssignmentOptions > userClaims The data to use for the operation. System.String userName The name of the user performing the operation. System.Boolean force true to force the seeding operation when there are existing entities in the underlying data-store; false otherwise. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition DirectorException This exception is thrown whenever the director fails to complete the operation. SeedUserRolesAsync(List<UserRoleAssignmentOptions>, String, Boolean, CancellationToken) This method performs a seeding operation for objects. Declaration Task SeedUserRolesAsync(List<UserRoleAssignmentOptions> userRoles, string userName, bool force = false, CancellationToken cancellationToken = null) Parameters Type Name Description List < UserRoleAssignmentOptions > userRoles The data to use for the operation. System.String userName The name of the user performing the operation. System.Boolean force true to force the seeding operation when there are existing entities in the underlying data-store; false otherwise. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition DirectorException This exception is thrown whenever the director fails to complete the operation. SeedUsersAsync(List<GreenUser>, String, Boolean, CancellationToken) This method performs a seeding operation for objects. Declaration Task SeedUsersAsync(List<GreenUser> roles, string userName, bool force = false, CancellationToken cancellationToken = null) Parameters Type Name Description List < GreenUser > roles The data to use for the operation. System.String userName The name of the user performing the operation. System.Boolean force true to force the seeding operation when there are existing entities in the underlying data-store; false otherwise. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition DirectorException This exception is thrown whenever the director fails to complete the operation."
  },
  "api/CG.Green.Directors.SeedDirector.html": {
    "href": "api/CG.Green.Directors.SeedDirector.html",
    "title": "Class SeedDirector",
    "keywords": "Class SeedDirector This class is a default implementation of the ISeedDirector interface. Inheritance System.Object SeedDirector Implements ISeedDirector Namespace : CG.Green.Directors Assembly : CG.Green.dll Syntax public class SeedDirector : SeedDirectorBase<SeedDirector>, ISeedDirector Constructors SeedDirector(IGreenApi, ILogger<SeedDirector>) This constructor creates a new instance of the SeedDirector class. Declaration public SeedDirector(IGreenApi greenApi, ILogger<SeedDirector> logger) Parameters Type Name Description IGreenApi greenApi The Green API to use with this director. ILogger < SeedDirector > logger The logger to use with this director. Fields _greenApi This field contains the Green API for this director. Declaration protected readonly IGreenApi _greenApi Field Value Type Description IGreenApi Methods SeedApiScopesAsync(IConfiguration, String, Boolean, CancellationToken) This method performs a seeding operation for objects, from the given configuration. Declaration protected virtual async Task SeedApiScopesAsync(IConfiguration dataSection, string userName, bool force, CancellationToken cancellationToken = null) Parameters Type Name Description IConfiguration dataSection The data to use for the operation. System.String userName The role name of the person performing the operation. System.Boolean force true to force the seeding operation when data already exists in the associated table(s), false to stop the operation whenever data is detected in the associated table(s). CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. SeedApiScopesAsync(List<ApiScope>, String, Boolean, CancellationToken) Declaration public virtual async Task SeedApiScopesAsync(List<ApiScope> apiScopes, string userName, bool force = false, CancellationToken cancellationToken = null) Parameters Type Name Description List < ApiScope > apiScopes System.String userName System.Boolean force CancellationToken cancellationToken Returns Type Description Task SeedClientsAsync(IConfiguration, String, Boolean, CancellationToken) This method performs a seeding operation for objects, from the given configuration. Declaration protected virtual async Task SeedClientsAsync(IConfiguration dataSection, string userName, bool force, CancellationToken cancellationToken = null) Parameters Type Name Description IConfiguration dataSection The data to use for the operation. System.String userName The role name of the person performing the operation. System.Boolean force true to force the seeding operation when data already exists in the associated table(s), false to stop the operation whenever data is detected in the associated table(s). CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. SeedClientsAsync(List<Client>, String, Boolean, CancellationToken) Declaration public virtual async Task SeedClientsAsync(List<Client> clients, string userName, bool force = false, CancellationToken cancellationToken = null) Parameters Type Name Description List < Client > clients System.String userName System.Boolean force CancellationToken cancellationToken Returns Type Description Task SeedFromConfiguration(String, IConfiguration, String, Boolean, CancellationToken) Declaration protected override async Task SeedFromConfiguration(string objectName, IConfiguration dataSection, string userName, bool force = false, CancellationToken cancellationToken = null) Parameters Type Name Description System.String objectName IConfiguration dataSection System.String userName System.Boolean force CancellationToken cancellationToken Returns Type Description Task SeedIdentityResourcesAsync(IConfiguration, String, Boolean, CancellationToken) This method performs a seeding operation for objects, from the given configuration. Declaration protected virtual async Task SeedIdentityResourcesAsync(IConfiguration dataSection, string userName, bool force, CancellationToken cancellationToken = null) Parameters Type Name Description IConfiguration dataSection The data to use for the operation. System.String userName The role name of the person performing the operation. System.Boolean force true to force the seeding operation when data already exists in the associated table(s), false to stop the operation whenever data is detected in the associated table(s). CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. SeedIdentityResourcesAsync(List<IdentityResource>, String, Boolean, CancellationToken) Declaration public virtual async Task SeedIdentityResourcesAsync(List<IdentityResource> identityResources, string userName, bool force = false, CancellationToken cancellationToken = null) Parameters Type Name Description List < IdentityResource > identityResources System.String userName System.Boolean force CancellationToken cancellationToken Returns Type Description Task SeedRolesAsync(IConfiguration, String, Boolean, CancellationToken) This method performs a seeding operation for objects, from the given configuration. Declaration protected virtual async Task SeedRolesAsync(IConfiguration dataSection, string userName, bool force, CancellationToken cancellationToken = null) Parameters Type Name Description IConfiguration dataSection The data to use for the operation. System.String userName The role name of the person performing the operation. System.Boolean force true to force the seeding operation when data already exists in the associated table(s), false to stop the operation whenever data is detected in the associated table(s). CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. SeedRolesAsync(List<GreenRole>, String, Boolean, CancellationToken) Declaration public virtual async Task SeedRolesAsync(List<GreenRole> roles, string userName, bool force = false, CancellationToken cancellationToken = null) Parameters Type Name Description List < GreenRole > roles System.String userName System.Boolean force CancellationToken cancellationToken Returns Type Description Task SeedUserClaimsAsync(IConfiguration, String, Boolean, CancellationToken) This method performs a seeding operation for objects, from the given configuration. Declaration protected virtual async Task SeedUserClaimsAsync(IConfiguration dataSection, string userName, bool force, CancellationToken cancellationToken = null) Parameters Type Name Description IConfiguration dataSection The data to use for the operation. System.String userName The role name of the person performing the operation. System.Boolean force true to force the seeding operation when data already exists in the associated table(s), false to stop the operation whenever data is detected in the associated table(s). CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. SeedUserClaimsAsync(List<UserClaimAssignmentOptions>, String, Boolean, CancellationToken) Declaration public virtual async Task SeedUserClaimsAsync(List<UserClaimAssignmentOptions> userClaims, string userName, bool force = false, CancellationToken cancellationToken = null) Parameters Type Name Description List < UserClaimAssignmentOptions > userClaims System.String userName System.Boolean force CancellationToken cancellationToken Returns Type Description Task SeedUserRolesAsync(IConfiguration, String, Boolean, CancellationToken) This method performs a seeding operation for objects, from the given configuration. Declaration protected virtual async Task SeedUserRolesAsync(IConfiguration dataSection, string userName, bool force, CancellationToken cancellationToken = null) Parameters Type Name Description IConfiguration dataSection The data to use for the operation. System.String userName The role name of the person performing the operation. System.Boolean force true to force the seeding operation when data already exists in the associated table(s), false to stop the operation whenever data is detected in the associated table(s). CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. SeedUserRolesAsync(List<UserRoleAssignmentOptions>, String, Boolean, CancellationToken) Declaration public virtual async Task SeedUserRolesAsync(List<UserRoleAssignmentOptions> userRoles, string userName, bool force = false, CancellationToken cancellationToken = null) Parameters Type Name Description List < UserRoleAssignmentOptions > userRoles System.String userName System.Boolean force CancellationToken cancellationToken Returns Type Description Task SeedUsersAsync(IConfiguration, String, Boolean, CancellationToken) This method performs a seeding operation for objects, from the given configuration. Declaration protected virtual async Task SeedUsersAsync(IConfiguration dataSection, string userName, bool force, CancellationToken cancellationToken = null) Parameters Type Name Description IConfiguration dataSection The data to use for the operation. System.String userName The role name of the person performing the operation. System.Boolean force true to force the seeding operation when data already exists in the associated table(s), false to stop the operation whenever data is detected in the associated table(s). CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. SeedUsersAsync(List<GreenUser>, String, Boolean, CancellationToken) Declaration public virtual async Task SeedUsersAsync(List<GreenUser> users, string userName, bool force = false, CancellationToken cancellationToken = null) Parameters Type Name Description List < GreenUser > users System.String userName System.Boolean force CancellationToken cancellationToken Returns Type Description Task Implements ISeedDirector"
  },
  "api/CG.Green.Globals.html": {
    "href": "api/CG.Green.Globals.html",
    "title": "Class Globals",
    "keywords": "Class Globals This class contains global compile-time constants for the CG.Green microservice. Inheritance System.Object Globals Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green Assembly : CG.Green.Primitives.dll Syntax public static class Globals Fields Caption This constant represents the caption for the application. Declaration public const string Caption = \"Green\" Field Value Type Description System.String"
  },
  "api/CG.Green.Globals.Models.Clients.html": {
    "href": "api/CG.Green.Globals.Models.Clients.html",
    "title": "Class Globals.Models.Clients",
    "keywords": "Class Globals.Models.Clients This class contains sizes for properties. Inheritance System.Object Globals.Models.Clients Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green Assembly : CG.Green.Primitives.dll Syntax public static class Clients Fields ClientIdLength This constant represents the length of the property. Declaration public const int ClientIdLength = 200 Field Value Type Description System.Int32 ClientNameLength This constant represents the length of the property. Declaration public const int ClientNameLength = 200 Field Value Type Description System.Int32 FrontChannelLogoutUriLength This constant represents the length of the property. Declaration public const int FrontChannelLogoutUriLength = 2000 Field Value Type Description System.Int32"
  },
  "api/CG.Green.Globals.Models.html": {
    "href": "api/CG.Green.Globals.Models.html",
    "title": "Class Globals.Models",
    "keywords": "Class Globals.Models This class contains model property sizes. Inheritance System.Object Globals.Models Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green Assembly : CG.Green.Primitives.dll Syntax public static class Models"
  },
  "api/CG.Green.GreenApi.html": {
    "href": "api/CG.Green.GreenApi.html",
    "title": "Class GreenApi",
    "keywords": "Class GreenApi This class is a default implementation of the IGreenApi interface. Inheritance System.Object GreenApi Implements IGreenApi Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green Assembly : CG.Green.dll Syntax class GreenApi : IGreenApi Constructors GreenApi(IApiScopeManager, IClientManager, IGreenRoleManager, IGreenUserManager, IGreenUserClaimManager, IGreenUserRoleManager, IIdentityResourceManager) This constructor creates a new instance of the GreenApi class. Declaration public GreenApi(IApiScopeManager apiScopeManager, IClientManager clientManager, IGreenRoleManager greenRoleManager, IGreenUserManager greenUserManager, IGreenUserClaimManager greenUserClaimManager, IGreenUserRoleManager greenUserRoleManager, IIdentityResourceManager identityResourceManager) Parameters Type Name Description IApiScopeManager apiScopeManager The API scope manager to use with this API. IClientManager clientManager The client manager to use with this API. IGreenRoleManager greenRoleManager The green role manager to use with this API. IGreenUserManager greenUserManager The green user manager to use with this API. IGreenUserClaimManager greenUserClaimManager The green user claim manager to use with this API. IGreenUserRoleManager greenUserRoleManager The green user role manager to use with this API. IIdentityResourceManager identityResourceManager The identity resource manager to use with this API. Fields _apiScopeManager This field backs the ApiScopes property. Declaration protected readonly IApiScopeManager _apiScopeManager Field Value Type Description IApiScopeManager _clientManager This field backs the Clients property. Declaration protected readonly IClientManager _clientManager Field Value Type Description IClientManager _greenRoleManager This field backs the Roles property. Declaration protected readonly IGreenRoleManager _greenRoleManager Field Value Type Description IGreenRoleManager _greenUserClaimManager This field backs the UserClaims property. Declaration protected readonly IGreenUserClaimManager _greenUserClaimManager Field Value Type Description IGreenUserClaimManager _greenUserManager This field backs the Users property. Declaration protected readonly IGreenUserManager _greenUserManager Field Value Type Description IGreenUserManager _greenUserRoleManager This field backs the UserRoles property. Declaration protected readonly IGreenUserRoleManager _greenUserRoleManager Field Value Type Description IGreenUserRoleManager _identityResourceManager This field backs the IdentityResources property. Declaration protected readonly IIdentityResourceManager _identityResourceManager Field Value Type Description IIdentityResourceManager Properties ApiScopes Declaration public IApiScopeManager ApiScopes { get; } Property Value Type Description IApiScopeManager Clients Declaration public IClientManager Clients { get; } Property Value Type Description IClientManager IdentityResources Declaration public IIdentityResourceManager IdentityResources { get; } Property Value Type Description IIdentityResourceManager Roles Declaration public IGreenRoleManager Roles { get; } Property Value Type Description IGreenRoleManager UserClaims Declaration public IGreenUserClaimManager UserClaims { get; } Property Value Type Description IGreenUserClaimManager UserRoles Declaration public IGreenUserRoleManager UserRoles { get; } Property Value Type Description IGreenUserRoleManager Users Declaration public IGreenUserManager Users { get; } Property Value Type Description IGreenUserManager Implements IGreenApi"
  },
  "api/CG.Green.Host.Pages.Admin.ApiScopes.html": {
    "href": "api/CG.Green.Host.Pages.Admin.ApiScopes.html",
    "title": "Namespace CG.Green.Host.Pages.Admin.ApiScopes",
    "keywords": "Namespace CG.Green.Host.Pages.Admin.ApiScopes Classes Index This class is the code-behind for the Index page."
  },
  "api/CG.Green.Host.Pages.Admin.ApiScopes.Index.html": {
    "href": "api/CG.Green.Host.Pages.Admin.ApiScopes.Index.html",
    "title": "Class Index",
    "keywords": "Class Index This class is the code-behind for the Index page. Inheritance System.Object Index Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Host.Pages.Admin.ApiScopes Assembly : CG.Green.Host.dll Syntax public class Index"
  },
  "api/CG.Green.Host.Pages.Admin.Clients._Wrapper.html": {
    "href": "api/CG.Green.Host.Pages.Admin.Clients._Wrapper.html",
    "title": "Class _Wrapper",
    "keywords": "Class _Wrapper This class wraps a string for the component, since that type is incapable of binding to a single string object. Inheritance System.Object _Wrapper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Host.Pages.Admin.Clients Assembly : CG.Green.Host.dll Syntax public class _Wrapper Properties Value Declaration public string Value { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Green.Host.Pages.Admin.Clients.Detail.html": {
    "href": "api/CG.Green.Host.Pages.Admin.Clients.Detail.html",
    "title": "Class Detail",
    "keywords": "Class Detail This class is the code-behind for the Detail page. Inheritance System.Object Detail Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Host.Pages.Admin.Clients Assembly : CG.Green.Host.dll Syntax public class Detail Fields _allScopes This field contains the list of all scopes. Declaration protected IEnumerable<string> _allScopes Field Value Type Description IEnumerable < System.String > _crumbs This field contains a reference to breadcrumbs for the page. Declaration protected List<BreadcrumbItem> _crumbs Field Value Type Description List < BreadcrumbItem > _isLoading This field indicates the page is loading data. Declaration protected bool _isLoading Field Value Type Description System.Boolean _model This field contains the model for the page. Declaration protected Client? _model Field Value Type Description System.Nullable < Client > _postLogoutRedirectUris This field contains the list of post logout redirect uris. Declaration protected readonly List<_Wrapper> _postLogoutRedirectUris Field Value Type Description List < _Wrapper > _redirectUris This field contains the list of redirect uris. Declaration protected readonly List<_Wrapper> _redirectUris Field Value Type Description List < _Wrapper > _secrets This field contains the list of client secrets. Declaration protected readonly List<SecretVM> _secrets Field Value Type Description List < SecretVM > _selectedGrantType This field contains the selected grant type, for the model. Declaration protected AllowedGrantTypes _selectedGrantType Field Value Type Description AllowedGrantTypes _selectedScopes This field contains the list of selected scopes. Declaration protected IEnumerable<string> _selectedScopes Field Value Type Description IEnumerable < System.String > Properties ClientId This property contains the identifier for the client. Declaration public string ClientId { get; set; } Property Value Type Description System.String DialogService This property contains the dialog service for this page. Declaration protected IDialogService DialogService { get; set; } Property Value Type Description IDialogService GreenApi This property contains the green API for the page. Declaration protected IGreenApi GreenApi { get; set; } Property Value Type Description IGreenApi HttpContextAccessor This property contains the HTTP context accessor. Declaration protected IHttpContextAccessor HttpContextAccessor { get; set; } Property Value Type Description IHttpContextAccessor Logger This property contains the logger for this page. Declaration protected ILogger<Detail> Logger { get; set; } Property Value Type Description ILogger < Detail > NavigationManager This property contains the navigation manager for the page. Declaration protected NavigationManager NavigationManager { get; set; } Property Value Type Description NavigationManager SnackbarService This property contains the snackbar service for the page. Declaration protected ISnackbar SnackbarService { get; set; } Property Value Type Description ISnackbar UserName This property contains the name of the current user, or the word 'anonymous' if nobody is currently authenticated. Declaration protected string UserName { get; } Property Value Type Description System.String Methods LoadDataAsync() This method loads the data for the page. Declaration async Task LoadDataAsync() Returns Type Description Task A task to perform the operation. OnCreatePostLogoutRedirectUriAsync() This method creates a post logout redirect uri for the client. Declaration protected async Task OnCreatePostLogoutRedirectUriAsync() Returns Type Description Task OnCreateRedirectUriAsync() This method creates a redirect uri for the client. Declaration protected async Task OnCreateRedirectUriAsync() Returns Type Description Task OnCreateSecretAsync() This method creates a new secret for the client. Declaration protected async Task OnCreateSecretAsync() Returns Type Description Task OnDeletePostLogoutRedirectUriAsync(String) This method deletes a post logout redirect uri from the client. Declaration protected async Task OnDeletePostLogoutRedirectUriAsync(string uri) Parameters Type Name Description System.String uri The uri to use for the operation. Returns Type Description Task OnDeleteRedirectUriAsync(String) This method deletes a redirect uri from the client. Declaration protected async Task OnDeleteRedirectUriAsync(string uri) Parameters Type Name Description System.String uri The uri to use for the operation. Returns Type Description Task OnDeleteSecretAsync(SecretVM) This method deletes a secret from the client. Declaration protected async Task OnDeleteSecretAsync(SecretVM secret) Parameters Type Name Description SecretVM secret The secret to use for the operation. Returns Type Description Task OnInitializedAsync() This method is called to initialize the page. Declaration protected override async Task OnInitializedAsync() Returns Type Description Task A task to perform the operation. OnValidSubmitAsync() This method is called when the user submits the form. Declaration protected async Task OnValidSubmitAsync() Returns Type Description Task A task to perform the operation."
  },
  "api/CG.Green.Host.Pages.Admin.Clients.html": {
    "href": "api/CG.Green.Host.Pages.Admin.Clients.html",
    "title": "Namespace CG.Green.Host.Pages.Admin.Clients",
    "keywords": "Namespace CG.Green.Host.Pages.Admin.Clients Classes _Wrapper This class wraps a string for the component, since that type is incapable of binding to a single string object. Detail This class is the code-behind for the Detail page. Index This class is the code-behind for the Index page. NewDialog This class is the code-behind for the NewDialog page."
  },
  "api/CG.Green.Host.Pages.Admin.Clients.Index.html": {
    "href": "api/CG.Green.Host.Pages.Admin.Clients.Index.html",
    "title": "Class Index",
    "keywords": "Class Index This class is the code-behind for the Index page. Inheritance System.Object Index Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Host.Pages.Admin.Clients Assembly : CG.Green.Host.dll Syntax public class Index Fields _clients This field contains the list of clients. Declaration protected readonly List<Client> _clients Field Value Type Description List < Client > _crumbs This field contains a reference to breadcrumbs for the view. Declaration protected readonly List<BreadcrumbItem> _crumbs Field Value Type Description List < BreadcrumbItem > _gridSearchString This field contains the current search string. Declaration protected string _gridSearchString Field Value Type Description System.String _isLoading This field indicates when the page is loading data. Declaration protected bool _isLoading Field Value Type Description System.Boolean Properties DialogService This property contains the dialog service for this page. Declaration protected IDialogService DialogService { get; set; } Property Value Type Description IDialogService GreenApi This property contains the green api for this page. Declaration protected IGreenApi GreenApi { get; set; } Property Value Type Description IGreenApi HttpContextAccessor This property contains the HTTP context accessor. Declaration protected IHttpContextAccessor HttpContextAccessor { get; set; } Property Value Type Description IHttpContextAccessor Logger This property contains the logger for this page. Declaration protected ILogger<Index> Logger { get; set; } Property Value Type Description ILogger < Index > NavigationManager This property contains the navigation manager for the page. Declaration protected NavigationManager NavigationManager { get; set; } Property Value Type Description NavigationManager SnackbarService This property contains the snackbar service for this page. Declaration protected ISnackbar SnackbarService { get; set; } Property Value Type Description ISnackbar UserName This property contains the name of the current user, or the word 'anonymous' if nobody is currently authenticated. Declaration protected string UserName { get; } Property Value Type Description System.String Methods DisableClientAsync(Client) This method disables the given client. Declaration protected async Task DisableClientAsync(Client client) Parameters Type Name Description Client client The client to use for the operation. Returns Type Description Task A task to perform the operation. EnableClientAsync(Client) This method enables the given client. Declaration protected async Task EnableClientAsync(Client client) Parameters Type Name Description Client client The client to use for the operation. Returns Type Description Task A task to perform the operation. FilterFunc(Client, String) This method performs a search of the clients. Declaration protected bool FilterFunc(Client element, string searchString) Parameters Type Name Description Client element The element to uses for the operation. System.String searchString The search string to use for the operation. Returns Type Description System.Boolean true if a match was found; false otherwise. FilterFunc1(Client) This method adapts the FilterFunc(Client, String) method for use with a control. Declaration protected bool FilterFunc1(Client element) Parameters Type Name Description Client element The element to use for the operation. Returns Type Description System.Boolean true if a match was found; false otherwise. LoadClientsAsync() This method loads clients for the page. Declaration async Task LoadClientsAsync() Returns Type Description Task A task to perform the operation. OnCreateAsync() This method adds a new client. Declaration protected async Task OnCreateAsync() Returns Type Description Task OnDeleteAsync(Client) This method deletes the given client. Declaration protected async Task OnDeleteAsync(Client client) Parameters Type Name Description Client client The client to use for the operation. Returns Type Description Task A task to perform the operation. OnEditAsync(Client) This method edits the given client. Declaration protected async Task OnEditAsync(Client client) Parameters Type Name Description Client client The client to use for the operation. Returns Type Description Task A task to perform the operation. OnInitializedAsync() This method initializes the page. Declaration protected override async Task OnInitializedAsync() Returns Type Description Task A task to perform the operation."
  },
  "api/CG.Green.Host.Pages.Admin.Clients.NewDialog.html": {
    "href": "api/CG.Green.Host.Pages.Admin.Clients.NewDialog.html",
    "title": "Class NewDialog",
    "keywords": "Class NewDialog This class is the code-behind for the NewDialog page. Inheritance System.Object NewDialog Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Host.Pages.Admin.Clients Assembly : CG.Green.Host.dll Syntax public class NewDialog Properties DialogService This property contains the dialog service for this page. Declaration protected IDialogService DialogService { get; set; } Property Value Type Description IDialogService Logger This property contains the logger for this page. Declaration protected ILogger<NewDialog> Logger { get; set; } Property Value Type Description ILogger < NewDialog > Model This property contains the edit form's model. Declaration public NewClientVM Model { get; set; } Property Value Type Description NewClientVM MudDialog This property contains the dialog reference. Declaration public MudDialogInstance MudDialog { get; set; } Property Value Type Description MudDialogInstance SnackbarService This property contains the snackbar service for this page. Declaration protected ISnackbar SnackbarService { get; set; } Property Value Type Description ISnackbar Methods Cancel() This method cancels the dialog. Declaration protected void Cancel() OnValidSubmit(EditContext) This method submits the dialog. Declaration protected void OnValidSubmit(EditContext editContext) Parameters Type Name Description EditContext editContext"
  },
  "api/CG.Green.Host.Pages.Admin.Resources.html": {
    "href": "api/CG.Green.Host.Pages.Admin.Resources.html",
    "title": "Namespace CG.Green.Host.Pages.Admin.Resources",
    "keywords": "Namespace CG.Green.Host.Pages.Admin.Resources Classes Index This class is the code-behind for the Index page."
  },
  "api/CG.Green.Host.Pages.Admin.Resources.Index.html": {
    "href": "api/CG.Green.Host.Pages.Admin.Resources.Index.html",
    "title": "Class Index",
    "keywords": "Class Index This class is the code-behind for the Index page. Inheritance System.Object Index Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Host.Pages.Admin.Resources Assembly : CG.Green.Host.dll Syntax public class Index"
  },
  "api/CG.Green.Host.Pages.Admin.Roles.html": {
    "href": "api/CG.Green.Host.Pages.Admin.Roles.html",
    "title": "Namespace CG.Green.Host.Pages.Admin.Roles",
    "keywords": "Namespace CG.Green.Host.Pages.Admin.Roles Classes Index This class is the code-behind for the Index page."
  },
  "api/CG.Green.Host.Pages.Admin.Roles.Index.html": {
    "href": "api/CG.Green.Host.Pages.Admin.Roles.Index.html",
    "title": "Class Index",
    "keywords": "Class Index This class is the code-behind for the Index page. Inheritance System.Object Index Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Host.Pages.Admin.Roles Assembly : CG.Green.Host.dll Syntax public class Index"
  },
  "api/CG.Green.Host.Pages.Admin.Users.html": {
    "href": "api/CG.Green.Host.Pages.Admin.Users.html",
    "title": "Namespace CG.Green.Host.Pages.Admin.Users",
    "keywords": "Namespace CG.Green.Host.Pages.Admin.Users Classes Index This class is the code-behind for the Index page."
  },
  "api/CG.Green.Host.Pages.Admin.Users.Index.html": {
    "href": "api/CG.Green.Host.Pages.Admin.Users.Index.html",
    "title": "Class Index",
    "keywords": "Class Index This class is the code-behind for the Index page. Inheritance System.Object Index Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Host.Pages.Admin.Users Assembly : CG.Green.Host.dll Syntax public class Index"
  },
  "api/CG.Green.Host.Pages.Debugging.html": {
    "href": "api/CG.Green.Host.Pages.Debugging.html",
    "title": "Namespace CG.Green.Host.Pages.Debugging",
    "keywords": "Namespace CG.Green.Host.Pages.Debugging Classes WhoAmI This class is the code-behind for the WhoAmI page."
  },
  "api/CG.Green.Host.Pages.Debugging.WhoAmI.html": {
    "href": "api/CG.Green.Host.Pages.Debugging.WhoAmI.html",
    "title": "Class WhoAmI",
    "keywords": "Class WhoAmI This class is the code-behind for the WhoAmI page. Inheritance System.Object WhoAmI Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Host.Pages.Debugging Assembly : CG.Green.Host.dll Syntax public class WhoAmI Fields _crumbs This field contains a reference to breadcrumbs for the view. Declaration protected readonly List<BreadcrumbItem> _crumbs Field Value Type Description List < BreadcrumbItem > Properties HttpContextAccessor This property contains the HTTP context accessor. Declaration protected IHttpContextAccessor HttpContextAccessor { get; set; } Property Value Type Description IHttpContextAccessor"
  },
  "api/CG.Green.Host.Pages.ErrorModel.html": {
    "href": "api/CG.Green.Host.Pages.ErrorModel.html",
    "title": "Class ErrorModel",
    "keywords": "Class ErrorModel This class is the code-behind for the Error page. Inheritance System.Object ErrorModel Namespace : CG.Green.Host.Pages Assembly : CG.Green.Host.dll Syntax public class ErrorModel : PageModel Constructors ErrorModel(ILogger<ErrorModel>) This constructor creates a new instance of the ErrorModel class. Declaration public ErrorModel(ILogger<ErrorModel> logger) Parameters Type Name Description ILogger < ErrorModel > logger The logger for this model Fields _logger This field contains the logger for this model. Declaration readonly ILogger<ErrorModel> _logger Field Value Type Description ILogger < ErrorModel > Properties RequestId This property contains the request identifier for this model. Declaration public string RequestId { get; set; } Property Value Type Description System.String ShowRequestId This property indicates whether or not to show the RequestId property on the error page. Declaration public bool ShowRequestId { get; } Property Value Type Description System.Boolean Methods OnGet() This method is called when the page receives an HTTP GET verb. Declaration public void OnGet()"
  },
  "api/CG.Green.Host.Pages.Home.html": {
    "href": "api/CG.Green.Host.Pages.Home.html",
    "title": "Namespace CG.Green.Host.Pages.Home",
    "keywords": "Namespace CG.Green.Host.Pages.Home Classes Index This class is the code-behind for the Index page."
  },
  "api/CG.Green.Host.Pages.Home.Index.html": {
    "href": "api/CG.Green.Host.Pages.Home.Index.html",
    "title": "Class Index",
    "keywords": "Class Index This class is the code-behind for the Index page. Inheritance System.Object Index Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Host.Pages.Home Assembly : CG.Green.Host.dll Syntax public class Index Fields data Declaration List<string> data Field Value Type Description List < System.String >"
  },
  "api/CG.Green.Host.Pages.html": {
    "href": "api/CG.Green.Host.Pages.html",
    "title": "Namespace CG.Green.Host.Pages",
    "keywords": "Namespace CG.Green.Host.Pages Classes ErrorModel This class is the code-behind for the Error page."
  },
  "api/CG.Green.Host.Themes.GreenTheme.html": {
    "href": "api/CG.Green.Host.Themes.GreenTheme.html",
    "title": "Class GreenTheme",
    "keywords": "Class GreenTheme This class represents the default MudBlazor UI theme. Inheritance System.Object GreenTheme Namespace : CG.Green.Host.Themes Assembly : CG.Green.Host.dll Syntax public class GreenTheme : DefaultTheme<GreenTheme> Constructors GreenTheme() This constructor creates a new instance of the GreenTheme class. Declaration public GreenTheme()"
  },
  "api/CG.Green.Host.Themes.html": {
    "href": "api/CG.Green.Host.Themes.html",
    "title": "Namespace CG.Green.Host.Themes",
    "keywords": "Namespace CG.Green.Host.Themes Classes GreenTheme This class represents the default MudBlazor UI theme."
  },
  "api/CG.Green.Host.ViewModels.AllowedGrantTypes.html": {
    "href": "api/CG.Green.Host.ViewModels.AllowedGrantTypes.html",
    "title": "Enum AllowedGrantTypes",
    "keywords": "Enum AllowedGrantTypes This enumerations lists the valid grant types, and combinations of grant types. Namespace : CG.Green.Host.ViewModels Assembly : CG.Green.Host.dll Syntax public enum AllowedGrantTypes Fields Name Description Ciba CIBA grant type. ClientCredentials Client credential grant type. Code code grant type. CodeAndClientCredentials Code and client credential grant type. DeviceFlow Device flow grant type. Hybrid Hybrid grant type. HybridAndClientCredentials Hybrid and client credential grant type. Implicit Implicit grant type. ImplicitAndClientCredentials Implicit and client credential grant type. ResourceOwnerPassword Resource owner grant type. ResourceOwnerPasswordAndClientCredentials Resource owner and client credential grant type. Extension Methods AllowedGrantTypesExtensions.FromAllowedGrantTypes()"
  },
  "api/CG.Green.Host.ViewModels.AllowedGrantTypesExtensions.html": {
    "href": "api/CG.Green.Host.ViewModels.AllowedGrantTypesExtensions.html",
    "title": "Class AllowedGrantTypesExtensions",
    "keywords": "Class AllowedGrantTypesExtensions This class contains extensions for the AllowedGrantTypes type. Inheritance System.Object AllowedGrantTypesExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Host.ViewModels Assembly : CG.Green.Host.dll Syntax public static class AllowedGrantTypesExtensions Methods FromAllowedGrantTypes(AllowedGrantTypes) This method converts between a AllowedGrantTypes value and a corresponding collection of Duende grant type strings. Declaration public static ICollection<string> FromAllowedGrantTypes(this AllowedGrantTypes value) Parameters Type Name Description AllowedGrantTypes value The value to use for the operation. Returns Type Description ICollection < System.String > A collection of strings. ToAllowedGrantTypes(ICollection<String>) This method converts between a collection of grant type strings and a corresponding AllowedGrantTypes value. Declaration public static AllowedGrantTypes ToAllowedGrantTypes(this ICollection<string> values) Parameters Type Name Description ICollection < System.String > values The values to use for the operation. Returns Type Description AllowedGrantTypes A AllowedGrantTypes value."
  },
  "api/CG.Green.Host.ViewModels.html": {
    "href": "api/CG.Green.Host.ViewModels.html",
    "title": "Namespace CG.Green.Host.ViewModels",
    "keywords": "Namespace CG.Green.Host.ViewModels Classes AllowedGrantTypesExtensions This class contains extensions for the AllowedGrantTypes type. NewClientVM This class is a view-model for creating a new client. SecretVM This class is a view-model for a Duende client secret. Enums AllowedGrantTypes This enumerations lists the valid grant types, and combinations of grant types."
  },
  "api/CG.Green.Host.ViewModels.NewClientVM.html": {
    "href": "api/CG.Green.Host.ViewModels.NewClientVM.html",
    "title": "Class NewClientVM",
    "keywords": "Class NewClientVM This class is a view-model for creating a new client. Inheritance System.Object NewClientVM Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Host.ViewModels Assembly : CG.Green.Host.dll Syntax public class NewClientVM Properties ClientId This property contains the identifier for the client. Declaration public string ClientId { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Green.Host.ViewModels.SecretVM.html": {
    "href": "api/CG.Green.Host.ViewModels.SecretVM.html",
    "title": "Class SecretVM",
    "keywords": "Class SecretVM This class is a view-model for a Duende client secret. Inheritance System.Object SecretVM Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Host.ViewModels Assembly : CG.Green.Host.dll Syntax public class SecretVM Properties IsHashed This property indicates whether the secret has been hashed, or not. Declaration public bool IsHashed { get; set; } Property Value Type Description System.Boolean Secret This property contains the Duende client secret. Declaration public Secret Secret { get; set; } Property Value Type Description Secret"
  },
  "api/CG.Green.html": {
    "href": "api/CG.Green.html",
    "title": "Namespace CG.Green",
    "keywords": "Namespace CG.Green Classes Globals This class contains global compile-time constants for the CG.Green microservice. Globals.Models This class contains model property sizes. Globals.Models.Clients This class contains sizes for properties. GreenApi This class is a default implementation of the IGreenApi interface. Interfaces IGreenApi This interface represents the API for the CG.Green microservice."
  },
  "api/CG.Green.Identity.BuilderCache.html": {
    "href": "api/CG.Green.Identity.BuilderCache.html",
    "title": "Class BuilderCache",
    "keywords": "Class BuilderCache This class utility contains a cache of identity builders. Inheritance System.Object BuilderCache Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Identity Assembly : CG.Green.Primitives.dll Syntax public static class BuilderCache Remarks This type exists as a way to separate the database specific, and non database specific parts of the ASP.NET and Duende identity libraries. Both those libraries fully expect everything to live together in a single, monolithic project. I chose not to take that approach. Because of that fact, I need to share the ASP.NET and Duende identity builders between the identity and DAL projects - without introducing crazy project dependencies in the process. That way I do that is with this class utility. This type serves no other purpose and shouldn't be used for any other reason. Properties Builders This property contains the cache of identity builders. Declaration public static Dictionary<string, object> Builders { get; set; } Property Value Type Description Dictionary < System.String , System.Object >"
  },
  "api/CG.Green.Identity.html": {
    "href": "api/CG.Green.Identity.html",
    "title": "Namespace CG.Green.Identity",
    "keywords": "Namespace CG.Green.Identity Classes BuilderCache This class utility contains a cache of identity builders. PolicyNameDefaults This class utility contains constants related to identity policies. RoleNameDefaults This class utility contains constants related to roles."
  },
  "api/CG.Green.Identity.Models.GreenRole.html": {
    "href": "api/CG.Green.Identity.Models.GreenRole.html",
    "title": "Class GreenRole",
    "keywords": "Class GreenRole This class represents a role for the CG.Green microservice. Inheritance System.Object GreenRole Namespace : CG.Green.Identity.Models Assembly : CG.Green.Primitives.dll Syntax public class GreenRole : IdentityRole"
  },
  "api/CG.Green.Identity.Models.GreenRoleClaim.html": {
    "href": "api/CG.Green.Identity.Models.GreenRoleClaim.html",
    "title": "Class GreenRoleClaim",
    "keywords": "Class GreenRoleClaim This class represents a claim for a role, for the CG.Green microservice. Inheritance System.Object GreenRoleClaim Namespace : CG.Green.Identity.Models Assembly : CG.Green.Primitives.dll Syntax public class GreenRoleClaim : IdentityRoleClaim<string>"
  },
  "api/CG.Green.Identity.Models.GreenUser.html": {
    "href": "api/CG.Green.Identity.Models.GreenUser.html",
    "title": "Class GreenUser",
    "keywords": "Class GreenUser This class represents a user for the CG.Green microservice. Inheritance System.Object GreenUser Namespace : CG.Green.Identity.Models Assembly : CG.Green.Primitives.dll Syntax public class GreenUser : IdentityUser"
  },
  "api/CG.Green.Identity.Models.GreenUserClaim.html": {
    "href": "api/CG.Green.Identity.Models.GreenUserClaim.html",
    "title": "Class GreenUserClaim",
    "keywords": "Class GreenUserClaim This class represents a claim for a user, for the CG.Green microservice. Inheritance System.Object GreenUserClaim Namespace : CG.Green.Identity.Models Assembly : CG.Green.Primitives.dll Syntax public class GreenUserClaim : IdentityUserClaim<string>"
  },
  "api/CG.Green.Identity.Models.GreenUserLogin.html": {
    "href": "api/CG.Green.Identity.Models.GreenUserLogin.html",
    "title": "Class GreenUserLogin",
    "keywords": "Class GreenUserLogin This class represents a login for a user, for the CG.Green microservice. Inheritance System.Object GreenUserLogin Namespace : CG.Green.Identity.Models Assembly : CG.Green.Primitives.dll Syntax public class GreenUserLogin : IdentityUserLogin<string>"
  },
  "api/CG.Green.Identity.Models.GreenUserRole.html": {
    "href": "api/CG.Green.Identity.Models.GreenUserRole.html",
    "title": "Class GreenUserRole",
    "keywords": "Class GreenUserRole This class represents a role assignment for a user, for the CG.Green microservice. Inheritance System.Object GreenUserRole Namespace : CG.Green.Identity.Models Assembly : CG.Green.Primitives.dll Syntax public class GreenUserRole : IdentityUserRole<string>"
  },
  "api/CG.Green.Identity.Models.GreenUserToken.html": {
    "href": "api/CG.Green.Identity.Models.GreenUserToken.html",
    "title": "Class GreenUserToken",
    "keywords": "Class GreenUserToken This class represents a user token, for the CG.Green microservice. Inheritance System.Object GreenUserToken Namespace : CG.Green.Identity.Models Assembly : CG.Green.Primitives.dll Syntax public class GreenUserToken : IdentityUserToken<string>"
  },
  "api/CG.Green.Identity.Models.html": {
    "href": "api/CG.Green.Identity.Models.html",
    "title": "Namespace CG.Green.Identity.Models",
    "keywords": "Namespace CG.Green.Identity.Models Classes GreenRole This class represents a role for the CG.Green microservice. GreenRoleClaim This class represents a claim for a role, for the CG.Green microservice. GreenUser This class represents a user for the CG.Green microservice. GreenUserClaim This class represents a claim for a user, for the CG.Green microservice. GreenUserLogin This class represents a login for a user, for the CG.Green microservice. GreenUserRole This class represents a role assignment for a user, for the CG.Green microservice. GreenUserToken This class represents a user token, for the CG.Green microservice."
  },
  "api/CG.Green.Identity.Options.EmailOptions.html": {
    "href": "api/CG.Green.Identity.Options.EmailOptions.html",
    "title": "Class EmailOptions",
    "keywords": "Class EmailOptions This class contains configuration settings for email operations of the CG.Green microservice. Inheritance System.Object EmailOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Identity.Options Assembly : CG.Green.Identity.dll Syntax public class EmailOptions Properties DefaultStrategy This property contains the name of the default email strategy. Declaration public string DefaultStrategy { get; set; } Property Value Type Description System.String From This property contains the 'From' address, for the client. Declaration public string From { get; set; } Property Value Type Description System.String Purple This property contains options CG.Purple client options. Declaration public PurpleClientOptions? Purple { get; set; } Property Value Type Description System.Nullable < PurpleClientOptions > Smtp This property contains options SMTP client options. Declaration public SmtpClientOptions Smtp { get; set; } Property Value Type Description SmtpClientOptions"
  },
  "api/CG.Green.Identity.Options.GreenIdentityOptions.html": {
    "href": "api/CG.Green.Identity.Options.GreenIdentityOptions.html",
    "title": "Class GreenIdentityOptions",
    "keywords": "Class GreenIdentityOptions This class contains configuration settings for the identity layer of the CG.Green microservice. Inheritance System.Object GreenIdentityOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Identity.Options Assembly : CG.Green.Identity.dll Syntax public class GreenIdentityOptions Properties AspNet This property contains optional ASP.NET identity options. Declaration public IdentityOptions? AspNet { get; set; } Property Value Type Description System.Nullable < IdentityOptions > Duende This property contains optional Duende identity options. Declaration public IdentityServerOptions? Duende { get; set; } Property Value Type Description System.Nullable < IdentityServerOptions > Email This property contains optional settings for email operations. Declaration public EmailOptions Email { get; set; } Property Value Type Description EmailOptions"
  },
  "api/CG.Green.Identity.Options.html": {
    "href": "api/CG.Green.Identity.Options.html",
    "title": "Namespace CG.Green.Identity.Options",
    "keywords": "Namespace CG.Green.Identity.Options Classes EmailOptions This class contains configuration settings for email operations of the CG.Green microservice. GreenIdentityOptions This class contains configuration settings for the identity layer of the CG.Green microservice. SmtpClientOptions This class contains configuration settings for SMTP email operations."
  },
  "api/CG.Green.Identity.Options.SmtpClientOptions.html": {
    "href": "api/CG.Green.Identity.Options.SmtpClientOptions.html",
    "title": "Class SmtpClientOptions",
    "keywords": "Class SmtpClientOptions This class contains configuration settings for SMTP email operations. Inheritance System.Object SmtpClientOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Identity.Options Assembly : CG.Green.Identity.dll Syntax public class SmtpClientOptions Properties DefaultBaseAddress This property contains the default base address for the remote SMTP server host. Declaration public string DefaultBaseAddress { get; set; } Property Value Type Description System.String Password This property contains the optional password for the client. Declaration public string Password { get; set; } Property Value Type Description System.String UserName This property contains the optional user name for the client. Declaration public string UserName { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Green.Identity.PolicyNameDefaults.html": {
    "href": "api/CG.Green.Identity.PolicyNameDefaults.html",
    "title": "Class PolicyNameDefaults",
    "keywords": "Class PolicyNameDefaults This class utility contains constants related to identity policies. Inheritance System.Object PolicyNameDefaults Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Identity Assembly : CG.Green.Identity.dll Syntax public static class PolicyNameDefaults Fields AdminPolicy This constant contains the name of a policy that requires an 'Admin' role, for authorization purposes. Declaration public const string AdminPolicy = \"AdminPolicy\" Field Value Type Description System.String StandardPolicy This constant contains the name of a policy that requires an authenticated user, for authorization purposes. Declaration public const string StandardPolicy = \"StandardPolicy\" Field Value Type Description System.String SuperAdminPolicy This constant contains the name of a policy that requires a 'SuperAdmin' role, for authorization purposes. Declaration public const string SuperAdminPolicy = \"SuperAdminPolicy\" Field Value Type Description System.String"
  },
  "api/CG.Green.Identity.RoleNameDefaults.html": {
    "href": "api/CG.Green.Identity.RoleNameDefaults.html",
    "title": "Class RoleNameDefaults",
    "keywords": "Class RoleNameDefaults This class utility contains constants related to roles. Inheritance System.Object RoleNameDefaults Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Identity Assembly : CG.Green.Identity.dll Syntax public static class RoleNameDefaults Fields Admin This constant contains the name of an 'administrator' role. Declaration public const string Admin = \"Admin\" Field Value Type Description System.String SuperAdmin This constant contains the name of a 'super administrator' role. Declaration public const string SuperAdmin = \"SuperAdmin\" Field Value Type Description System.String"
  },
  "api/CG.Green.IGreenApi.html": {
    "href": "api/CG.Green.IGreenApi.html",
    "title": "Interface IGreenApi",
    "keywords": "Interface IGreenApi This interface represents the API for the CG.Green microservice. Namespace : CG.Green Assembly : CG.Green.Abstractions.dll Syntax public interface IGreenApi Properties ApiScopes This property contains an object for performing api scope related operations. Declaration IApiScopeManager ApiScopes { get; } Property Value Type Description IApiScopeManager Clients This property contains an object for performing client related operations. Declaration IClientManager Clients { get; } Property Value Type Description IClientManager IdentityResources This property contains an object for performing identity resource operations. Declaration IIdentityResourceManager IdentityResources { get; } Property Value Type Description IIdentityResourceManager Roles This property contains an object for performing role operations. Declaration IGreenRoleManager Roles { get; } Property Value Type Description IGreenRoleManager UserClaims This property contains an object for performing user claim operations. Declaration IGreenUserClaimManager UserClaims { get; } Property Value Type Description IGreenUserClaimManager UserRoles This property contains an object for performing user role operations. Declaration IGreenUserRoleManager UserRoles { get; } Property Value Type Description IGreenUserRoleManager Users This property contains an object for performing user operations. Declaration IGreenUserManager Users { get; } Property Value Type Description IGreenUserManager"
  },
  "api/CG.Green.Managers.ApiScopeManager.html": {
    "href": "api/CG.Green.Managers.ApiScopeManager.html",
    "title": "Class ApiScopeManager",
    "keywords": "Class ApiScopeManager This class is a default implementation of the IApiScopeManager interface. Inheritance System.Object ApiScopeManager Implements IApiScopeManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Managers Assembly : CG.Green.dll Syntax class ApiScopeManager : IApiScopeManager Constructors ApiScopeManager(IApiScopeRepository, ILogger<IApiScopeManager>) This constructor creates a new instance of the ApiScopeManager class. Declaration public ApiScopeManager(IApiScopeRepository apiScopeRepository, ILogger<IApiScopeManager> logger) Parameters Type Name Description IApiScopeRepository apiScopeRepository The api scope repository to use with this manager. ILogger < IApiScopeManager > logger The logger to use with this manager. Fields _apiScopeRepository This field contains the api scope repository for this manager. Declaration protected readonly IApiScopeRepository _apiScopeRepository Field Value Type Description IApiScopeRepository _logger This field contains the logger for this manager. Declaration protected readonly ILogger<IApiScopeManager> _logger Field Value Type Description ILogger < IApiScopeManager > Methods AnyAsync(CancellationToken) Declaration public virtual async Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean > CountAsync(CancellationToken) Declaration public virtual async Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int64 > CreateAsync(ApiScope, String, CancellationToken) Declaration public virtual async Task<ApiScope> CreateAsync(ApiScope client, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description ApiScope client System.String userName CancellationToken cancellationToken Returns Type Description Task < ApiScope > DeleteAsync(ApiScope, String, CancellationToken) Declaration public virtual async Task DeleteAsync(ApiScope client, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description ApiScope client System.String userName CancellationToken cancellationToken Returns Type Description Task FindAllAsync(CancellationToken) Declaration public virtual async Task<IEnumerable<ApiScope>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IEnumerable < ApiScope >> UpdateAsync(ApiScope, String, CancellationToken) Declaration public virtual async Task<ApiScope> UpdateAsync(ApiScope client, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description ApiScope client System.String userName CancellationToken cancellationToken Returns Type Description Task < ApiScope > Implements IApiScopeManager"
  },
  "api/CG.Green.Managers.ClientManager.html": {
    "href": "api/CG.Green.Managers.ClientManager.html",
    "title": "Class ClientManager",
    "keywords": "Class ClientManager This class is a default implementation of the IClientManager interface. Inheritance System.Object ClientManager Implements IClientManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Managers Assembly : CG.Green.dll Syntax class ClientManager : IClientManager Constructors ClientManager(IClientRepository, ILogger<IClientManager>) This constructor creates a new instance of the ClientManager class. Declaration public ClientManager(IClientRepository clientRepository, ILogger<IClientManager> logger) Parameters Type Name Description IClientRepository clientRepository The client repository to use with this manager. ILogger < IClientManager > logger The logger to use with this manager. Fields _clientRepository This field contains the client repository for this manager. Declaration protected readonly IClientRepository _clientRepository Field Value Type Description IClientRepository _logger This field contains the logger for this manager. Declaration protected readonly ILogger<IClientManager> _logger Field Value Type Description ILogger < IClientManager > Methods AnyAsync(CancellationToken) Declaration public virtual async Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean > CountAsync(CancellationToken) Declaration public virtual async Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int64 > CreateAsync(Client, String, CancellationToken) Declaration public virtual async Task<Client> CreateAsync(Client client, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description Client client System.String userName CancellationToken cancellationToken Returns Type Description Task < Client > DeleteAsync(Client, String, CancellationToken) Declaration public virtual async Task DeleteAsync(Client client, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description Client client System.String userName CancellationToken cancellationToken Returns Type Description Task FindAllAsync(CancellationToken) Declaration public virtual async Task<IEnumerable<Client>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IEnumerable < Client >> FindByIdAsync(String, CancellationToken) Declaration public virtual async Task<Client?> FindByIdAsync(string clientId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String clientId CancellationToken cancellationToken Returns Type Description Task < System.Nullable < Client >> UpdateAsync(Client, String, CancellationToken) Declaration public virtual async Task<Client> UpdateAsync(Client client, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description Client client System.String userName CancellationToken cancellationToken Returns Type Description Task < Client > Implements IClientManager"
  },
  "api/CG.Green.Managers.GreenRoleManager.html": {
    "href": "api/CG.Green.Managers.GreenRoleManager.html",
    "title": "Class GreenRoleManager",
    "keywords": "Class GreenRoleManager This class is a default implementation of the IGreenRoleManager interface. Inheritance System.Object GreenRoleManager Implements IGreenRoleManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Managers Assembly : CG.Green.dll Syntax class GreenRoleManager : IGreenRoleManager Constructors GreenRoleManager(RoleManager<GreenRole>, ILogger<IGreenRoleManager>) This constructor creates a new instance of the GreenRoleManager class. Declaration public GreenRoleManager(RoleManager<GreenRole> roleManager, ILogger<IGreenRoleManager> logger) Parameters Type Name Description RoleManager < GreenRole > roleManager The ASP.NET role manager to use with this manager. ILogger < IGreenRoleManager > logger The logger to use with this manager. Fields _logger This field contains the logger for this manager. Declaration protected readonly ILogger<IGreenRoleManager> _logger Field Value Type Description ILogger < IGreenRoleManager > _roleManager This field contains the ASP.NET role manager for this manager. Declaration protected readonly RoleManager<GreenRole> _roleManager Field Value Type Description RoleManager < GreenRole > Methods AnyAsync(CancellationToken) Declaration public virtual Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean > CountAsync(CancellationToken) Declaration public virtual Task<int> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int32 > CreateAsync(GreenRole, String, CancellationToken) Declaration public virtual async Task<GreenRole> CreateAsync(GreenRole greenRole, string roleName, CancellationToken cancellationToken = null) Parameters Type Name Description GreenRole greenRole System.String roleName CancellationToken cancellationToken Returns Type Description Task < GreenRole > DeleteAsync(GreenRole, String, CancellationToken) Declaration public virtual async Task DeleteAsync(GreenRole greenRole, string roleName, CancellationToken cancellationToken = null) Parameters Type Name Description GreenRole greenRole System.String roleName CancellationToken cancellationToken Returns Type Description Task FindAllAsync(CancellationToken) Declaration public virtual Task<IEnumerable<GreenRole>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IEnumerable < GreenRole >> UpdateAsync(GreenRole, String, CancellationToken) Declaration public virtual async Task<GreenRole> UpdateAsync(GreenRole greenRole, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description GreenRole greenRole System.String userName CancellationToken cancellationToken Returns Type Description Task < GreenRole > Implements IGreenRoleManager"
  },
  "api/CG.Green.Managers.GreenUserClaimManager.html": {
    "href": "api/CG.Green.Managers.GreenUserClaimManager.html",
    "title": "Class GreenUserClaimManager",
    "keywords": "Class GreenUserClaimManager This class is a default implementation of the IGreenUserClaimManager interface. Inheritance System.Object GreenUserClaimManager Implements IGreenUserClaimManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Managers Assembly : CG.Green.dll Syntax class GreenUserClaimManager : IGreenUserClaimManager Constructors GreenUserClaimManager(IGreenUserClaimRepository, RoleManager<GreenRole>, SignInManager<GreenUser>, ILogger<IGreenUserClaimManager>) This constructor creates a new instance of the GreenUserClaimManager class. Declaration public GreenUserClaimManager(IGreenUserClaimRepository greenUserClaimRepository, RoleManager<GreenRole> roleManager, SignInManager<GreenUser> signInManager, ILogger<IGreenUserClaimManager> logger) Parameters Type Name Description IGreenUserClaimRepository greenUserClaimRepository The green user claim repository to use with this manager. RoleManager < GreenRole > roleManager The ASP.NET claim manager to use with this manager. SignInManager < GreenUser > signInManager The ASP.NET sign-in manager to use with this manager. ILogger < IGreenUserClaimManager > logger The logger to use with this manager. Fields _greenUserClaimRepository This field contains the green user claim repository for this manager. Declaration protected readonly IGreenUserClaimRepository _greenUserClaimRepository Field Value Type Description IGreenUserClaimRepository _logger This field contains the logger for this manager. Declaration protected readonly ILogger<IGreenUserClaimManager> _logger Field Value Type Description ILogger < IGreenUserClaimManager > _roleManager This field contains the ASP.NET claim manager for this manager. Declaration protected readonly RoleManager<GreenRole> _roleManager Field Value Type Description RoleManager < GreenRole > _signInManager This field contains the ASP.NET sign in manager for this manager. Declaration protected readonly SignInManager<GreenUser> _signInManager Field Value Type Description SignInManager < GreenUser > Methods AnyAsync(CancellationToken) Declaration public virtual async Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean > CountAsync(CancellationToken) Declaration public virtual async Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int64 > CreateAsync(GreenUserClaim, String, CancellationToken) Declaration public virtual async Task<GreenUserClaim> CreateAsync(GreenUserClaim userClaim, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description GreenUserClaim userClaim System.String userName CancellationToken cancellationToken Returns Type Description Task < GreenUserClaim > CreateAsync(String, String, String, String, CancellationToken) Declaration public virtual async Task<GreenUserClaim> CreateAsync(string userEmail, string claimType, string claimValue, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userEmail System.String claimType System.String claimValue System.String userName CancellationToken cancellationToken Returns Type Description Task < GreenUserClaim > Implements IGreenUserClaimManager"
  },
  "api/CG.Green.Managers.GreenUserManager.html": {
    "href": "api/CG.Green.Managers.GreenUserManager.html",
    "title": "Class GreenUserManager",
    "keywords": "Class GreenUserManager This class is a default implementation of the IGreenUserManager interface. Inheritance System.Object GreenUserManager Implements IGreenUserManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Managers Assembly : CG.Green.dll Syntax class GreenUserManager : IGreenUserManager Constructors GreenUserManager(SignInManager<GreenUser>, ILogger<IGreenUserManager>) This constructor creates a new instance of the GreenUserManager class. Declaration public GreenUserManager(SignInManager<GreenUser> signInManager, ILogger<IGreenUserManager> logger) Parameters Type Name Description SignInManager < GreenUser > signInManager The ASP.NET sign-in manager to use with this manager. ILogger < IGreenUserManager > logger The logger to use with this manager. Fields _logger This field contains the logger for this manager. Declaration protected readonly ILogger<IGreenUserManager> _logger Field Value Type Description ILogger < IGreenUserManager > _signInManager This field contains the ASP.NET sign in manager for this manager. Declaration protected readonly SignInManager<GreenUser> _signInManager Field Value Type Description SignInManager < GreenUser > Methods AnyAsync(CancellationToken) Declaration public virtual Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean > CountAsync(CancellationToken) Declaration public virtual Task<int> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int32 > CreateAsync(GreenUser, String, String, CancellationToken) Declaration public virtual async Task<GreenUser> CreateAsync(GreenUser greenUser, string password, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description GreenUser greenUser System.String password System.String userName CancellationToken cancellationToken Returns Type Description Task < GreenUser > DeleteAsync(GreenUser, String, CancellationToken) Declaration public virtual async Task DeleteAsync(GreenUser greenUser, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description GreenUser greenUser System.String userName CancellationToken cancellationToken Returns Type Description Task FindAllAsync(CancellationToken) Declaration public virtual Task<IEnumerable<GreenUser>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IEnumerable < GreenUser >> UpdateAsync(GreenUser, String, CancellationToken) Declaration public virtual async Task<GreenUser> UpdateAsync(GreenUser greenUser, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description GreenUser greenUser System.String userName CancellationToken cancellationToken Returns Type Description Task < GreenUser > Implements IGreenUserManager"
  },
  "api/CG.Green.Managers.GreenUserRoleManager.html": {
    "href": "api/CG.Green.Managers.GreenUserRoleManager.html",
    "title": "Class GreenUserRoleManager",
    "keywords": "Class GreenUserRoleManager This class is a default implementation of the IGreenUserRoleManager interface. Inheritance System.Object GreenUserRoleManager Implements IGreenUserRoleManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Managers Assembly : CG.Green.dll Syntax class GreenUserRoleManager : IGreenUserRoleManager Constructors GreenUserRoleManager(IGreenUserRoleRepository, RoleManager<GreenRole>, SignInManager<GreenUser>, ILogger<IGreenUserRoleManager>) This constructor creates a new instance of the GreenUserRoleManager class. Declaration public GreenUserRoleManager(IGreenUserRoleRepository greenUserRoleRepository, RoleManager<GreenRole> roleManager, SignInManager<GreenUser> signInManager, ILogger<IGreenUserRoleManager> logger) Parameters Type Name Description IGreenUserRoleRepository greenUserRoleRepository The green user role repository to use with this manager. RoleManager < GreenRole > roleManager The ASP.NET role manager to use with this manager. SignInManager < GreenUser > signInManager The ASP.NET sign-in manager to use with this manager. ILogger < IGreenUserRoleManager > logger The logger to use with this manager. Fields _greenUserRoleRepository This field contains the green user role repository for this manager. Declaration protected readonly IGreenUserRoleRepository _greenUserRoleRepository Field Value Type Description IGreenUserRoleRepository _logger This field contains the logger for this manager. Declaration protected readonly ILogger<IGreenUserRoleManager> _logger Field Value Type Description ILogger < IGreenUserRoleManager > _roleManager This field contains the ASP.NET role manager for this manager. Declaration protected readonly RoleManager<GreenRole> _roleManager Field Value Type Description RoleManager < GreenRole > _signInManager This field contains the ASP.NET sign in manager for this manager. Declaration protected readonly SignInManager<GreenUser> _signInManager Field Value Type Description SignInManager < GreenUser > Methods AnyAsync(CancellationToken) Declaration public virtual async Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean > CountAsync(CancellationToken) Declaration public virtual async Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int64 > CreateAsync(GreenUserRole, String, CancellationToken) Declaration public virtual async Task<GreenUserRole> CreateAsync(GreenUserRole userRole, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description GreenUserRole userRole System.String userName CancellationToken cancellationToken Returns Type Description Task < GreenUserRole > CreateAsync(String, String, String, CancellationToken) Declaration public virtual async Task<GreenUserRole> CreateAsync(string userEmail, string roleName, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userEmail System.String roleName System.String userName CancellationToken cancellationToken Returns Type Description Task < GreenUserRole > Implements IGreenUserRoleManager"
  },
  "api/CG.Green.Managers.html": {
    "href": "api/CG.Green.Managers.html",
    "title": "Namespace CG.Green.Managers",
    "keywords": "Namespace CG.Green.Managers Classes ApiScopeManager This class is a default implementation of the IApiScopeManager interface. ClientManager This class is a default implementation of the IClientManager interface. GreenRoleManager This class is a default implementation of the IGreenRoleManager interface. GreenUserClaimManager This class is a default implementation of the IGreenUserClaimManager interface. GreenUserManager This class is a default implementation of the IGreenUserManager interface. GreenUserRoleManager This class is a default implementation of the IGreenUserRoleManager interface. IdentityResourceManager This class is a default implementation of the IIdentityResourceManager interface. ManagerException This class represents a manager related exception. Interfaces IApiScopeManager IClientManager IGreenRoleManager IGreenUserClaimManager IGreenUserManager IGreenUserRoleManager IIdentityResourceManager"
  },
  "api/CG.Green.Managers.IApiScopeManager.html": {
    "href": "api/CG.Green.Managers.IApiScopeManager.html",
    "title": "Interface IApiScopeManager",
    "keywords": "Interface IApiScopeManager Namespace : CG.Green.Managers Assembly : CG.Green.Abstractions.dll Syntax public interface IApiScopeManager Methods AnyAsync(CancellationToken) This method indicates whether there are any objects in the underlying storage. Declaration Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CountAsync(CancellationToken) This method counts the number of objects in the underlying storage. Declaration Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Int64 > A task to perform the operation that returns a count of the number of objects in the underlying storage. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CreateAsync(ApiScope, String, CancellationToken) This method creates a new object in the underlying storage. Declaration Task<ApiScope> CreateAsync(ApiScope apiScope, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description ApiScope apiScope The model to create in the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < ApiScope > A task to perform the operation that returns the newly created object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. DeleteAsync(ApiScope, String, CancellationToken) This method deletes an existing object from the underlying storage. Declaration Task DeleteAsync(ApiScope apiScope, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description ApiScope apiScope The model to delete from the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. FindAllAsync(CancellationToken) This method searches for all the objects. Declaration Task<IEnumerable<ApiScope>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IEnumerable < ApiScope >> A task to perform the operation that returns a sequence of objects. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. UpdateAsync(ApiScope, String, CancellationToken) This method updates an existing object in the underlying storage. Declaration Task<ApiScope> UpdateAsync(ApiScope apiScope, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description ApiScope apiScope The model to update in the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < ApiScope > A task to perform the operation that returns the newly updated object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation."
  },
  "api/CG.Green.Managers.IClientManager.html": {
    "href": "api/CG.Green.Managers.IClientManager.html",
    "title": "Interface IClientManager",
    "keywords": "Interface IClientManager Namespace : CG.Green.Managers Assembly : CG.Green.Abstractions.dll Syntax public interface IClientManager Methods AnyAsync(CancellationToken) This method indicates whether there are any objects in the underlying storage. Declaration Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CountAsync(CancellationToken) This method counts the number of objects in the underlying storage. Declaration Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Int64 > A task to perform the operation that returns a count of the number of objects in the underlying storage. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CreateAsync(Client, String, CancellationToken) This method creates a new object in the underlying storage. Declaration Task<Client> CreateAsync(Client client, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description Client client The model to create in the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < Client > A task to perform the operation that returns the newly created object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. DeleteAsync(Client, String, CancellationToken) This method deletes an existing object from the underlying storage. Declaration Task DeleteAsync(Client client, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description Client client The model to delete from the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. FindAllAsync(CancellationToken) This method searches for all the objects. Declaration Task<IEnumerable<Client>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IEnumerable < Client >> A task to perform the operation that returns a sequence of objects. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. FindByIdAsync(String, CancellationToken) This method searches for a matching object, by identifier. Declaration Task<Client?> FindByIdAsync(string clientId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String clientId The client identifier to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Nullable < Client >> A task to perform the operation that returns a object, if a match was found, or NULL otherwise. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. UpdateAsync(Client, String, CancellationToken) This method updates an existing object in the underlying storage. Declaration Task<Client> UpdateAsync(Client client, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description Client client The model to update in the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < Client > A task to perform the operation that returns the newly updated object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation."
  },
  "api/CG.Green.Managers.IdentityResourceManager.html": {
    "href": "api/CG.Green.Managers.IdentityResourceManager.html",
    "title": "Class IdentityResourceManager",
    "keywords": "Class IdentityResourceManager This class is a default implementation of the IIdentityResourceManager interface. Inheritance System.Object IdentityResourceManager Implements IIdentityResourceManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Managers Assembly : CG.Green.dll Syntax class IdentityResourceManager : IIdentityResourceManager Constructors IdentityResourceManager(IIdentityResourceRepository, ILogger<IIdentityResourceManager>) This constructor creates a new instance of the IdentityResourceManager class. Declaration public IdentityResourceManager(IIdentityResourceRepository identityResourceRepository, ILogger<IIdentityResourceManager> logger) Parameters Type Name Description IIdentityResourceRepository identityResourceRepository The identity resource repository to use with this manager. ILogger < IIdentityResourceManager > logger The logger to use with this manager. Fields _identityResourceRepository This field contains the identity resource repository for this manager. Declaration protected readonly IIdentityResourceRepository _identityResourceRepository Field Value Type Description IIdentityResourceRepository _logger This field contains the logger for this manager. Declaration protected readonly ILogger<IIdentityResourceManager> _logger Field Value Type Description ILogger < IIdentityResourceManager > Methods AnyAsync(CancellationToken) Declaration public virtual async Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean > CountAsync(CancellationToken) Declaration public virtual async Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int64 > CreateAsync(IdentityResource, String, CancellationToken) Declaration public virtual async Task<IdentityResource> CreateAsync(IdentityResource identityResource, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description IdentityResource identityResource System.String userName CancellationToken cancellationToken Returns Type Description Task < IdentityResource > DeleteAsync(IdentityResource, String, CancellationToken) Declaration public virtual async Task DeleteAsync(IdentityResource identityResource, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description IdentityResource identityResource System.String userName CancellationToken cancellationToken Returns Type Description Task FindAllAsync(CancellationToken) Declaration public virtual async Task<IEnumerable<IdentityResource>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IEnumerable < IdentityResource >> UpdateAsync(IdentityResource, String, CancellationToken) Declaration public virtual async Task<IdentityResource> UpdateAsync(IdentityResource identityResource, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description IdentityResource identityResource System.String userName CancellationToken cancellationToken Returns Type Description Task < IdentityResource > Implements IIdentityResourceManager"
  },
  "api/CG.Green.Managers.IGreenRoleManager.html": {
    "href": "api/CG.Green.Managers.IGreenRoleManager.html",
    "title": "Interface IGreenRoleManager",
    "keywords": "Interface IGreenRoleManager Namespace : CG.Green.Managers Assembly : CG.Green.Abstractions.dll Syntax public interface IGreenRoleManager Methods AnyAsync(CancellationToken) This method indicates whether there are any objects in the underlying storage. Declaration Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CountAsync(CancellationToken) This method counts the number of objects in the underlying storage. Declaration Task<int> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Int32 > A task to perform the operation that returns a count of the number of objects in the underlying storage. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CreateAsync(GreenRole, String, CancellationToken) This method creates a new object in the underlying storage. Declaration Task<GreenRole> CreateAsync(GreenRole client, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description GreenRole client The model to create in the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < GreenRole > A task to perform the operation that returns the newly created object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. DeleteAsync(GreenRole, String, CancellationToken) This method deletes an existing object from the underlying storage. Declaration Task DeleteAsync(GreenRole client, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description GreenRole client The model to delete from the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. FindAllAsync(CancellationToken) This method searches for all the objects. Declaration Task<IEnumerable<GreenRole>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IEnumerable < GreenRole >> A task to perform the operation that returns a sequence of objects. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. UpdateAsync(GreenRole, String, CancellationToken) This method updates an existing object in the underlying storage. Declaration Task<GreenRole> UpdateAsync(GreenRole client, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description GreenRole client The model to update in the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < GreenRole > A task to perform the operation that returns the newly updated object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation."
  },
  "api/CG.Green.Managers.IGreenUserClaimManager.html": {
    "href": "api/CG.Green.Managers.IGreenUserClaimManager.html",
    "title": "Interface IGreenUserClaimManager",
    "keywords": "Interface IGreenUserClaimManager Namespace : CG.Green.Managers Assembly : CG.Green.Abstractions.dll Syntax public interface IGreenUserClaimManager Methods AnyAsync(CancellationToken) This method indicates whether there are any objects in the underlying storage. Declaration Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CountAsync(CancellationToken) This method counts the number of objects in the underlying storage. Declaration Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Int64 > A task to perform the operation that returns a count of the number of objects in the underlying storage. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CreateAsync(GreenUserClaim, String, CancellationToken) This method creates a new object in the underlying storage. Declaration Task<GreenUserClaim> CreateAsync(GreenUserClaim userClaim, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description GreenUserClaim userClaim The model to use for the operation. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < GreenUserClaim > A task to perform the operation that returns the newly created object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CreateAsync(String, String, String, String, CancellationToken) This method creates a new object in the underlying storage. Declaration Task<GreenUserClaim> CreateAsync(string userEmail, string claimType, string claimValue, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userEmail The user email to use for the operation. System.String claimType The claim type to use for the operation. System.String claimValue The claim value to use for the operation. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < GreenUserClaim > A task to perform the operation that returns the newly created object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation."
  },
  "api/CG.Green.Managers.IGreenUserManager.html": {
    "href": "api/CG.Green.Managers.IGreenUserManager.html",
    "title": "Interface IGreenUserManager",
    "keywords": "Interface IGreenUserManager Namespace : CG.Green.Managers Assembly : CG.Green.Abstractions.dll Syntax public interface IGreenUserManager Methods AnyAsync(CancellationToken) This method indicates whether there are any objects in the underlying storage. Declaration Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CountAsync(CancellationToken) This method counts the number of objects in the underlying storage. Declaration Task<int> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Int32 > A task to perform the operation that returns a count of the number of objects in the underlying storage. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CreateAsync(GreenUser, String, String, CancellationToken) This method creates a new object in the underlying storage. Declaration Task<GreenUser> CreateAsync(GreenUser greenUser, string password, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description GreenUser greenUser The model to create in the underlying storage. System.String password The password to use for the operation. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < GreenUser > A task to perform the operation that returns the newly created object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. DeleteAsync(GreenUser, String, CancellationToken) This method deletes an existing object from the underlying storage. Declaration Task DeleteAsync(GreenUser greenUser, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description GreenUser greenUser The model to delete from the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. FindAllAsync(CancellationToken) This method searches for all the objects. Declaration Task<IEnumerable<GreenUser>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IEnumerable < GreenUser >> A task to perform the operation that returns a sequence of objects. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. UpdateAsync(GreenUser, String, CancellationToken) This method updates an existing object in the underlying storage. Declaration Task<GreenUser> UpdateAsync(GreenUser greenUser, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description GreenUser greenUser The model to update in the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < GreenUser > A task to perform the operation that returns the newly updated object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation."
  },
  "api/CG.Green.Managers.IGreenUserRoleManager.html": {
    "href": "api/CG.Green.Managers.IGreenUserRoleManager.html",
    "title": "Interface IGreenUserRoleManager",
    "keywords": "Interface IGreenUserRoleManager Namespace : CG.Green.Managers Assembly : CG.Green.Abstractions.dll Syntax public interface IGreenUserRoleManager Methods AnyAsync(CancellationToken) This method indicates whether there are any objects in the underlying storage. Declaration Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CountAsync(CancellationToken) This method counts the number of objects in the underlying storage. Declaration Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Int64 > A task to perform the operation that returns a count of the number of objects in the underlying storage. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CreateAsync(GreenUserRole, String, CancellationToken) This method creates a new object in the underlying storage. Declaration Task<GreenUserRole> CreateAsync(GreenUserRole userRole, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description GreenUserRole userRole The model to use for the operation. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < GreenUserRole > A task to perform the operation that returns the newly created object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CreateAsync(String, String, String, CancellationToken) This method creates a new object in the underlying storage. Declaration Task<GreenUserRole> CreateAsync(string userEmail, string roleName, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userEmail The user email to use for the operation. System.String roleName The role name to use for the operation. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < GreenUserRole > A task to perform the operation that returns the newly created object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation."
  },
  "api/CG.Green.Managers.IIdentityResourceManager.html": {
    "href": "api/CG.Green.Managers.IIdentityResourceManager.html",
    "title": "Interface IIdentityResourceManager",
    "keywords": "Interface IIdentityResourceManager Namespace : CG.Green.Managers Assembly : CG.Green.Abstractions.dll Syntax public interface IIdentityResourceManager Methods AnyAsync(CancellationToken) This method indicates whether there are any objects in the underlying storage. Declaration Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CountAsync(CancellationToken) This method counts the number of objects in the underlying storage. Declaration Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Int64 > A task to perform the operation that returns a count of the number of objects in the underlying storage. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CreateAsync(IdentityResource, String, CancellationToken) This method creates a new object in the underlying storage. Declaration Task<IdentityResource> CreateAsync(IdentityResource identityResource, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description IdentityResource identityResource The model to create in the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IdentityResource > A task to perform the operation that returns the newly created object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. DeleteAsync(IdentityResource, String, CancellationToken) This method deletes an existing object from the underlying storage. Declaration Task DeleteAsync(IdentityResource identityResource, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description IdentityResource identityResource The model to delete from the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. FindAllAsync(CancellationToken) This method searches for all the objects. Declaration Task<IEnumerable<IdentityResource>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IEnumerable < IdentityResource >> A task to perform the operation that returns a sequence of objects. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. UpdateAsync(IdentityResource, String, CancellationToken) This method updates an existing object in the underlying storage. Declaration Task<IdentityResource> UpdateAsync(IdentityResource identityResource, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description IdentityResource identityResource The model to update in the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IdentityResource > A task to perform the operation that returns the newly updated object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation."
  },
  "api/CG.Green.Managers.ManagerException.html": {
    "href": "api/CG.Green.Managers.ManagerException.html",
    "title": "Class ManagerException",
    "keywords": "Class ManagerException This class represents a manager related exception. Inheritance System.Object ManagerException Namespace : CG.Green.Managers Assembly : CG.Green.Primitives.dll Syntax public class ManagerException : Exception Constructors ManagerException() This constructor creates a new instance of the ManagerException class. Declaration public ManagerException() ManagerException(SerializationInfo, StreamingContext) This constructor creates a new instance of the ManagerException class. Declaration public ManagerException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization info to use for the exception. StreamingContext context The streaming context to use for the exception. ManagerException(String) This constructor creates a new instance of the ManagerException class. Declaration public ManagerException(string message) Parameters Type Name Description System.String message The message to use for the exception. ManagerException(String, Exception) This constructor creates a new instance of the ManagerException class. Declaration public ManagerException(string message, Exception innerException) Parameters Type Name Description System.String message The message to use for the exception. Exception innerException An optional inner exception reference."
  },
  "api/CG.Green.Options.ApiScopeOptions.html": {
    "href": "api/CG.Green.Options.ApiScopeOptions.html",
    "title": "Class ApiScopeOptions",
    "keywords": "Class ApiScopeOptions This class contains configuration settings for seeding api scopes. Inheritance System.Object ApiScopeOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Options Assembly : CG.Green.Abstractions.dll Syntax public class ApiScopeOptions Properties ApiScopes This property contains a list of objects. Declaration public List<ApiScope> ApiScopes { get; set; } Property Value Type Description List < ApiScope >"
  },
  "api/CG.Green.Options.ClaimOptions.html": {
    "href": "api/CG.Green.Options.ClaimOptions.html",
    "title": "Class ClaimOptions",
    "keywords": "Class ClaimOptions This class contains configuration settings for seeding a claim. Inheritance System.Object ClaimOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Options Assembly : CG.Green.Abstractions.dll Syntax public class ClaimOptions Properties ClaimType This property contains the type of the claim. Declaration public string ClaimType { get; set; } Property Value Type Description System.String ClaimValue This property contains the value of the claim. Declaration public string ClaimValue { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Green.Options.ClientOptions.html": {
    "href": "api/CG.Green.Options.ClientOptions.html",
    "title": "Class ClientOptions",
    "keywords": "Class ClientOptions This class contains configuration settings for seeding clients. Inheritance System.Object ClientOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Options Assembly : CG.Green.Abstractions.dll Syntax public class ClientOptions Properties Clients This property contains a list of objects. Declaration public List<Client> Clients { get; set; } Property Value Type Description List < Client >"
  },
  "api/CG.Green.Options.GreenBllOptions.html": {
    "href": "api/CG.Green.Options.GreenBllOptions.html",
    "title": "Class GreenBllOptions",
    "keywords": "Class GreenBllOptions This class contains configuration settings for the CG.Green business logic layer. Inheritance System.Object GreenBllOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Options Assembly : CG.Green.Primitives.dll Syntax public class GreenBllOptions"
  },
  "api/CG.Green.Options.GreenRoleOptions.html": {
    "href": "api/CG.Green.Options.GreenRoleOptions.html",
    "title": "Class GreenRoleOptions",
    "keywords": "Class GreenRoleOptions This class contains configuration settings for seeding roles. Inheritance System.Object GreenRoleOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Options Assembly : CG.Green.Abstractions.dll Syntax public class GreenRoleOptions Properties Roles This property contains a list of objects. Declaration public List<GreenRole> Roles { get; set; } Property Value Type Description List < GreenRole >"
  },
  "api/CG.Green.Options.GreenUserOptions.html": {
    "href": "api/CG.Green.Options.GreenUserOptions.html",
    "title": "Class GreenUserOptions",
    "keywords": "Class GreenUserOptions This class contains configuration settings for seeding users. Inheritance System.Object GreenUserOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Options Assembly : CG.Green.Abstractions.dll Syntax public class GreenUserOptions Properties Users This property contains a list of objects. Declaration public List<GreenUser> Users { get; set; } Property Value Type Description List < GreenUser >"
  },
  "api/CG.Green.Options.html": {
    "href": "api/CG.Green.Options.html",
    "title": "Namespace CG.Green.Options",
    "keywords": "Namespace CG.Green.Options Classes ApiScopeOptions This class contains configuration settings for seeding api scopes. ClaimOptions This class contains configuration settings for seeding a claim. ClientOptions This class contains configuration settings for seeding clients. GreenBllOptions This class contains configuration settings for the CG.Green business logic layer. GreenRoleOptions This class contains configuration settings for seeding roles. GreenUserOptions This class contains configuration settings for seeding users. IdentityResourceOptions This class contains configuration settings for seeding api scopes. UserClaimAssignmentOptions This class contains configuration settings for seeding a user claim assignment. UserClaimOptions This class contains configuration settings for seeding user claim assignments. UserRoleAssignmentOptions This class contains configuration settings for seeding a user role assignment. UserRoleOptions This class contains configuration settings for seeding user role assignments."
  },
  "api/CG.Green.Options.IdentityResourceOptions.html": {
    "href": "api/CG.Green.Options.IdentityResourceOptions.html",
    "title": "Class IdentityResourceOptions",
    "keywords": "Class IdentityResourceOptions This class contains configuration settings for seeding api scopes. Inheritance System.Object IdentityResourceOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Options Assembly : CG.Green.Abstractions.dll Syntax public class IdentityResourceOptions Properties IdentityResources This property contains a list of objects. Declaration public List<IdentityResource> IdentityResources { get; set; } Property Value Type Description List < IdentityResource >"
  },
  "api/CG.Green.Options.UserClaimAssignmentOptions.html": {
    "href": "api/CG.Green.Options.UserClaimAssignmentOptions.html",
    "title": "Class UserClaimAssignmentOptions",
    "keywords": "Class UserClaimAssignmentOptions This class contains configuration settings for seeding a user claim assignment. Inheritance System.Object UserClaimAssignmentOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Options Assembly : CG.Green.Abstractions.dll Syntax public class UserClaimAssignmentOptions Properties Claims This property contains the list of claims assigned to the user. Declaration public List<ClaimOptions> Claims { get; set; } Property Value Type Description List < ClaimOptions > UserEmail This property contains the email address for a user. Declaration public string UserEmail { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Green.Options.UserClaimOptions.html": {
    "href": "api/CG.Green.Options.UserClaimOptions.html",
    "title": "Class UserClaimOptions",
    "keywords": "Class UserClaimOptions This class contains configuration settings for seeding user claim assignments. Inheritance System.Object UserClaimOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Options Assembly : CG.Green.Abstractions.dll Syntax public class UserClaimOptions Properties UserClaims This property contains a list of UserClaimAssignmentOptions objects. Declaration public List<UserClaimAssignmentOptions> UserClaims { get; set; } Property Value Type Description List < UserClaimAssignmentOptions >"
  },
  "api/CG.Green.Options.UserRoleAssignmentOptions.html": {
    "href": "api/CG.Green.Options.UserRoleAssignmentOptions.html",
    "title": "Class UserRoleAssignmentOptions",
    "keywords": "Class UserRoleAssignmentOptions This class contains configuration settings for seeding a user role assignment. Inheritance System.Object UserRoleAssignmentOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Options Assembly : CG.Green.Abstractions.dll Syntax public class UserRoleAssignmentOptions Properties RoleNames This property contains the list of assigned role names. Declaration public List<string> RoleNames { get; set; } Property Value Type Description List < System.String > UserEmail This property contains the email address for a user. Declaration public string UserEmail { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Green.Options.UserRoleOptions.html": {
    "href": "api/CG.Green.Options.UserRoleOptions.html",
    "title": "Class UserRoleOptions",
    "keywords": "Class UserRoleOptions This class contains configuration settings for seeding user role assignments. Inheritance System.Object UserRoleOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Options Assembly : CG.Green.Abstractions.dll Syntax public class UserRoleOptions Properties UserRoles This property contains a list of UserRoleAssignmentOptions objects. Declaration public List<UserRoleAssignmentOptions> UserRoles { get; set; } Property Value Type Description List < UserRoleAssignmentOptions >"
  },
  "api/CG.Green.Repositories.html": {
    "href": "api/CG.Green.Repositories.html",
    "title": "Namespace CG.Green.Repositories",
    "keywords": "Namespace CG.Green.Repositories Classes RepositoryException This class represents a repository related exception. Interfaces IApiScopeRepository This interface represents an object that manages the storage and retrieval of objects. IClientRepository This interface represents an object that manages the storage and retrieval of objects. IGreenUserClaimRepository This interface represents an object that manages the storage and retrieval of objects. IGreenUserRoleRepository This interface represents an object that manages the storage and retrieval of objects. IIdentityResourceRepository This interface represents an object that manages the storage and retrieval of objects."
  },
  "api/CG.Green.Repositories.IApiScopeRepository.html": {
    "href": "api/CG.Green.Repositories.IApiScopeRepository.html",
    "title": "Interface IApiScopeRepository",
    "keywords": "Interface IApiScopeRepository This interface represents an object that manages the storage and retrieval of objects. Namespace : CG.Green.Repositories Assembly : CG.Green.Abstractions.dll Syntax public interface IApiScopeRepository Methods AnyAsync(CancellationToken) This method indicates whether there are any objects in the underlying storage. Declaration Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. CountAsync(CancellationToken) This method counts the number of objects in the underlying storage. Declaration Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Int64 > A task to perform the operation that returns a count of the number of objects in the underlying storage. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. CreateAsync(ApiScope, CancellationToken) This method creates a new object in the underlying storage. Declaration Task<ApiScope> CreateAsync(ApiScope apiScope, CancellationToken cancellationToken = null) Parameters Type Name Description ApiScope apiScope The model to create in the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < ApiScope > A task to perform the operation that returns the newly created object. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. DeleteAsync(ApiScope, CancellationToken) This method deletes an existing object from the underlying storage. Declaration Task DeleteAsync(ApiScope apiScope, CancellationToken cancellationToken = null) Parameters Type Name Description ApiScope apiScope The model to delete from the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. FindAllAsync(CancellationToken) This method searches for all the objects. Declaration Task<IEnumerable<ApiScope>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IEnumerable < ApiScope >> A task to perform the operation that returns a sequence of objects. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. UpdateAsync(ApiScope, CancellationToken) This method updates an existing object in the underlying storage. Declaration Task<ApiScope> UpdateAsync(ApiScope apiScope, CancellationToken cancellationToken = null) Parameters Type Name Description ApiScope apiScope The model to update in the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < ApiScope > A task to perform the operation that returns the newly updated object. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation."
  },
  "api/CG.Green.Repositories.IClientRepository.html": {
    "href": "api/CG.Green.Repositories.IClientRepository.html",
    "title": "Interface IClientRepository",
    "keywords": "Interface IClientRepository This interface represents an object that manages the storage and retrieval of objects. Namespace : CG.Green.Repositories Assembly : CG.Green.Abstractions.dll Syntax public interface IClientRepository Methods AnyAsync(CancellationToken) This method indicates whether there are any objects in the underlying storage. Declaration Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. CountAsync(CancellationToken) This method counts the number of objects in the underlying storage. Declaration Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Int64 > A task to perform the operation that returns a count of the number of objects in the underlying storage. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. CreateAsync(Client, CancellationToken) This method creates a new object in the underlying storage. Declaration Task<Client> CreateAsync(Client client, CancellationToken cancellationToken = null) Parameters Type Name Description Client client The model to create in the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < Client > A task to perform the operation that returns the newly created object. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. DeleteAsync(Client, CancellationToken) This method deletes an existing object from the underlying storage. Declaration Task DeleteAsync(Client client, CancellationToken cancellationToken = null) Parameters Type Name Description Client client The model to delete from the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. FindAllAsync(CancellationToken) This method searches for all the objects. Declaration Task<IEnumerable<Client>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IEnumerable < Client >> A task to perform the operation that returns a sequence of objects. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. FindByIdAsync(String, CancellationToken) This method searches for a matching object, by identifier. Declaration Task<Client?> FindByIdAsync(string clientId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String clientId The client identifier to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Nullable < Client >> A task to perform the operation that returns a object, if a match was found, or NULL otherwise. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. UpdateAsync(Client, CancellationToken) This method updates an existing object in the underlying storage. Declaration Task<Client> UpdateAsync(Client client, CancellationToken cancellationToken = null) Parameters Type Name Description Client client The model to update in the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < Client > A task to perform the operation that returns the newly updated object. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation."
  },
  "api/CG.Green.Repositories.IGreenUserClaimRepository.html": {
    "href": "api/CG.Green.Repositories.IGreenUserClaimRepository.html",
    "title": "Interface IGreenUserClaimRepository",
    "keywords": "Interface IGreenUserClaimRepository This interface represents an object that manages the storage and retrieval of objects. Namespace : CG.Green.Repositories Assembly : CG.Green.Abstractions.dll Syntax public interface IGreenUserClaimRepository Methods AnyAsync(CancellationToken) This method indicates whether there are any objects in the underlying storage. Declaration Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. CountAsync(CancellationToken) This method counts the number of objects in the underlying storage. Declaration Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Int64 > A task to perform the operation that returns a count of the number of objects in the underlying storage. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. CreateAsync(GreenUserClaim, CancellationToken) This method creates a new object in the underlying storage. Declaration Task<GreenUserClaim> CreateAsync(GreenUserClaim userclaim, CancellationToken cancellationToken = null) Parameters Type Name Description GreenUserClaim userclaim The model to create in the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < GreenUserClaim > A task to perform the operation that returns the newly created object. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation."
  },
  "api/CG.Green.Repositories.IGreenUserRoleRepository.html": {
    "href": "api/CG.Green.Repositories.IGreenUserRoleRepository.html",
    "title": "Interface IGreenUserRoleRepository",
    "keywords": "Interface IGreenUserRoleRepository This interface represents an object that manages the storage and retrieval of objects. Namespace : CG.Green.Repositories Assembly : CG.Green.Abstractions.dll Syntax public interface IGreenUserRoleRepository Methods AnyAsync(CancellationToken) This method indicates whether there are any objects in the underlying storage. Declaration Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. CountAsync(CancellationToken) This method counts the number of objects in the underlying storage. Declaration Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Int64 > A task to perform the operation that returns a count of the number of objects in the underlying storage. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation."
  },
  "api/CG.Green.Repositories.IIdentityResourceRepository.html": {
    "href": "api/CG.Green.Repositories.IIdentityResourceRepository.html",
    "title": "Interface IIdentityResourceRepository",
    "keywords": "Interface IIdentityResourceRepository This interface represents an object that manages the storage and retrieval of objects. Namespace : CG.Green.Repositories Assembly : CG.Green.Abstractions.dll Syntax public interface IIdentityResourceRepository Methods AnyAsync(CancellationToken) This method indicates whether there are any objects in the underlying storage. Declaration Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. CountAsync(CancellationToken) This method counts the number of objects in the underlying storage. Declaration Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Int64 > A task to perform the operation that returns a count of the number of objects in the underlying storage. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. CreateAsync(IdentityResource, CancellationToken) This method creates a new object in the underlying storage. Declaration Task<IdentityResource> CreateAsync(IdentityResource identityResource, CancellationToken cancellationToken = null) Parameters Type Name Description IdentityResource identityResource The model to create in the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IdentityResource > A task to perform the operation that returns the newly created object. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. DeleteAsync(IdentityResource, CancellationToken) This method deletes an existing object from the underlying storage. Declaration Task DeleteAsync(IdentityResource identityResource, CancellationToken cancellationToken = null) Parameters Type Name Description IdentityResource identityResource The model to delete from the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. FindAllAsync(CancellationToken) This method searches for all the objects. Declaration Task<IEnumerable<IdentityResource>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IEnumerable < IdentityResource >> A task to perform the operation that returns a sequence of objects. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. UpdateAsync(IdentityResource, CancellationToken) This method updates an existing object in the underlying storage. Declaration Task<IdentityResource> UpdateAsync(IdentityResource identityResource, CancellationToken cancellationToken = null) Parameters Type Name Description IdentityResource identityResource The model to update in the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IdentityResource > A task to perform the operation that returns the newly updated object. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation."
  },
  "api/CG.Green.Repositories.RepositoryException.html": {
    "href": "api/CG.Green.Repositories.RepositoryException.html",
    "title": "Class RepositoryException",
    "keywords": "Class RepositoryException This class represents a repository related exception. Inheritance System.Object RepositoryException Namespace : CG.Green.Repositories Assembly : CG.Green.Primitives.dll Syntax public class RepositoryException : Exception Constructors RepositoryException() This constructor creates a new instance of the RepositoryException class. Declaration public RepositoryException() RepositoryException(SerializationInfo, StreamingContext) This constructor creates a new instance of the RepositoryException class. Declaration public RepositoryException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization info to use for the exception. StreamingContext context The streaming context to use for the exception. RepositoryException(String) This constructor creates a new instance of the RepositoryException class. Declaration public RepositoryException(string message) Parameters Type Name Description System.String message The message to use for the exception. RepositoryException(String, Exception) This constructor creates a new instance of the RepositoryException class. Declaration public RepositoryException(string message, Exception innerException) Parameters Type Name Description System.String message The message to use for the exception. Exception innerException An optional inner exception reference."
  },
  "api/CG.Green.Services.ClipboardService.html": {
    "href": "api/CG.Green.Services.ClipboardService.html",
    "title": "Class ClipboardService",
    "keywords": "Class ClipboardService This class performs clipboard operations. Inheritance System.Object ClipboardService Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Green.Services Assembly : CG.Green.Identity.dll Syntax public class ClipboardService Constructors ClipboardService(IJSRuntime) This constructor creates a new instance of the ClipboardService class. Declaration public ClipboardService(IJSRuntime jsInterop) Parameters Type Name Description IJSRuntime jsInterop The JS runtime to use with this service. Fields _jsInterop This field contains the JS runtime for the service. Declaration protected readonly IJSRuntime _jsInterop Field Value Type Description IJSRuntime Methods CopyToClipboard(String) This method copies the given text to the clipboard. Declaration public async Task CopyToClipboard(string text) Parameters Type Name Description System.String text The text to use for the operation. Returns Type Description Task A task to perform the operation."
  },
  "api/CG.Green.Services.html": {
    "href": "api/CG.Green.Services.html",
    "title": "Namespace CG.Green.Services",
    "keywords": "Namespace CG.Green.Services Classes ClipboardService This class performs clipboard operations. ProfileService This class is a custom implementation of PurpleEmailSender This class is a CG.Purple implementation of the interface. SmtpEmailSender This class is an SMTP implementation of the interface."
  },
  "api/CG.Green.Services.ProfileService.html": {
    "href": "api/CG.Green.Services.ProfileService.html",
    "title": "Class ProfileService",
    "keywords": "Class ProfileService This class is a custom implementation of Inheritance System.Object ProfileService Namespace : CG.Green.Services Assembly : CG.Green.Identity.dll Syntax public class ProfileService : DefaultProfileService Constructors ProfileService(ILogger<ProfileService>) This constructor creates a new instance of the ProfileService class. Declaration public ProfileService(ILogger<ProfileService> logger) Parameters Type Name Description ILogger < ProfileService > logger The logger to use with this service. Methods GetProfileDataAsync(ProfileDataRequestContext) This method adds custom claims to the profile. Declaration public override async Task GetProfileDataAsync(ProfileDataRequestContext context) Parameters Type Name Description ProfileDataRequestContext context The context to use for the operation. Returns Type Description Task A task to perform the operation."
  },
  "api/CG.Green.Services.PurpleEmailSender.html": {
    "href": "api/CG.Green.Services.PurpleEmailSender.html",
    "title": "Class PurpleEmailSender",
    "keywords": "Class PurpleEmailSender This class is a CG.Purple implementation of the interface. Inheritance System.Object PurpleEmailSender Namespace : CG.Green.Services Assembly : CG.Green.Identity.dll Syntax public class PurpleEmailSender : IEmailSender Constructors PurpleEmailSender(IPurpleHttpClientFactory, IOptions<GreenIdentityOptions>, ILogger<PurpleEmailSender>) This constructor creates a new instance of the PurpleEmailSender class. Declaration public PurpleEmailSender(IPurpleHttpClientFactory purpleClientFactory, IOptions<GreenIdentityOptions> options, ILogger<PurpleEmailSender> logger) Parameters Type Name Description IPurpleHttpClientFactory purpleClientFactory The factory for creating CG.Purple REST clients for this service. IOptions < GreenIdentityOptions > options The options for this service. ILogger < PurpleEmailSender > logger The logger to use with this service. Fields _logger This field contains the options for this service. Declaration protected readonly ILogger<PurpleEmailSender> _logger Field Value Type Description ILogger < PurpleEmailSender > _options This field contains the email options for this service. Declaration protected readonly EmailOptions? _options Field Value Type Description System.Nullable < EmailOptions > _purpleClientFactory This field contains the CG.Purple client factory for this service. Declaration protected readonly IPurpleHttpClientFactory _purpleClientFactory Field Value Type Description IPurpleHttpClientFactory Methods SendEmailAsync(String, String, String) Declaration public virtual async Task SendEmailAsync(string email, string subject, string htmlMessage) Parameters Type Name Description System.String email System.String subject System.String htmlMessage Returns Type Description Task"
  },
  "api/CG.Green.Services.SmtpEmailSender.html": {
    "href": "api/CG.Green.Services.SmtpEmailSender.html",
    "title": "Class SmtpEmailSender",
    "keywords": "Class SmtpEmailSender This class is an SMTP implementation of the interface. Inheritance System.Object SmtpEmailSender Namespace : CG.Green.Services Assembly : CG.Green.Identity.dll Syntax public class SmtpEmailSender : IEmailSender Constructors SmtpEmailSender(SmtpClient, IOptions<GreenIdentityOptions>, ILogger<SmtpEmailSender>) This constructor creates a new instance of the SmtpEmailSender class. Declaration public SmtpEmailSender(SmtpClient smtpClient, IOptions<GreenIdentityOptions> options, ILogger<SmtpEmailSender> logger) Parameters Type Name Description System.Net.Mail.SmtpClient smtpClient The SMTP client to use with this service. IOptions < GreenIdentityOptions > options The options for this service. ILogger < SmtpEmailSender > logger The logger to use with this service. Fields _logger This field contains the options for this service. Declaration protected readonly ILogger<SmtpEmailSender> _logger Field Value Type Description ILogger < SmtpEmailSender > _options This field contains the email options for this service. Declaration protected readonly EmailOptions? _options Field Value Type Description System.Nullable < EmailOptions > _smtpClient This field contains the client for this service. Declaration protected readonly SmtpClient _smtpClient Field Value Type Description System.Net.Mail.SmtpClient Methods SendEmailAsync(String, String, String) Declaration public virtual Task SendEmailAsync(string email, string subject, string htmlMessage) Parameters Type Name Description System.String email System.String subject System.String htmlMessage Returns Type Description Task"
  },
  "api/CG.Green.Swagger.html": {
    "href": "api/CG.Green.Swagger.html",
    "title": "Namespace CG.Green.Swagger",
    "keywords": "Namespace CG.Green.Swagger Classes SwaggerConfiguration This class is a default implementation of the interface. SwaggerDefaultValues This class is a default implementation of the interface."
  },
  "api/CG.Green.Swagger.SwaggerConfiguration.html": {
    "href": "api/CG.Green.Swagger.SwaggerConfiguration.html",
    "title": "Class SwaggerConfiguration",
    "keywords": "Class SwaggerConfiguration This class is a default implementation of the interface. Inheritance System.Object SwaggerConfiguration Namespace : CG.Green.Swagger Assembly : CG.Green.Controllers.dll Syntax class SwaggerConfiguration : IConfigureOptions<SwaggerGenOptions> Constructors SwaggerConfiguration(IApiVersionDescriptionProvider) This constructor creates a new instance of the SwaggerConfiguration class. Declaration public SwaggerConfiguration(IApiVersionDescriptionProvider provider) Parameters Type Name Description IApiVersionDescriptionProvider provider The _provider to use with this configurator. Fields _provider This field contains the _provider for this configurator. Declaration protected readonly IApiVersionDescriptionProvider _provider Field Value Type Description IApiVersionDescriptionProvider Methods Configure(SwaggerGenOptions) Declaration public void Configure(SwaggerGenOptions options) Parameters Type Name Description SwaggerGenOptions options CreateInfoForApiVersion(ApiVersionDescription) This method creates a Swagger document for the given API version. Declaration static OpenApiInfo CreateInfoForApiVersion(ApiVersionDescription description) Parameters Type Name Description ApiVersionDescription description The swagger description to use for the operation. Returns Type Description OpenApiInfo An instance."
  },
  "api/CG.Green.Swagger.SwaggerDefaultValues.html": {
    "href": "api/CG.Green.Swagger.SwaggerDefaultValues.html",
    "title": "Class SwaggerDefaultValues",
    "keywords": "Class SwaggerDefaultValues This class is a default implementation of the interface. Inheritance System.Object SwaggerDefaultValues Namespace : CG.Green.Swagger Assembly : CG.Green.Controllers.dll Syntax class SwaggerDefaultValues : IOperationFilter Methods Apply(OpenApiOperation, OperationFilterContext) This method applies a filter to the specified operation using the given context. Declaration public void Apply(OpenApiOperation operation, OperationFilterContext context) Parameters Type Name Description OpenApiOperation operation The operation to apply the filter to. OperationFilterContext context The current operation filter context."
  },
  "api/CG.Templates.html": {
    "href": "api/CG.Templates.html",
    "title": "Namespace CG.Templates",
    "keywords": "Namespace CG.Templates Classes TemplateProcessor This class performs template processing."
  },
  "api/CG.Templates.TemplateProcessor.html": {
    "href": "api/CG.Templates.TemplateProcessor.html",
    "title": "Class TemplateProcessor",
    "keywords": "Class TemplateProcessor This class performs template processing. Inheritance System.Object TemplateProcessor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Templates Assembly : CG.Green.Identity.dll Syntax public class TemplateProcessor Methods ProcessTemplate(String, Dictionary<String, String>, String, String) This method processes the given text, replacing any matching tokens from the given dictionary to produce a populated template. Declaration public virtual string ProcessTemplate(string template, Dictionary<string, string> tokens, string startDelimiter = \"{{\", string endDelimiter = \"}}\") Parameters Type Name Description System.String template The incoming template text. Dictionary < System.String , System.String > tokens The list of named replacement tokens. System.String startDelimiter The starting symbol(s) used to detect the start of a replacement token in the template. System.String endDelimiter The ending symbol(s) used to detect the start of a replacement token in the template. Returns Type Description System.String The populate template string. ProcessTemplateFromFileAsync(String, Dictionary<String, String>, String, String, CancellationToken) This method processes the given file, replacing any matching tokens from the given dictionary to produce a populated template. Declaration public virtual async Task<string> ProcessTemplateFromFileAsync(string templatePath, Dictionary<string, string> tokens, string startDelimiter = \"{{\", string endDelimiter = \"}}\", CancellationToken cancellationToken = null) Parameters Type Name Description System.String templatePath The path of the incoming template file. Dictionary < System.String , System.String > tokens The list of named replacement tokens. System.String startDelimiter The starting symbol(s) used to detect the start of a replacement token in the template. System.String endDelimiter The ending symbol(s) used to detect the start of a replacement token in the template. CancellationToken cancellationToken A cancellation token that is monitored throughout the lifetime of the method. Returns Type Description Task < System.String > A task to perform the operation that returns the processed template text."
  },
  "api/Microsoft.AspNetCore.Builder.html": {
    "href": "api/Microsoft.AspNetCore.Builder.html",
    "title": "Namespace Microsoft.AspNetCore.Builder",
    "keywords": "Namespace Microsoft.AspNetCore.Builder Classes WebApplicationBuilderExtensions001 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. WebApplicationBuilderExtensions002 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. WebApplicationBuilderExtensions003 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. WebApplicationBuilderExtensions004 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. WebApplicationBuilderExtensions005 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. WebApplicationBuilderExtensions006 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. WebApplicationBuilderExtensions007 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. WebApplicationExtensions001 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplication type. WebApplicationExtensions002 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplication type. WebApplicationExtensions003 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplication type. WebApplicationExtensions004 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplication type."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions001.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions001.html",
    "title": "Class WebApplicationBuilderExtensions001",
    "keywords": "Class WebApplicationBuilderExtensions001 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. Inheritance System.Object WebApplicationBuilderExtensions001 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Green.dll Syntax public static class WebApplicationBuilderExtensions001 Methods AddGreenManagers(WebApplicationBuilder, String, Nullable<ILogger>) This method adds managers, directors, and related services, for the CG.Green business logic layer. Declaration public static WebApplicationBuilder AddGreenManagers(this WebApplicationBuilder webApplicationBuilder, string sectionName = \"BLL\", ILogger? bootstrapLogger = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. System.String sectionName The configuration section to use for the operation. Defaults to BLL . System.Nullable < ILogger > bootstrapLogger The bootstrap logger to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions002.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions002.html",
    "title": "Class WebApplicationBuilderExtensions002",
    "keywords": "Class WebApplicationBuilderExtensions002 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. Inheritance System.Object WebApplicationBuilderExtensions002 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Green.Controllers.dll Syntax public static class WebApplicationBuilderExtensions002 Methods AddGreenControllers(WebApplicationBuilder, String, Nullable<ILogger>) This method adds REST controllers for the CG.Green service layer. Declaration public static WebApplicationBuilder AddGreenControllers(this WebApplicationBuilder webApplicationBuilder, string sectionName = \"CTRL\", ILogger? bootstrapLogger = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. System.String sectionName The configuration section to use for the operation. Defaults to CTRL . System.Nullable < ILogger > bootstrapLogger The bootstrap logger to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions003.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions003.html",
    "title": "Class WebApplicationBuilderExtensions003",
    "keywords": "Class WebApplicationBuilderExtensions003 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. Inheritance System.Object WebApplicationBuilderExtensions003 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Green.Data.InMemory.dll Syntax public static class WebApplicationBuilderExtensions003 Methods AddInMemoryDataAccess(WebApplicationBuilder, String, Nullable<ILogger>) This method adds required services for this in-memory provider. Declaration public static WebApplicationBuilder AddInMemoryDataAccess(this WebApplicationBuilder webApplicationBuilder, string sectionName = \"DAL:InMemory\", ILogger? bootstrapLogger = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. System.String sectionName The configuration section to use for the operation. Defaults to DAL:InMemory . System.Nullable < ILogger > bootstrapLogger A bootstrap logger to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style. Remarks This method must NOT have its signature changed! The method follows a convention used by the CG.EntityFrameworkCore package."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions004.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions004.html",
    "title": "Class WebApplicationBuilderExtensions004",
    "keywords": "Class WebApplicationBuilderExtensions004 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. Inheritance System.Object WebApplicationBuilderExtensions004 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Green.Data.Sqlite.dll Syntax public static class WebApplicationBuilderExtensions004 Methods AddSqliteDataAccess(WebApplicationBuilder, String, Nullable<ILogger>) This method adds required services for this SQLite provider. Declaration public static WebApplicationBuilder AddSqliteDataAccess(this WebApplicationBuilder webApplicationBuilder, string sectionName = \"DAL:Sqlite\", ILogger? bootstrapLogger = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. System.String sectionName The configuration section to use for the operation. Defaults to DAL:Sqlite . System.Nullable < ILogger > bootstrapLogger A bootstrap logger to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style. Remarks This method must NOT have its signature changed! The method follows a convention used by the CG.EntityFrameworkCore package."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions005.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions005.html",
    "title": "Class WebApplicationBuilderExtensions005",
    "keywords": "Class WebApplicationBuilderExtensions005 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. Inheritance System.Object WebApplicationBuilderExtensions005 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Green.Data.SqlServer.dll Syntax public static class WebApplicationBuilderExtensions005 Methods AddSqlServerDataAccess(WebApplicationBuilder, String, Nullable<ILogger>) This method adds required services for this SQLServer provider. Declaration public static WebApplicationBuilder AddSqlServerDataAccess(this WebApplicationBuilder webApplicationBuilder, string sectionName = \"DAL:SqlServer\", ILogger? bootstrapLogger = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. System.String sectionName The configuration section to use for the operation. Defaults to DAL:SqlServer . System.Nullable < ILogger > bootstrapLogger A bootstrap logger to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style. Remarks This method must NOT have its signature changed! The method follows a convention used by the CG.EntityFrameworkCore package."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions006.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions006.html",
    "title": "Class WebApplicationBuilderExtensions006",
    "keywords": "Class WebApplicationBuilderExtensions006 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. Inheritance System.Object WebApplicationBuilderExtensions006 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Green.Data.dll Syntax public static class WebApplicationBuilderExtensions006 Methods AddGreenRepositories(WebApplicationBuilder, String, Nullable<ILogger>) This method adds repositories and related services, for the CG.Green data-access layer. Declaration public static WebApplicationBuilder AddGreenRepositories(this WebApplicationBuilder webApplicationBuilder, string sectionName = \"DAL\", ILogger? bootstrapLogger = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. System.String sectionName The configuration section to use for the operation. Defaults to DAL . System.Nullable < ILogger > bootstrapLogger A bootstrap logger to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions007.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions007.html",
    "title": "Class WebApplicationBuilderExtensions007",
    "keywords": "Class WebApplicationBuilderExtensions007 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. Inheritance System.Object WebApplicationBuilderExtensions007 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Green.Identity.dll Syntax public static class WebApplicationBuilderExtensions007 Methods AddGreenIdentity(WebApplicationBuilder, String, Nullable<ILogger>) This method adds the ASP.NET and Duende identity services required for the operation of the CG.Green microservice. Declaration public static WebApplicationBuilder AddGreenIdentity(this WebApplicationBuilder webApplicationBuilder, string sectionName = \"Identity\", ILogger? bootstrapLogger = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. System.String sectionName The configuration section to use for the operation. Defaults to Identity . System.Nullable < ILogger > bootstrapLogger The bootstrap logger to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationExtensions001.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationExtensions001.html",
    "title": "Class WebApplicationExtensions001",
    "keywords": "Class WebApplicationExtensions001 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplication type. Inheritance System.Object WebApplicationExtensions001 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Green.Controllers.dll Syntax public static class WebApplicationExtensions001 Methods UseGreenControllers(WebApplication) This method registers any middleware or startup code required for the CG.Green service layer. Declaration public static WebApplication UseGreenControllers(this WebApplication webApplication) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplication webApplication The web application builder to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplication The value of the webApplication parameter, for chaining calls together, Fluent style"
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationExtensions002.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationExtensions002.html",
    "title": "Class WebApplicationExtensions002",
    "keywords": "Class WebApplicationExtensions002 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplication type. Inheritance System.Object WebApplicationExtensions002 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Green.Data.Sqlite.dll Syntax public static class WebApplicationExtensions002 Methods DropAndRecreateDatabaseAsync(WebApplication, CancellationToken) This method drops and recreates the database. Declaration static async Task DropAndRecreateDatabaseAsync(this WebApplication webApplication, CancellationToken cancellationToken = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplication webApplication The web application to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored throughout the lifetime of the method. Returns Type Description Task A task to perform the operation. MigrateDatabaseAsync(WebApplication, CancellationToken) This method migrates the database. project. Declaration static async Task MigrateDatabaseAsync(this WebApplication webApplication, CancellationToken cancellationToken = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplication webApplication The web application to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the life of the operation. Returns Type Description Task A task to perform the operation. UseSqliteDataAccess(WebApplication) This method performs startup operations for this SQLite provider. Declaration public static WebApplication UseSqliteDataAccess(this WebApplication webApplication) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplication webApplication The web application to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplication The value of the webApplication parameter, for chaining calls together, Fluent style. Remarks This method must NOT have its signature changed! The method follows a convention used by the CG.EntityFrameworkCore package."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationExtensions003.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationExtensions003.html",
    "title": "Class WebApplicationExtensions003",
    "keywords": "Class WebApplicationExtensions003 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplication type. Inheritance System.Object WebApplicationExtensions003 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Green.Data.SqlServer.dll Syntax public static class WebApplicationExtensions003 Methods DropAndRecreateDatabaseAsync(WebApplication, CancellationToken) This method drops and recreates the database for the CG.Green microservice. Declaration static async Task DropAndRecreateDatabaseAsync(this WebApplication webApplication, CancellationToken cancellationToken = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplication webApplication The web application to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored throughout the lifetime of the method. Returns Type Description Task A task to perform the operation. MigrateDatabaseAsync(WebApplication, CancellationToken) This method migrates the various data-contexts in the CG.Green microservice. Declaration static async Task MigrateDatabaseAsync(this WebApplication webApplication, CancellationToken cancellationToken = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplication webApplication The web application to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the life of the operation. Returns Type Description Task A task to perform the operation. UseSqlServerDataAccess(WebApplication) This method performs startup operations for this SQLServer provider. Declaration public static WebApplication UseSqlServerDataAccess(this WebApplication webApplication) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplication webApplication The web application to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplication The value of the webApplication parameter, for chaining calls together, Fluent style. Remarks This method must NOT have its signature changed! The method follows a convention used by the CG.EntityFrameworkCore package."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationExtensions004.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationExtensions004.html",
    "title": "Class WebApplicationExtensions004",
    "keywords": "Class WebApplicationExtensions004 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplication type. Inheritance System.Object WebApplicationExtensions004 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Green.Identity.dll Syntax public static class WebApplicationExtensions004 Methods UseGreenIdentity(WebApplication) This method adds middleware and startup logic for the CG.Green identity layer. Declaration public static WebApplication UseGreenIdentity(this WebApplication webApplication) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplication webApplication The web application to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplication The value of the webApplication parameter, for chaining calls together, Fluent style."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Green is an idea for an identity microservice."
  }
}